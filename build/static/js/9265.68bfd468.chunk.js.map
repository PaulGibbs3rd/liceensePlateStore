{"version":3,"file":"static/js/9265.68bfd468.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/components/src/utils/math.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.scss?tag=calcite-tab&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isShorthandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\nimport { CSS } from \"./resources\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    if (isShorthandHex(hex, this.alphaChannel)) {\n      // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n      this.onHexInputChange();\n    }\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onOpacityInputInput = (): void => {\n    this.onOpacityInputChange();\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onInputFocus = (event: Event): void => {\n    event.type === \"calciteInternalInputTextFocus\"\n      ? this.hexInputNode.selectText()\n      : this.opacityInputNode.selectText();\n  };\n\n  private onHexInputInput = (): void => {\n    const hexInputValue = `#${this.hexInputNode.value}`;\n    const oldValue = this.value;\n\n    if (\n      isValidHex(hexInputValue, this.alphaChannel) &&\n      isLonghandHex(hexInputValue, this.alphaChannel)\n    ) {\n      this.internalSetValue(hexInputValue, oldValue);\n    }\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if ((key === \"Tab\" && isShorthandHex(value, this.alphaChannel)) || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n      this.internalSetValue(hex, this.value);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={this.alphaChannel ? 8 : 6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInputTextInput={this.onHexInputInput}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onCalciteInternalInputTextFocus={this.onInputFocus}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          ref={this.storeHexInputRef}\n          scale={inputScale}\n          value={hexInputValue}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberInput={this.onOpacityInputInput}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onCalciteInternalInputNumberFocus={this.onInputFocus}\n            onKeyDown={this.onInputKeyDown}\n            ref={this.storeOpacityInputRef}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n",":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport {\n  Direction,\n  focusFirstTabbable,\n  getElementDir,\n  isPrimaryPointerButton,\n} from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  getSliderWidth,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   *\n   * @deprecated Use `clearable` instead\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  @Watch(\"allowEmpty\")\n  @Watch(\"clearable\")\n  handleAllowEmptyOrClearableChange(): void {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"dimensions\")\n  handleAlphaChannelDimensionsChange(): void {\n    this.effectiveSliderWidth = getSliderWidth(this.dimensions, this.alphaChannel);\n    this.drawColorControls();\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/dev/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      isClearable && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private effectiveSliderWidth: number;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private isActiveChannelInputEmpty: boolean = false;\n\n  private isClearable: boolean;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  private upOrDownArrowKeyTracker: \"down\" | \"up\" | null = null;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (!input.value) {\n      inputValue = \"\";\n      this.isActiveChannelInputEmpty = true;\n      // reset this to allow typing in new value, when channel input is cleared after ArrowUp or ArrowDown have been pressed\n      this.upOrDownArrowKeyTracker = null;\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    } else if (inputValue !== \"\") {\n      this.handleChannelChange(event);\n    }\n  };\n\n  private handleChannelBlur = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n    const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n\n    if (restoreValueDueToEmptyInput) {\n      input.value = channels[channelIndex]?.toString();\n    }\n  };\n\n  handleChannelFocus = (event: Event): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    input.selectText();\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n\n    if (key === \"ArrowUp\") {\n      this.upOrDownArrowKeyTracker = \"up\";\n    }\n    if (key === \"ArrowDown\") {\n      this.upOrDownArrowKeyTracker = \"down\";\n    }\n  }\n\n  private getChannelInputLimit(channelIndex: number): number {\n    return this.channelMode === \"rgb\"\n      ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n      : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.isClearable && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n\n    if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n      input.value =\n        this.upOrDownArrowKeyTracker === \"up\"\n          ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex)\n              ? channels[channelIndex] + 1\n              : this.getChannelInputLimit(channelIndex)\n            ).toString()\n          : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n      this.isActiveChannelInputEmpty = false;\n      this.upOrDownArrowKeyTracker = null;\n    }\n    const value = input.value ? Number(input.value) : channels[channelIndex];\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.colorFieldRenderingContext,\n      this.captureColorFieldColor,\n      this.colorFieldScopeNode,\n    );\n  };\n\n  private focusScope(focusEl: HTMLElement): void {\n    requestAnimationFrame(() => {\n      focusEl.focus();\n    });\n  }\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.hueSliderRenderingContext,\n      this.captureHueSliderColor,\n      this.hueScopeNode,\n    );\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.opacitySliderRenderingContext,\n      this.captureOpacitySliderValue,\n      this.opacityScopeNode,\n    );\n  };\n\n  private handleCanvasControlPointerDown(\n    event: PointerEvent,\n    renderingContext: CanvasRenderingContext2D,\n    captureValue: (offsetX: number, offsetY?: number) => void,\n    scopeNode: HTMLElement,\n  ): void {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: renderingContext,\n      bounds: renderingContext.canvas.getBoundingClientRect(),\n    };\n\n    captureValue.call(this, event.offsetX, event.offsetY);\n    this.focusScope(scopeNode);\n  }\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    this.handleAllowEmptyOrClearableChange();\n    this.handleAlphaChannelDimensionsChange();\n\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n\n    const sliderWidth = this.effectiveSliderWidth;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              ref={this.storeColorFieldScope}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch\n              class={CSS.preview}\n              color={selectedColorInHex}\n              scale={this.alphaChannel ? \"l\" : this.scale}\n            />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  ref={this.storeHueScope}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    ref={this.storeOpacityScope}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={this.isClearable}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onCalciteInternalInputNumberBlur={this.handleChannelBlur}\n        onCalciteInternalInputNumberFocus={this.handleChannelFocus}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const hue = (HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / this.effectiveSliderWidth) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: this.effectiveSliderWidth,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n",":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.color-field,\n.control-and-scope {\n  user-select: none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 6px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n  gap: var(--calcite-spacing-xxs);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export const clamp = (value: number, min: number, max: number): number => Math.max(min, Math.min(value, max));\n\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n/**\n * Returns the quantity of real decimal places for a number, which excludes trailing zeros.\n *\n * Adapted from {@link https://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number}.\n *\n * @param decimal - decimal value\n * @param value\n * @returns {number} the amount of decimal places in a number\n */\nexport const decimalPlaces = (value: number | string): number => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n};\n\nexport function getDecimals(value: number): number {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\n\nexport function remap(value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number {\n  return ((value - fromMin) * (toMax - toMin)) / (fromMax - fromMin) + toMin;\n}\n\n/**\n * Helper to determine if a value is close to the edge of a range within a threshold.\n *\n * @param value\n * @param range\n * @param threshold\n * @returns -1 if close to lower edge, 1 if close to upper edge, 0 otherwise.\n */\nexport function closeToRangeEdge(value: number, range: number, threshold: number): number {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\n","export const CSS = {\n  container: \"container\",\n  content: \"content\",\n};\n","import { Component, Element, h, Host, Listen, Method, Prop, State, VNode } from \"@stencil/core\";\nimport { nodeListToArray } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { TabChangeEventDetail } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-tab\",\n  styleUrl: \"tab.scss\",\n  shadow: true,\n})\nexport class Tab {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies a unique name for the component.\n   *\n   * When specified, use the same value on the `calcite-tab-title`.\n   */\n  @Prop({ reflect: true }) tab: string;\n\n  /**\n   * When `true`, the component's contents are selected.\n   *\n   * Only one tab can be selected within the `calcite-tabs` parent.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n\n    return (\n      <Host aria-labelledby={this.labeledBy} id={id}>\n        <div\n          class={{ [CSS.container]: true, [`scale-${this.scale}`]: true }}\n          role=\"tabpanel\"\n          tabIndex={this.selected ? 0 : -1}\n        >\n          <section class={CSS.content}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n\n  disconnectedCallback(): void {\n    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.\n    document.body?.dispatchEvent(\n      new CustomEvent(\"calciteTabUnregister\", {\n        detail: this.el,\n      }),\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  internalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    const targetTabsEl = event\n      .composedPath()\n      .find((el: HTMLElement) => el.tagName === \"CALCITE-TABS\");\n\n    // to allow `<calcite-tabs>` to be nested we need to make sure this\n    // `calciteTabChange` event was actually fired from a within the same\n    // `<calcite-tabs>` that is the a parent of this tab.\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Returns the index of the component item within the tab array.\n   */\n  @Method()\n  async getTabIndex(): Promise<number> {\n    return Array.prototype.indexOf.call(\n      nodeListToArray(this.el.parentElement.children).filter((el) => el.matches(\"calcite-tab\")),\n      this.el,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabElement;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  guid = `calcite-tab-title-${guid()}`;\n\n  @State() labeledBy: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param tabIds\n   * @param titleIds\n   * @internal\n   */\n  @Method()\n  async updateAriaInfo(tabIds: string[] = [], titleIds: string[] = []): Promise<void> {\n    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tab-content-block-padding: Specifies the block padding of the component's content in the `default` slot.\n */\n\n:host([selected]) {\n  section,\n  .container {\n    @apply block;\n  }\n}\n\n:host {\n  @apply hidden h-full w-full;\n}\n\n:host([selected]) {\n  @apply block h-full w-full overflow-auto;\n}\n\n.content {\n  @apply box-border;\n  padding-block: var(--calcite-internal-tab-content-block-padding);\n}\n\n.scale-s {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.1\"));\n  @apply text-n2h;\n}\n\n.scale-m {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.2\"));\n  @apply text-n1h;\n}\n\n.scale-l {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.[2.5]\"));\n  @apply text-0h;\n}\n\nsection,\n.container {\n  @apply hidden h-full w-full;\n}\n\n.container {\n  @apply focus-base;\n\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n@include base-component();\n","export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { getSlotAssignedElements, slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabNavSlotChange\")\n  calciteInternalTabNavSlotChangeHandler(event: CustomEvent): void {\n    event.stopPropagation();\n    if (event.detail.length !== this.titles.length) {\n      this.titles = event.detail;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  private defaultSlotChangeHandler = (event): void => {\n    this.tabs = slotChangeGetAssignedElements(event, \"calcite-tab\") as HTMLCalciteTabElement[];\n  };\n\n  private slotEl: HTMLSlotElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  @Watch(\"titles\")\n  titlesWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  @Watch(\"tabs\")\n  tabsWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async updateAriaSettings(): Promise<void> {\n    let tabIds;\n    let titleIds;\n    const tabs = getSlotAssignedElements<HTMLCalciteTabElement>(this.slotEl, \"calcite-tab\");\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(tabs.map((el) => el.getTabIndex()));\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  private setDefaultSlotRef = (el) => (this.slotEl = el);\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {}\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot onSlotchange={this.defaultSlotChangeHandler} ref={this.setDefaultSlotRef} />\n        </section>\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n\n  section {\n    @apply border-color-1 border border-solid;\n  }\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["CSS","DEFAULT_COLOR","Color","ColorPickerHexInput","_inherits","_this","node","hexInputNode","inputValue","value","hex","allowEmpty","internalColor","willClearValue","isLonghand","isLonghandHex","isShorthandHex","alphaChannel","onHexInputChange","isValidHex","formatHexForInternalInput","rgbToHex","object","opacityInputNode","formatOpacityForInternalInput","onOpacityInputChange","normalized","normalizeHex","alphaHex","hexa","slice","internalSetValue","alpha","opacityToAlpha","Number","_this$internalColor","event","type","selectText","hexInputValue","oldValue","altKey","ctrlKey","metaKey","shiftKey","key","composedPath","includes","preventDefault","isNudgeKey","previousNonNullValue","direction","bump","hexify","nudgeRGBChannels","withModifiers","singleChar","length","validHexChar","hexChar","clipboardData","getData","this","setUpLoadableComponent","setComponentLoaded","hexLabel","messages","scale","opacityInputValue","inputScale","h","class","label","maxLength","onCalciteInputTextChange","onCalciteInputTextInput","onHexInputInput","onCalciteInternalInputTextBlur","onHexInputBlur","onCalciteInternalInputTextFocus","onInputFocus","onKeyDown","onInputKeyDown","onPaste","onHexInputPaste","prefixText","ref","storeHexInputRef","opacity","max","OPACITY_LIMITS","min","numberButtonType","numberingSystem","onCalciteInputNumberInput","onOpacityInputInput","onCalciteInternalInputNumberBlur","onOpacityInputBlur","onCalciteInternalInputNumberFocus","storeOpacityInputRef","suffixText","_context","componentFocusable","focusElement","emit","currentColor","nextColor","normalizedLonghand","changed","calciteColorPickerHexInputChange","replace","color","alphaToOpacity","amount","context","nudgedChannels","channels","array","rgbChannels","nudgedRGBChannels","map","channel","undefined","nudgedAlpha","get","HTMLElement","ColorPicker","CSSColorMode","channelMode","currentTarget","getAttribute","updateChannelsFromColor","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","modifier","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","stopPropagation","isClearable","target","alphaCompatible","mode","swatch","input","channelIndex","limit","RGB_LIMITS","Object","keys","HSV_LIMITS","adjustedValue","shiftKeyChannelAdjustment","clamp","toString","isActiveChannelInputEmpty","upOrDownArrowKeyTracker","handleChannelChange","_channels$channelInde","isAlphaChannel","getChannelInputLimit","updateColorFromChannels","isActivationKey","handleSavedColorSelect","handleCanvasControlPointerDown","colorFieldRenderingContext","colorFieldScopeNode","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","isPrimaryPointerButton","previouslyDragging","activeCanvasInfo","drawColorControls","calciteColorPickerChange","el","isConnected","samplingX","samplingY","bounds","clientX","clientY","canvas","matches","width","height","activeChannelMode","selected","rgb","hsv","onCalciteTabsActivate","handleTabActivate","channelAriaLabels","red","green","blue","saturation","getElementDir","channelsToRender","dir","channelValue","index","renderChannel","ariaLabel","suffix","lang","effectiveLocale","onCalciteInputNumberChange","handleChannelInput","handleChannelBlur","handleChannelFocus","handleKeyDown","style","marginLeft","colorToDelete","savedColors","indexOf","filter","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","setItem","JSON","stringify","colorToSave","throttle","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","_assertThisInitialize6","dimensions","colorField","Math","round","saturationv","getContext","updateCanvasSize","toChannels","DIMENSIONS","clearable","format","console","warn","effectiveSliderWidth","getSliderWidth","oldColor","previousColor","setMode","updateDimensions","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","internalColorUpdateContext","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","updateMessages","some","classList","_node$classList","contains","focusEl","requestAnimationFrame","focus","renderingContext","captureValue","scopeNode","window","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","getBoundingClientRect","call","offsetX","offsetY","focusScope","focusFirstTabbable","handleAllowEmptyOrClearableChange","handleAlphaChannelDimensionsChange","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","_context2","setUpMessages","connectInteractive","connectLocalized","connectMessages","removeEventListener","disconnectInteractive","disconnectLocalized","disconnectMessages","updateHostInteraction","_class2","_class3","_class4","_class5","_class6","_class7","_class8","_this2","channelsDisabled","thumbRadius","thumb","radius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","getAdjustedScopePosition","_this$getAdjustedScop2","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","_this$getAdjustedScop4","adjustedHueScopeLeft","adjustedHueScopeTop","_this$getAdjustedScop6","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","disabled","onPointerDown","handleColorFieldPointerDown","initColorField","handleColorFieldScopeKeyDown","storeColorFieldScope","role","top","left","tabindex","handleHueSliderPointerDown","initHueSlider","handleHueScopeKeyDown","storeHueScope","handleOpacitySliderPointerDown","initOpacitySlider","handleOpacityScopeKeyDown","storeOpacityScope","onCalciteColorPickerHexInputChange","handleHexInputChange","slot","renderChannelsTabTitle","renderChannelsTab","saved","appearance","iconStart","kind","deleteColor","onClick","saveColor","handleSavedColorKeyDown","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","toValue","hexMode","hasAlpha","string","needToInjectAlpha","model","values","colorObject","normalizeAlpha","slider","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","devicePixelRatio","setCanvasContextSize","_this$colorFieldRende","adjustedSliderDimensions","_this$hueSliderRender","_this$opacitySliderRe","hsvColor","_this$dimensions2$col","_this3","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","sliderBoundX","getSliderBoundX","_this4","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","getSliderCapSpacing","drawSliderPath","drawActiveHueSliderColor","_this$dimensions4","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","_this5","closeToEdge","closeToRangeEdge","remap","floor","push","SCOPE_SIZE","global","freeSelf","self","freeGlobal","Function","root","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","symToStringTag","toStringTag","baseGetTag","isOwn","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isSymbol","reWhitespace","reTrimStart","baseTrim","test","charAt","trimmedEndIndex","isObject","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","Date","now","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","clearTimeout","cancel","flush","decimalNumberRegex","RegExp","decimalPlaces","match","getDecimals","parseFloat","split","fromMin","fromMax","toMin","toMax","range","threshold","Tab","guid","id","Host","labeledBy","parentTabsEl","closest","body","_document$body","dispatchEvent","CustomEvent","detail","find","tagName","tab","getTabIndex","then","Array","nodeListToArray","parentElement","children","titleIds","_args2","tabIds","SLOTS","Tabs","tabs","slotChangeGetAssignedElements","slotEl","updateItems","titles","updateAriaSettings","getSlotAssignedElements","sort","a","b","localeCompare","Promise","all","tabDomIndexes","titleDomIndexes","reduce","ids","indexInDOM","registryIndex","updateAriaInfo","position","nav","querySelector","from","querySelectorAll","title","Fragment","name","onSlotchange","defaultSlotChangeHandler","setDefaultSlotRef"],"sourceRoot":""}