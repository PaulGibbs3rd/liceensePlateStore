{"version":3,"file":"static/js/70405.1e7e37ce.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-group/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.scss?tag=calcite-action-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts"],"sourcesContent":["export const SLOTS = {\n  menuActions: \"menu-actions\",\n  menuTooltip: \"menu-tooltip\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const CSS = {\n  container: \"container\",\n};\n","import { Component, Element, h, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { CalciteActionMenuCustomEvent } from \"../../components\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Columns } from \"./interfaces\";\nimport { ActionGroupMessages } from \"./assets/action-group/t9n\";\nimport { ICONS, SLOTS, CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a group of `calcite-action`s.\n * @slot menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot menu-tooltip - A slot for adding a `calcite-tooltip` for the menu.\n */\n@Component({\n  tag: \"calcite-action-group\",\n  styleUrl: \"action-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionGroup\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.menuOpen = false;\n  }\n\n  /**\n   *  Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Indicates the layout of the component.\n   *\n   * @deprecated Use the `layout` property on the component's parent instead.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\" | \"grid\", Layout> = \"vertical\";\n\n  /**\n   * Indicates number of columns.\n   */\n  @Prop({ reflect: true }) columns: Columns;\n\n  /**\n   * When `true`, the `calcite-action-menu` is open.\n   */\n  @Prop({ reflect: true, mutable: true }) menuOpen = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Specifies the size of the `calcite-action-menu`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionGroupMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionGroupMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteActionGroupElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionGroupMessages;\n\n  @State() hasMenuActions = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderMenu(): VNode {\n    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } =\n      this;\n\n    return (\n      <calcite-action-menu\n        expanded={expanded}\n        flipPlacements={[\"left\", \"right\"]}\n        hidden={!hasMenuActions}\n        label={messages.more}\n        onCalciteActionMenuOpen={this.setMenuOpen}\n        open={menuOpen}\n        overlayPositioning={overlayPositioning}\n        placement={layout === \"horizontal\" ? \"bottom-start\" : \"leading-start\"}\n        scale={scale}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.more}\n          textEnabled={expanded}\n        />\n        <slot name={SLOTS.menuActions} onSlotchange={this.handleMenuActionsSlotChange} />\n        <slot name={SLOTS.menuTooltip} slot={ACTION_MENU_SLOTS.tooltip} />\n      </calcite-action-menu>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <div aria-label={this.label} class={CSS.container} role=\"group\">\n        <slot />\n        {this.renderMenu()}\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setMenuOpen = (event: CalciteActionMenuCustomEvent<void>): void => {\n    this.menuOpen = !!(event.target as HTMLCalciteActionMenuElement).open;\n  };\n\n  handleMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuActions = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-background-color: Specifies the component's background color.\n * @prop --calcite-action-group-border-color: Specifies the component's border color when used in a calcite-action-bar or calcite-action-menu.\n * @prop --calcite-action-group-columns: Specifies the component's grid-template-columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-gap: Specifies the component's gap  when the `layout` property is `\"grid\" and padding`.\n * @prop --calcite-action-group-padding: [Deprecated] Use --calcite-action-group-gap. Specifies the component's padding.\n *\n */\n\n:host {\n  @extend %component-host;\n\n  @apply flex\n  flex-col\n  p-0;\n\n  background-color: transparent;\n  border-color: var(--calcite-action-group-border-color, var(--calcite-color-border-3));\n  border-style: solid;\n  border-width: 0;\n}\n\n.container {\n  @apply flex flex-col flex-grow;\n}\n\n:host([columns=\"1\"]) {\n  --calcite-internal-action-group-columns: 1;\n}\n:host([columns=\"2\"]) {\n  --calcite-internal-action-group-columns: 2;\n}\n:host([columns=\"3\"]) {\n  --calcite-internal-action-group-columns: 3;\n}\n:host([columns=\"4\"]) {\n  --calcite-internal-action-group-columns: 4;\n}\n:host([columns=\"5\"]) {\n  --calcite-internal-action-group-columns: 5;\n}\n:host([columns=\"6\"]) {\n  --calcite-internal-action-group-columns: 6;\n}\n\n:host(:first-child) {\n  @apply pt-0;\n}\n\n:host([layout=\"horizontal\"]),\n:host([layout=\"horizontal\"]) .container {\n  @apply flex-row;\n}\n\n:host([layout=\"grid\"]) {\n  @apply grid;\n\n  .container {\n    @apply grid\n    place-content-stretch;\n    background-color: transparent;\n    grid-template-columns: repeat(\n      var(--calcite-action-group-columns, var(--calcite-internal-action-group-columns, 3)),\n      auto\n    );\n    gap: var(--calcite-action-group-gap, 1px);\n    padding: var(--calcite-action-group-gap, 1px);\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n"],"names":["SLOTS","menuActions","menuTooltip","ICONS","CSS","ActionGroup","_inherits","_this","event","menuOpen","target","open","hasMenuActions","slotChangeHasAssignedElement","this","key","value","updateMessages","effectiveLocale","_context","componentFocusable","el","focus","connectLocalized","connectMessages","connectConditionalSlotComponent","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","setUpLoadableComponent","_context2","setUpMessages","setComponentLoaded","expanded","scale","layout","messages","overlayPositioning","h","flipPlacements","hidden","label","more","onCalciteActionMenuOpen","setMenuOpen","placement","icon","slot","ACTION_MENU_SLOTS","text","textEnabled","name","onSlotchange","handleMenuActionsSlotChange","class","role","renderMenu","get","HTMLElement","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","unobserve","mutations","forEach","forceUpdate"],"sourceRoot":""}