{"version":3,"file":"static/js/18135.634b9930.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/input-number/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.scss?tag=calcite-input-number&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputNumberValidationMessage\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"../input/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport {\n  NumericInputComponent,\n  syncHiddenFormInput,\n  TextualInputComponent,\n} from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, IDS, SLOTS } from \"./resources\";\nimport { InputNumberMessages } from \"./assets/input-number/t9n\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-number\",\n  styleUrl: \"input-number.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputNumber\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    NumericInputComponent,\n    T9nComponent,\n    TextualInputComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** When `true`, restricts the component to integer numbers only and disables exponential notation. */\n  @Prop() integer = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * Toggles locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value.\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity that the component's value must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputNumberMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputNumberMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n        this.displayedValue = newValue;\n        this.previousEmittedNumberValue = newValue;\n        return;\n      }\n\n      this.setNumberValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : isValidNumber(newValue)\n              ? newValue\n              : this.previousValue || \"\",\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputNumberElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputNumber[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedNumberValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(locale: string): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: false,\n    };\n  }\n\n  @State() defaultMessages: InputNumberMessages;\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    await setUpMessages(this);\n\n    this.setPreviousEmittedNumberValue(this.value);\n    this.setPreviousNumberValue(this.value);\n\n    this.warnAboutInvalidNumberValue(this.value);\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      this.displayedValue = this.value;\n      this.previousEmittedNumberValue = this.value;\n    } else {\n      this.setNumberValue({\n        origin: \"connected\",\n        value: isValidNumber(this.value) ? this.value : \"\",\n      });\n    }\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setNumberValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputNumberInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputNumberChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childNumberEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childNumberEl?.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const stepHandleInteger =\n      this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n    const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n      this.calciteInputNumberChange.emit();\n      this.setPreviousEmittedNumberValue(this.value);\n    }\n  };\n\n  private inputNumberBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputNumberBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputNumberFocusHandler = (): void => {\n    this.calciteInternalInputNumberFocus.emit();\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (\n        !isValidNumber(delocalizedValue) ||\n        (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))\n      ) {\n        nativeEvent.preventDefault();\n      }\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    if (event.key === numberStringFormatter.decimal && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key) && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private nudgeButtonPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"number\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setNumberValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputNumberValue = (newInputValue: string): void => {\n    if (!this.childNumberEl) {\n      return;\n    }\n    this.childNumberEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedNumberValue = (value: string): void => {\n    this.previousEmittedNumberValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return isValidNumber(value) ? value : \"\";\n  }\n\n  private setPreviousNumberValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setNumberValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const isValueDeleted =\n      this.previousValue?.length > value.length || this.value?.length > value.length;\n\n    const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n\n    const hasTrailingDecimalSeparator =\n      valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n\n    const sanitizedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? valueHandleInteger\n        : sanitizeNumberString(valueHandleInteger);\n\n    const newValue =\n      value && !sanitizedValue\n        ? isValidNumber(this.previousValue)\n          ? this.previousValue\n          : \"\"\n        : sanitizedValue;\n\n    let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n    if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n      newLocalizedValue = addLocalizedTrailingDecimalZeros(\n        newLocalizedValue,\n        newValue,\n        numberStringFormatter,\n      );\n    }\n\n    // adds localized trailing decimal separator\n    this.displayedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n        : newLocalizedValue;\n\n    this.setPreviousNumberValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && this.value !== newValue;\n    // don't sanitize the start of negative/decimal numbers, but\n    // don't set value to an invalid number\n    this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n\n    if (origin === \"direct\") {\n      this.setInputNumberValue(newLocalizedValue);\n      this.setPreviousEmittedNumberValue(newLocalizedValue);\n    }\n\n    if (nativeEvent) {\n      const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n      if (calciteInputNumberInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue = numberStringFormatter.localize(this.previousValue);\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputNumberKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-errormessage={IDS.validationMessage}\n        aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.el.autofocus ? true : null}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\")}\n        inputMode={this.el.inputMode || this.el.getAttribute(\"inputmode\") || \"decimal\"}\n        key=\"localized-input\"\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={undefined}\n        onBlur={this.inputNumberBlurHandler}\n        onFocus={this.inputNumberFocusHandler}\n        onInput={this.inputNumberInputHandler}\n        onKeyDown={this.inputNumberKeyDownHandler}\n        onKeyUp={this.inputNumberKeyUpHandler}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        ref={this.setChildNumberElRef}\n        type=\"text\"\n        value={this.displayedValue}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null}\n            {this.suffixText ? suffixText : null}\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ninput {\n  @apply focus-base;\n}\n\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n"],"names":["CSS","IDS","SLOTS","InputNumber","_inherits","_this","createObserver","setDisabledAction","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setNumberValue","committing","origin","value","previousValueOrigin","previousEmittedNumberValue","calciteInputNumberChange","emit","setPreviousEmittedNumberValue","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputNumberBlur","emitChangeIfUserModified","composedPath","includes","inputWrapperEl","actionWrapperEl","setFocus","calciteInternalInputNumberFocus","target","numberStringFormatter","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","inputType","isValidNumber","integer","parseNumberString","childNumberEl","displayedValue","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","isPrimaryPointerButton","dataset","adjustment","name","stopPropagation","el","newInputValue","normalizeValue","previousValue","isValueDeleted","_this$previousValue","_this$value","valueHandleInteger","replace","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","addLocalizedTrailingDecimalZeros","setPreviousNumberValue","userChangedValue","setInputNumberValue","calciteInputNumberInput","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","forceUpdate","this","max","_this$max","toString","min","_this$min","warnAboutInvalidNumberValue","requestedIcon","setRequestedIcon","icon","get","clearable","updateMessages","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","mutationObserver","_this$mutationObserve","observe","childList","addEventListener","internalHiddenInputInputEvent","onHiddenFormInputInput","setComponentLoaded","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","_this$mutationObserve2","disconnect","removeEventListener","setUpLoadableComponent","_this$max2","_this$min2","_context","setUpMessages","oldValue","property","updateHostInteraction","_context2","componentFocusable","_this$childNumberEl","focus","_this$childNumberEl2","select","stepHandleInteger","step","Math","round","inputStep","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","input","syncHiddenFormInput","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","_class2","_class3","_this2","dir","getElementDir","loader","h","class","label","messages","loading","type","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","nudgeButtonPointerDownHandler","onPointerOut","nudgeButtonPointerOutHandler","onPointerUp","nudgeButtonPointerUpHandler","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","childEl","toAriaBoolean","status","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","undefined","onBlur","inputNumberBlurHandler","onFocus","inputNumberFocusHandler","onInput","inputNumberInputHandler","onKeyDown","inputNumberKeyDownHandler","onKeyUp","inputNumberKeyUpHandler","placeholder","ref","setChildNumberElRef","Host","clickHandler","keyDownHandler","InteractiveContainer","CSS_UTILITY","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","id","message","HTMLElement"],"sourceRoot":""}