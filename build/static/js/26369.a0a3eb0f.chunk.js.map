{"version":3,"file":"static/js/26369.a0a3eb0f.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/select/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/select/select.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/select/select.scss?tag=calcite-select&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  id?: string;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  id,\n  icon,\n  message,\n}): VNode => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message aria-live=\"polite\" icon={icon} id={id} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  iconContainer: \"icon-container\",\n  select: \"select\",\n  wrapper: \"wrapper\",\n};\n\nexport const IDS = {\n  validationMessage: \"selectValidationMessage\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale, Status, Width } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, IDS } from \"./resources\";\n\ntype OptionOrGroup = HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement;\ntype NativeOptionOrGroup = HTMLOptionElement | HTMLOptGroupElement;\n\nfunction isOption(optionOrGroup: OptionOrGroup): optionOrGroup is HTMLCalciteOptionElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION\";\n}\n\nfunction isOptionGroup(\n  optionOrGroup: OptionOrGroup,\n): optionOrGroup is HTMLCalciteOptionGroupElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION-GROUP\";\n}\n\n/**\n * @slot - A slot for adding `calcite-option`s.\n */\n@Component({\n  tag: \"calcite-select\",\n  styleUrl: \"select.scss\",\n  shadow: true,\n})\nexport class Select\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * Accessible name for the component.\n   *\n   */\n  @Prop() label!: string;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's `selectedOption` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    this.updateItemsFromValue(value);\n  }\n\n  /**\n   * The component's selected option `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedOption: HTMLCalciteOptionElement;\n\n  @Watch(\"selectedOption\")\n  selectedOptionHandler(selectedOption: HTMLCalciteOptionElement): void {\n    this.value = selectedOption?.value;\n  }\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSelectElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Select[\"value\"];\n\n  private componentToNativeEl = new Map<OptionOrGroup, NativeOptionOrGroup>();\n\n  private mutationObserver = createObserver(\"mutation\", () => this.populateInternalSelect());\n\n  private selectEl: HTMLSelectElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n\n    this.mutationObserver?.observe(el, {\n      subtree: true,\n      childList: true,\n    });\n\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n\n    if (typeof this.value === \"string\") {\n      this.updateItemsFromValue(this.value);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    afterConnectDefaultValueSet(this, this.selectedOption?.value ?? \"\");\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.selectEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `selectedOption` changes.\n   */\n  @Event({ cancelable: false }) calciteSelectChange: EventEmitter<void>;\n\n  private handleInternalSelectChange = (): void => {\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n    requestAnimationFrame(() => this.emitChangeEvent());\n  };\n\n  @Listen(\"calciteInternalOptionChange\")\n  @Listen(\"calciteInternalOptionGroupChange\")\n  protected handleOptionOrGroupChange(event: CustomEvent): void {\n    event.stopPropagation();\n\n    const optionOrGroup = event.target as OptionOrGroup;\n    const nativeEl = this.componentToNativeEl.get(optionOrGroup);\n\n    if (!nativeEl) {\n      return;\n    }\n\n    this.updateNativeElement(optionOrGroup, nativeEl);\n\n    if (isOption(optionOrGroup) && optionOrGroup.selected) {\n      this.deselectAllExcept(optionOrGroup);\n      this.selectedOption = optionOrGroup;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private updateItemsFromValue(value: string): void {\n    this.el\n      .querySelectorAll(\"calcite-option\")\n      .forEach((item) => (item.selected = item.value === value));\n  }\n\n  private updateNativeElement(\n    optionOrGroup: OptionOrGroup,\n    nativeOptionOrGroup: NativeOptionOrGroup,\n  ): void {\n    nativeOptionOrGroup.disabled = optionOrGroup.disabled;\n    nativeOptionOrGroup.label = optionOrGroup.label;\n\n    if (isOption(optionOrGroup)) {\n      const option = nativeOptionOrGroup as HTMLOptionElement;\n      option.selected = optionOrGroup.selected;\n      option.value = optionOrGroup.value;\n\n      // need to set innerText for mobile\n      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701\n      option.innerText = optionOrGroup.label;\n    }\n  }\n\n  private populateInternalSelect = (): void => {\n    const optionsAndGroups = Array.from(\n      this.el.children as HTMLCollectionOf<OptionOrGroup | HTMLSlotElement>,\n    ).filter(\n      (child) => child.tagName === \"CALCITE-OPTION\" || child.tagName === \"CALCITE-OPTION-GROUP\",\n    ) as OptionOrGroup[];\n\n    this.clearInternalSelect();\n\n    optionsAndGroups.forEach((optionOrGroup) =>\n      this.selectEl?.append(this.toNativeElement(optionOrGroup)),\n    );\n  };\n\n  private clearInternalSelect(): void {\n    this.componentToNativeEl.forEach((value) => value.remove());\n    this.componentToNativeEl.clear();\n  }\n\n  private storeSelectRef = (node: HTMLSelectElement): void => {\n    this.selectEl = node;\n    this.populateInternalSelect();\n\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n  };\n\n  private selectFromNativeOption(nativeOption: HTMLOptionElement): void {\n    if (!nativeOption) {\n      return;\n    }\n\n    let futureSelected: HTMLCalciteOptionElement;\n\n    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {\n      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {\n        optionOrGroup.selected = true;\n        futureSelected = optionOrGroup;\n        this.deselectAllExcept(optionOrGroup as HTMLCalciteOptionElement);\n      }\n    });\n\n    if (futureSelected) {\n      this.selectedOption = futureSelected;\n    }\n  }\n\n  private toNativeElement(\n    optionOrGroup: HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement,\n  ): NativeOptionOrGroup {\n    if (isOption(optionOrGroup)) {\n      const option = document.createElement(\"option\");\n      this.updateNativeElement(optionOrGroup, option);\n      this.componentToNativeEl.set(optionOrGroup, option);\n\n      return option;\n    }\n\n    if (isOptionGroup(optionOrGroup)) {\n      const group = document.createElement(\"optgroup\");\n      this.updateNativeElement(optionOrGroup, group);\n\n      Array.from(optionOrGroup.children as HTMLCollectionOf<HTMLCalciteOptionElement>).forEach(\n        (option) => {\n          const nativeOption = this.toNativeElement(option);\n          group.append(nativeOption);\n          this.componentToNativeEl.set(optionOrGroup, nativeOption);\n        },\n      );\n\n      this.componentToNativeEl.set(optionOrGroup, group);\n\n      return group;\n    }\n\n    throw new Error(\"unsupported element child provided\");\n  }\n\n  private deselectAllExcept(except: HTMLCalciteOptionElement): void {\n    this.el.querySelectorAll<HTMLCalciteOptionElement>(\"calcite-option\").forEach((option) => {\n      if (option === except) {\n        return;\n      }\n\n      option.selected = false;\n    });\n  }\n\n  private emitChangeEvent = (): void => {\n    this.calciteSelectChange.emit();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChevron(): VNode {\n    return (\n      <div class={CSS.iconContainer}>\n        <calcite-icon class={CSS.icon} icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={CSS.wrapper}>\n            <select\n              aria-errormessage={IDS.validationMessage}\n              aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n              aria-label={getLabelText(this)}\n              class={CSS.select}\n              disabled={disabled}\n              onChange={this.handleInternalSelectChange}\n              ref={this.storeSelectRef}\n            >\n              <slot />\n            </select>\n            {this.renderChevron()}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-select-font-size: The font size of `calcite-option`s in the component.\n * @prop --calcite-select-spacing: The padding around the selected option text.\n */\n\n:host {\n  @extend %component-spacing;\n  @apply flex flex-col;\n}\n\n.wrapper {\n  @apply relative flex items-stretch;\n  inline-size: var(--select-width);\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n2h\");\n  --calcite-select-spacing-inline: theme(\"spacing.2\") theme(\"spacing.8\");\n\n  .wrapper {\n    @apply h-6;\n  }\n\n  .icon-container {\n    @apply px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n1h\");\n  --calcite-select-spacing-inline: theme(\"spacing.3\") theme(\"spacing.10\");\n\n  .wrapper {\n    @apply h-8;\n  }\n\n  .icon-container {\n    @apply px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-select-font-size: theme(\"fontSize.0h\");\n  --calcite-select-spacing-inline: theme(\"spacing.4\") theme(\"spacing.12\");\n\n  .wrapper {\n    block-size: 44px;\n  }\n\n  .icon-container {\n    @apply px-4;\n  }\n}\n\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-1/2;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n.select {\n  @apply bg-foreground-1 border-color-input text-color-2 font-inherit focus-base m-0 box-border w-full cursor-pointer appearance-none truncate rounded-none border border-solid;\n  font-size: var(--calcite-select-font-size);\n  padding-inline: var(--calcite-select-spacing-inline);\n  border-inline-end-width: theme(\"borderWidth.0\");\n\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n// override user agent stylesheet disabled styling\nselect:disabled {\n  @apply border-color-input bg-opacity-100;\n}\n\n.icon-container {\n  @apply border-color-input text-color-2 pointer-events-none absolute inset-y-0 flex items-center border-0 border-solid bg-transparent;\n  inset-inline-end: theme(\"inset.0\");\n  border-inline-width: theme(\"borderWidth.0\") theme(\"borderWidth.DEFAULT\");\n\n  .icon {\n    color: var(--calcite-color-text-3);\n  }\n}\n\n:host([status=\"invalid\"]) {\n  select,\n  .icon-container {\n    @apply border-color-danger;\n  }\n\n  select:focus,\n  .icon-container:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.select:focus ~ .icon-container {\n  @apply border-color-transparent;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["CSS","Validation","scale","status","id","icon","message","h","class","IDS","isOption","optionOrGroup","tagName","Select","_inherits","_this","Map","createObserver","populateInternalSelect","selected","selectEl","selectedOptions","selectFromNativeOption","requestAnimationFrame","emitChangeEvent","optionsAndGroups","Array","from","el","children","filter","child","clearInternalSelect","forEach","_this$selectEl","append","toNativeElement","node","calciteSelectChange","emit","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","value","this","updateItemsFromValue","key","selectedOption","mutationObserver","_this$mutationObserve","observe","subtree","childList","connectInteractive","connectLabel","connectForm","_this$mutationObserve2","disconnect","disconnectInteractive","disconnectLabel","disconnectForm","setUpLoadableComponent","setComponentLoaded","afterConnectDefaultValueSet","_this$selectedOption","updateHostInteraction","_context","componentFocusable","focusElement","event","stopPropagation","target","nativeEl","componentToNativeEl","get","updateNativeElement","deselectAllExcept","setFocus","querySelectorAll","item","nativeOptionOrGroup","disabled","label","option","innerText","remove","clear","nativeOption","futureSelected","_this2","document","createElement","set","isOptionGroup","group","_this3","Error","except","getIconScale","Host","InteractiveContainer","toAriaBoolean","getLabelText","onChange","handleInternalSelectChange","ref","storeSelectRef","renderChevron","HiddenFormInputSlot","component","validationMessage","validationIcon","HTMLElement","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetchIcon","_fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","_context2","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","_this$intersectionObs","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","concat","role","fill","height","viewBox","width","xmlns","d","opacity","isBrowser","fetchIconProps","callback","entries","entry","isIntersecting","rootMargin","StatusIconDefaults","invalid","idle","InputMessage","requestedIcon","setRequestedIcon","hidden","renderIcon","iconFlipRtl","type","options","Observer","ExtendedMutationObserver","_classCallCheck","_createClass","observedEntry","push","newObservedEntries","observed","window","MutationObserver","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}