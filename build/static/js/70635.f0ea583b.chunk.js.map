{"version":3,"file":"static/js/70635.f0ea583b.chunk.js","mappings":"mXAAaA,EACK,mBCoCLC,GAAQ,qBAAAC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,iB,mBAkHU,O,8OANrBC,EAAAA,SAA4E,GA6D5EA,EAAAA,eAAiB,SAACC,GACxB,GAA6B,gBAAzBD,EAAKE,gBAAT,CAGA,IAAMC,EAAKF,EAAMG,OACXC,EAAMJ,EAAMI,IACZC,EAAYL,EAAMM,QAClBC,EAAQR,EAAKS,SACnB,GAAIN,EAAGO,QAAQ,uBAAyBP,EAAGO,QAAQ,wBACjD,OAAQL,GACN,IAAK,UACHL,EAAKW,yBAAyBR,EAAGS,cAAeZ,EAAKa,YAAa,YAClEZ,EAAMa,iBACN,MACF,IAAK,YACHd,EAAKW,yBAAyBR,EAAGS,cAAeZ,EAAKa,YAAa,QAClEZ,EAAMa,iBACN,MACF,IAAK,SACHd,EAAKW,yBAAyBR,EAAGS,cAAeZ,EAAKa,YAAa,SAClEZ,EAAMa,iBACN,MACF,IAAK,WACHd,EAAKW,yBAAyBR,EAAGS,cAAeZ,EAAKa,YAAa,QAClEZ,EAAMa,iBACN,MACF,IAAK,aACHC,EAAAA,EAAAA,GAAoBP,EAAOL,EAAI,YAAY,GAC3CF,EAAMa,iBACN,MACF,IAAK,cACHC,EAAAA,EAAAA,GAAoBP,EAAOL,EAAI,QAAQ,GACvCF,EAAMa,iBACN,MACF,IAAK,OACCR,GACFN,EAAKW,yBAAyB,EAAGX,EAAKa,YAAa,SACnDZ,EAAMa,oBAENC,EAAAA,EAAAA,GAAoBP,EAAOL,EAAI,SAAS,GACxCF,EAAMa,kBAER,MACF,IAAK,MACY,MAAf,GAAIR,EACFN,EAAKW,yBAAsC,QAAd,EAACX,EAAKS,gBAAQ,aAAbO,EAAeC,OAAQjB,EAAKa,YAAa,QAAQ,GAC/EZ,EAAMa,sBAENC,EAAAA,EAAAA,GAAoBP,EAAOL,EAAI,QAAQ,GACvCF,EAAMa,iB,GAORd,EAAAA,yBAA2B,SACjCkB,EACAC,EACAC,EACAC,GAEArB,EAAKsB,oCAAoCC,KAAK,CAC5CL,aAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,SAAAA,G,EAIIrB,EAAAA,YAAc,uBACdwB,EAAYxB,EAAKwB,UACnBxB,EAAKwB,UACY,SAAjBxB,EAAKyB,QACH,SACA,QACAC,EAAkC,QAAtB,EAAG1B,EAAK2B,sBAAc,OACD,QADC,EAAnBC,EACjBC,iBAAiB,CAAEC,SAAS,WAAO,WADC,EAAnBC,EAEjBC,QACA,SAAC7B,GAA+D,OAC9DA,EAAGO,QAAQ,uBAAyBP,EAAGO,QAAQ,uBAAuB,IAGtEuB,EAEL,QAFkB,EAAGC,MAAMC,KACX,QADe,EAC9BnC,EAAKoC,kBAAU,aAAfC,EAAiBC,iBAAiB,oDACnC,aAFqBC,EAEnBP,QACD,SAAC7B,GAA+D,OAC9DA,EAAGqC,YAAcrC,EAAGsC,aAAa,IAG/BjC,EAAQyB,EAAgBA,EAAcS,OAAOhB,GAAgBA,EAE/DlB,EAAMS,OAAS,IACZ,OAALT,QAAK,IAALA,GAAAA,EAAOmC,SAAQ,SAACC,EAAmEC,GACjFD,EAAK1C,gBAAkBF,EAAKE,gBAC5B0C,EAAKvB,SAAWwB,IAAUrC,EAAMS,OAAS,EACzC2B,EAAKE,mBAAqBtB,EAC1BoB,EAAKG,oBAAsB/C,EAAKgD,SAChCJ,EAAKK,cAAgBjD,EAAKyB,QAC1BmB,EAAKhC,cAAgBiC,EAAQ,EAC7BD,EAAKM,MAAQlD,EAAKkD,MAEI,uBAAlBN,EAAKO,WACNP,EAAqCQ,qBAAuBpD,EAAKoD,qBACjER,EAAqCS,SAAWrD,EAAKqD,S,KAK5DrD,EAAKS,SACFD,GAA6E,GAChFR,EAAKsD,UAAiB,OAAL9C,QAAK,IAALA,OAAK,EAALA,EAAOS,M,EAGlBjB,EAAAA,qBAAuB,WAC7BA,EAAKuD,sBAAsBhC,M,EAGrBvB,EAAAA,wBAA0B,SAACC,IAC7BuD,EAAAA,EAAAA,GAAgBvD,EAAMI,OACN,MAAdJ,EAAMI,KACRJ,EAAMa,iBAERd,EAAKyD,uB,iCA1R2B,E,YAGA,E,qCAMY,c,qDAS7B,E,6IAkB6D,O,qGAoErD,GAAE,C,iDApD7B,WACMC,KAAKtB,YAAcsB,KAAKjD,SAASQ,OAAS,GAC5CyC,KAAKC,a,GAER,CAAAtD,IAAAA,2BAAAuD,MAID,WAAwB,WAClBF,KAAKtB,YAAcsB,KAAKjD,SAASQ,OAAS,GAC5C4C,uBAAsB,kBAAMC,EAAKH,aAAa,G,iCAUlD,WACMD,KAAKtB,YAAcsB,KAAKjD,SAASQ,OAAS,GAC5CyC,KAAKC,a,GAER,CAAAtD,IAAAA,oBAAAuD,MAED,YACEG,EAAAA,EAAAA,GAAmBL,K,GACpB,CAAArD,IAAAA,qBAAAuD,MAED,YACEI,EAAAA,EAAAA,GAAsBN,K,GACvB,CAAArD,IAAAA,uBAAAuD,MAED,YACEK,EAAAA,EAAAA,GAAsBP,K,0DAyCxB,SAA0CzD,GACxC,GAAKA,EAAMG,OAAmB8D,SAASR,KAAKvD,IAAK,CAC/C,IAAMgE,EAAWlE,EAAMmE,OAAOlD,aACxBC,EAAclB,EAAMmE,OAAOjD,YAC3BC,EAAcnB,EAAMmE,OAAOhD,YAC3BC,EAAWpB,EAAMmE,OAAO/C,SAE9B,GAAIF,IAAgBuC,KAAK7C,YAAa,OACpC,GAAI6C,KAAKL,SAAU,CACjB,IAAMgB,EACY,SAAhBjD,EAAyB,WAA6B,UAAhBA,EAA0B,OAASA,EAE3E,YADAsC,KAAK/C,yBAAyBwD,EAAUT,KAAK7C,YAAawD,E,CAG5D,IAAMnD,EAAeG,EACjBqC,KAAKjD,SAASiD,KAAKjD,SAASQ,OAAS,GACxB,QAD0B,EACvCyC,KAAKjD,gBAAQ,aAAb6D,EAAeC,MAAK,SAACC,EAAG3B,GAAK,OAAKA,EAAQ,IAAMsB,CAAQ,IAExDjD,GACFA,EAAauD,U,sCAiJrB,WACE,IAAMC,EACmB,aAAvBhB,KAAKiB,eAAgCjB,KAAKV,SACtC,iBACuB,aAAvBU,KAAKiB,cACH,SACAjB,KAAKV,SACH,WACA,SAEV,OAAO4B,EAAAA,EAAAA,GAAAA,eAAAA,CAAcF,KAAMA,EAAMxB,OAAO2B,EAAAA,EAAAA,GAAanB,KAAKR,Q,GAC3D,CAAA7C,IAAAA,uBAAAuD,MAED,WACE,MAAwB,SAAjBF,KAAKjC,SACVmD,EAAAA,EAAAA,GAAAA,uBAAAA,CACEpD,UAAU,SACVsD,aAAcpB,KAAKoB,aACnBzE,IAAI,iBACJ0E,QAAgC,aAAvBrB,KAAKiB,eAAgCjB,KAAKD,qBACnDuB,UAAkC,aAAvBtB,KAAKiB,eAAgCjB,KAAKuB,wBACrDnC,mBAAoBY,KAAKlC,UACzB0D,iBAAkBxB,KAAKwB,iBACvBC,0BAA2BzB,KAAKyB,0BAChC1C,eAAe,EACfkC,cAAejB,KAAKiB,gBAEH,SAAjBjB,KAAKjC,SACPmD,EAAAA,EAAAA,GAAAA,qBAAAA,CACEpD,UAAU,SACVnB,IAAI,iBACJ0E,QAASrB,KAAKD,qBACduB,UAAWtB,KAAKuB,wBAChBnC,mBAAoBY,KAAKlC,UACzBuB,oBAAqBW,KAAKV,SAC1BoC,2BAA4B1B,KAAK2B,yBACjC5C,eAAe,GAEdiB,KAAK4B,wBAGRV,EAAAA,EAAAA,GAAAA,qBAAAA,CACEpD,UAAU,SACVnB,IAAI,iBACJyC,mBAAoBY,KAAKlC,UACzBiB,eAAe,G,GAGpB,CAAApC,IAAAA,qBAAAuD,MAED,WACE,MAAwB,SAAjBF,KAAKjC,SACVmD,EAAAA,EAAAA,GAAAA,uBAAAA,CACEpD,UAAU,SACVnB,IAAI,gBACJmC,YAAY,EACZM,mBAAoBY,KAAKlC,YAER,SAAjBkC,KAAKjC,SACPmD,EAAAA,EAAAA,GAAAA,qBAAAA,CACEpD,UAAU,SACVnB,IAAI,gBACJmC,YAAY,EACZM,mBAAoBY,KAAKlC,WAExBkC,KAAK2B,2BAGRT,EAAAA,EAAAA,GAAAA,qBAAAA,CACEpD,UAAU,SACVnB,IAAI,gBACJmC,YAAY,EACZM,mBAAoBY,KAAKlC,W,GAG9B,CAAAnB,IAAAA,SAAAuD,MAED,WAAM,WACJ,OACEgB,EAAAA,EAAAA,GAACW,EAAAA,GAAI,CAAAlF,IAAAA,6CACHuE,EAAAA,EAAAA,GAACY,EAAAA,EAAoB,CAAAnF,IAAAA,2CAACgD,SAAUK,KAAKL,WACnCuB,EAAAA,EAAAA,GAAAA,KAAAA,CAAAvE,IAAAA,2CAAA,gBACiBqD,KAAKL,SAAQ,gBACbK,KAAK7C,YAAc,EAAC,gBACpB6C,KAAKV,SACpByC,OAAK,UAAK5F,EAAqB6D,KAAKgC,gBACpCV,UAAWtB,KAAKiC,eAChBC,IAAK,SAACzF,GAAE,OAAM0F,EAAKzD,WAAajC,CAAE,GAEjCuD,KAAKoC,UAAYpC,KAAKqC,qBACC,SAAvBrC,KAAKiB,eAA4BjB,KAAKsC,wBACvCpB,EAAAA,EAAAA,GAAAA,OAAAA,CAAAvE,IAAAA,2CACE4F,aAAcvC,KAAKC,YACnBiC,IAAK,SAACzF,GAAE,OAAM0F,EAAKlE,eAAiBxB,CAAqB,M,GAMpE,CAAAE,IAAAA,KAAA6F,IAAAA,W,uVCtbiB,g3B,ODqCC,CAAAC,EAAAA,IAAAA,CAAAA,EAAAA,oBAAAA,C","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/table-row/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-row/table-row.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-row/table-row.scss?tag=calcite-table-row&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  lastVisibleRow: \"last-visible-row\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport { focusElementInGroup, FocusElementInGroupDestination } from \"../../utils/dom\";\nimport { RowType, TableInteractionMode, TableRowFocusEvent } from \"../table/interfaces\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-table-cell` or `calcite-table-header` elements.\n */\n\n@Component({\n  tag: \"calcite-table-row\",\n  styleUrl: \"table-row.scss\",\n  shadow: true,\n})\nexport class TableRow implements InteractiveComponent, LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** @internal */\n  @Prop({ mutable: true }) cellCount: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastVisibleRow: boolean;\n\n  /** @internal */\n  @Prop() rowType: RowType;\n\n  /** @internal */\n  @Prop() numbered = false;\n\n  /** @internal */\n  @Prop() positionSection: number;\n\n  /** @internal */\n  @Prop() positionSectionLocalized: string;\n\n  /** @internal */\n  @Prop() positionAll: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"none\", SelectionMode> = \"none\";\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  @Watch(\"bodyRowCount\")\n  @Watch(\"scale\")\n  @Watch(\"selected\")\n  @Watch(\"selectedRowCount\")\n  @Watch(\"interactionMode\")\n  handleCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  @Watch(\"numbered\")\n  @Watch(\"selectionMode\")\n  handleDelayedCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      requestAnimationFrame(() => this.updateCells());\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableRowElement;\n\n  private rowCells: (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[] = [];\n\n  private tableRowEl: HTMLTableRowElement;\n\n  private tableRowSlotEl: HTMLSlotElement;\n\n  @State() effectiveLocale = \"\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteTableRowSelect: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusRequest: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTableRowFocusChange\", { target: \"document\" })\n  calciteInternalTableRowFocusChangeHandler(event: CustomEvent): void {\n    if ((event.target as Element).contains(this.el)) {\n      const position = event.detail.cellPosition;\n      const rowPosition = event.detail.rowPosition;\n      const destination = event.detail.destination;\n      const lastCell = event.detail.lastCell;\n\n      if (rowPosition === this.positionAll) {\n        if (this.disabled) {\n          const deflectDirection =\n            destination === \"last\" ? \"previous\" : destination === \"first\" ? \"next\" : destination;\n          this.emitTableRowFocusRequest(position, this.positionAll, deflectDirection);\n          return;\n        }\n        const cellPosition = lastCell\n          ? this.rowCells[this.rowCells.length - 1]\n          : this.rowCells?.find((_, index) => index + 1 === position);\n\n        if (cellPosition) {\n          cellPosition.setFocus();\n        }\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.interactionMode !== \"interactive\") {\n      return;\n    }\n    const el = event.target as HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement;\n    const key = event.key;\n    const isControl = event.ctrlKey;\n    const cells = this.rowCells;\n    if (el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\")) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"previous\");\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"next\");\n          event.preventDefault();\n          break;\n        case \"PageUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"first\");\n          event.preventDefault();\n          break;\n        case \"PageDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"last\");\n          event.preventDefault();\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(cells, el, \"previous\", false);\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          focusElementInGroup(cells, el, \"next\", false);\n          event.preventDefault();\n          break;\n        case \"Home\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(1, this.positionAll, \"first\");\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"first\", false);\n            event.preventDefault();\n          }\n          break;\n        case \"End\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(this.rowCells?.length, this.positionAll, \"last\", true);\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"last\", false);\n            event.preventDefault();\n          }\n          break;\n      }\n    }\n  };\n\n  private emitTableRowFocusRequest = (\n    cellPosition: number,\n    rowPosition: number,\n    destination: FocusElementInGroupDestination,\n    lastCell?: boolean,\n  ): void => {\n    this.calciteInternalTableRowFocusRequest.emit({\n      cellPosition,\n      rowPosition,\n      destination,\n      lastCell,\n    });\n  };\n\n  private updateCells = (): void => {\n    const alignment = this.alignment\n      ? this.alignment\n      : this.rowType !== \"head\"\n        ? \"center\"\n        : \"start\";\n    const slottedCells = this.tableRowSlotEl\n      ?.assignedElements({ flatten: true })\n      ?.filter(\n        (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n          el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\"),\n      );\n\n    const renderedCells = Array.from(\n      this.tableRowEl?.querySelectorAll(\"calcite-table-header, calcite-table-cell\"),\n    )?.filter(\n      (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n        el.numberCell || el.selectionCell,\n    );\n\n    const cells = renderedCells ? renderedCells.concat(slottedCells) : slottedCells;\n\n    if (cells.length > 0) {\n      cells?.forEach((cell: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement, index) => {\n        cell.interactionMode = this.interactionMode;\n        cell.lastCell = index === cells.length - 1;\n        cell.parentRowAlignment = alignment;\n        cell.parentRowIsSelected = this.selected;\n        cell.parentRowType = this.rowType;\n        cell.positionInRow = index + 1;\n        cell.scale = this.scale;\n\n        if (cell.nodeName === \"CALCITE-TABLE-CELL\") {\n          (cell as HTMLCalciteTableCellElement).readCellContentsToAT = this.readCellContentsToAT;\n          (cell as HTMLCalciteTableCellElement).disabled = this.disabled;\n        }\n      });\n    }\n\n    this.rowCells =\n      (cells as (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[]) || [];\n    this.cellCount = cells?.length;\n  };\n\n  private handleSelectionOfRow = (): void => {\n    this.calciteTableRowSelect.emit();\n  };\n\n  private handleKeyboardSelection = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n      this.handleSelectionOfRow();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? \"check-square-f\"\n        : this.selectionMode === \"multiple\"\n          ? \"square\"\n          : this.selected\n            ? \"circle-f\"\n            : \"circle\";\n\n    return <calcite-icon icon={icon} scale={getIconScale(this.scale)} />;\n  }\n\n  renderSelectableCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        bodyRowCount={this.bodyRowCount}\n        key=\"selection-head\"\n        onClick={this.selectionMode === \"multiple\" && this.handleSelectionOfRow}\n        onKeyDown={this.selectionMode === \"multiple\" && this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        selectedRowCount={this.selectedRowCount}\n        selectedRowCountLocalized={this.selectedRowCountLocalized}\n        selectionCell={true}\n        selectionMode={this.selectionMode}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-body\"\n        onClick={this.handleSelectionOfRow}\n        onKeyDown={this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        parentRowIsSelected={this.selected}\n        parentRowPositionLocalized={this.positionSectionLocalized}\n        selectionCell={true}\n      >\n        {this.renderSelectionIcon()}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-foot\"\n        parentRowAlignment={this.alignment}\n        selectionCell={true}\n      />\n    );\n  }\n\n  renderNumberedCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        key=\"numbered-head\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-body\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      >\n        {this.positionSectionLocalized}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-foot\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-disabled={this.disabled}\n            aria-rowindex={this.positionAll + 1}\n            aria-selected={this.selected}\n            class={{ [CSS.lastVisibleRow]: this.lastVisibleRow }}\n            onKeyDown={this.keyDownHandler}\n            ref={(el) => (this.tableRowEl = el)}\n          >\n            {this.numbered && this.renderNumberedCell()}\n            {this.selectionMode !== \"none\" && this.renderSelectableCell()}\n            <slot\n              onSlotchange={this.updateCells}\n              ref={(el) => (this.tableRowSlotEl = el as HTMLSlotElement)}\n            />\n          </tr>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-row-background: Specifies the background color of the component.\n * @prop --calcite-table-row-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-row-background: var(--calcite-table-row-background, var(--calcite-color-foreground-1));\n  --calcite-internal-table-row-border-color: var(--calcite-table-row-border-color, transparent);\n  @apply contents;\n}\n\n@include base-component();\n\n@include disabled() {\n  tr {\n    @apply opacity-disabled pointer-events-none;\n  }\n}\n\ntr {\n  border-block-end: 1px solid var(--calcite-internal-table-row-border-color);\n  background-color: var(--calcite-internal-table-row-background);\n}\n\ntr.last-visible-row {\n  border-block-end: 0;\n}\n"],"names":["CSS","TableRow","_inherits","_this","event","interactionMode","el","target","key","isControl","ctrlKey","cells","rowCells","matches","emitTableRowFocusRequest","positionInRow","positionAll","preventDefault","focusElementInGroup","_this$rowCells","length","cellPosition","rowPosition","destination","lastCell","calciteInternalTableRowFocusRequest","emit","alignment","rowType","slottedCells","tableRowSlotEl","_this$tableRowSlotEl","assignedElements","flatten","_this$tableRowSlotEl$","filter","renderedCells","Array","from","tableRowEl","_this$tableRowEl","querySelectorAll","_Array$from","numberCell","selectionCell","concat","forEach","cell","index","parentRowAlignment","parentRowIsSelected","selected","parentRowType","scale","nodeName","readCellContentsToAT","disabled","cellCount","calciteTableRowSelect","isActivationKey","handleSelectionOfRow","this","updateCells","value","requestAnimationFrame","_this2","connectInteractive","updateHostInteraction","disconnectInteractive","contains","position","detail","deflectDirection","_this$rowCells2","find","_","setFocus","icon","selectionMode","h","getIconScale","bodyRowCount","onClick","onKeyDown","handleKeyboardSelection","selectedRowCount","selectedRowCountLocalized","parentRowPositionLocalized","positionSectionLocalized","renderSelectionIcon","Host","InteractiveContainer","class","lastVisibleRow","keyDownHandler","ref","_this3","numbered","renderNumberedCell","renderSelectableCell","onSlotchange","get","HTMLElement"],"sourceRoot":""}