"use strict";(self.webpackChunkreact_training=self.webpackChunkreact_training||[]).push([[97689],{97689:function(o,e,n){n.d(e,{hM:function(){return f},C8:function(){return s},$s:function(){return u},eU:function(){return i}});var t=n(1413),r=n(51995),a=(n(93169),n(17842)),l=n(86361);var d=n(77958),c=n(34016);function i(o){return o&&o.enabled&&(function(o){return"extrude"===o.type}(o)||function(o){return"fill"===o.type}(o))&&null!=o.edges}function f(o,e){return s(function(o){return o&&o.enabled&&o.edges||null}(o),e)}function s(o,e){if(null==o)return null;var n,d=null!=o.color?(0,l.nI)(r.Z.toUnitRGBA(o.color)):(0,l.al)(0,0,0,0),i=(0,a.F2)(o.size),f=(0,a.F2)(o.extensionLength);switch(o.type){case"solid":return u((0,t.Z)({color:d,size:i,extensionLength:f},e));case"sketch":return n=(0,t.Z)({color:d,size:i,extensionLength:f},e),(0,t.Z)((0,t.Z)((0,t.Z)({},x),n),{},{type:c.Pb.Sketch});default:return}}function u(o){return(0,t.Z)((0,t.Z)((0,t.Z)({},m),o),{},{type:c.Pb.Solid})}var m={color:(0,l.al)(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:d.i.OPAQUE,hasSlicePlane:!1},x={color:(0,l.al)(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:d.i.OPAQUE,hasSlicePlane:!1}},49420:function(o,e,n){n.d(e,{F5:function(){return l},HB:function(){return d},a9:function(){return t}});var t,r,a=n(16889);function l(o){switch(o){case"multiply":default:return t.Multiply;case"ignore":return t.Ignore;case"replace":return t.Replace;case"tint":return t.Tint}}function d(o,e,n){if(null==o||e===t.Ignore)return n[0]=255,n[1]=255,n[2]=255,void(n[3]=255);var r=(0,a.uZ)(Math.round(o[3]*i),0,i),l=0===r||e===t.Tint?0:e===t.Replace?f:s;n[0]=(0,a.uZ)(Math.round(o[0]*c),0,c),n[1]=(0,a.uZ)(Math.round(o[1]*c),0,c),n[2]=(0,a.uZ)(Math.round(o[2]*c),0,c),n[3]=r+l}(r=t||(t={}))[r.Multiply=1]="Multiply",r[r.Ignore=2]="Ignore",r[r.Replace=3]="Replace",r[r.Tint=4]="Tint";var c=255,i=85,f=i,s=2*i},37107:function(o,e,n){n.d(e,{AD:function(){return L},_N:function(){return u},nO:function(){return A},Hz:function(){return E}});var t,r,a,l,d,c,i,f,s,u,m,x=n(30168),v=n(41644),p=n(46228),C=n(93169),M=n(77343),h=n(37081),w=n(78980),T=n(20395),y=n(43144),F=n(15671),O=n(60136),b=n(29388),I=n(61809),g=n(99340),S=function(o){(0,O.Z)(n,o);var e=(0,b.Z)(n);function n(o,t){return(0,F.Z)(this,n),e.call(this,o,"int",g.P.Draw,(function(e,n,r){return e.setUniform1i(o,t(n,r))}))}return(0,y.Z)(n)}(I.x),H=n(98634),P=n(78050),Z=n(4760);(m=u||(u={}))[m.Uniform=0]="Uniform",m[m.Varying=1]="Varying",m[m.COUNT=2]="COUNT";var E=429496.7296;function A(o,e){(0,p.I)(o/E*.5+.5,e)}function L(o,e){switch(e.componentData){case u.Varying:return function(o,e){var n=o.vertex,i=o.fragment;n.include(w.n),n.uniforms.add(new P.R("componentColorTex",(function(o){return o.componentParameters.texture.texture}))),o.attributes.add(Z.T.COMPONENTINDEX,"float"),o.varyings.add("vExternalColorMixMode","mediump float"),o.varyings.add("vExternalColor","vec4");var f=e.output===h.H_.ObjectAndLayerIdColor;f&&o.varyings.add("vObjectAndLayerIdColor","vec4"),o.include(M.A),n.constants.add("elevationScale","float",2*E),n.constants.add("stride","float",(0,C.Z)("enable-feature:objectAndLayerId-rendering")?3:2),n.code.add((0,H.H)(t||(t=(0,x.Z)(["vec2 getComponentTextureCoordinates(float componentIndex, float typeOffset) {\nfloat index = componentIndex * stride + typeOffset;\nfloat texSize = float(textureSize(componentColorTex, 0).x);\nfloat coordX = mod(index, texSize);\nfloat coordY = floor(index / texSize);\nreturn vec2(coordX, coordY) + 0.5;\n}"])))),n.code.add((0,H.H)(r||(r=(0,x.Z)(["\n  vec4 _readComponentColor() {\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 0.0);\n\n    return texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n   }\n\n   float readElevationOffset() {\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 1.0);\n\n    vec4 encodedElevation = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n    return (rgba2float(encodedElevation) - 0.5) * elevationScale;\n  }\n\n  ","\n\n  vec4 forwardExternalColor(out bool castShadows) {\n    vec4 componentColor = _readComponentColor() * 255.0;\n\n    float shadowFlag = mod(componentColor.b * 255.0, 2.0);\n    componentColor.b -= shadowFlag;\n    castShadows = shadowFlag >= 1.0;\n\n    int decodedColorMixMode;\n    vExternalColor = decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451; // = 1/255;\n    vExternalColorMixMode = float(decodedColorMixMode) + 0.5; // add 0.5 to avoid interpolation artifacts\n\n    return vExternalColor;\n  }\n"])),f?(0,H.H)(a||(a=(0,x.Z)(["\n          void forwardObjectAndLayerIdColor() {\n            vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 2.0);\n\n            vObjectAndLayerIdColor = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n          }"]))):(0,H.H)(l||(l=(0,x.Z)(["void forwardObjectAndLayerIdColor() {}"]))))),i.code.add((0,H.H)(d||(d=(0,x.Z)(["\n  void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n    externalColor = vExternalColor;\n    externalColorMixMode = int(vExternalColorMixMode);\n  }\n\n  void outputObjectAndLayerIdColor() {\n     ","\n  }\n"])),f?(0,H.H)(c||(c=(0,x.Z)(["fragColor = vObjectAndLayerIdColor;"]))):""))}(o,e);case u.Uniform:return function(o,e){var n=o.vertex,t=o.fragment;n.uniforms.add(new T.$("externalColor",(function(o){return o.componentParameters.externalColor}))),t.uniforms.add(new S("externalColorMixMode",(function(o){return o.componentParameters.externalColorMixMode}))),o.varyings.add("vExternalColor","vec4"),n.code.add((0,H.H)(i||(i=(0,x.Z)(["float readElevationOffset() {\nreturn 0.0;\n}\nvoid forwardObjectAndLayerIdColor() {}\nvec4 forwardExternalColor(out bool castShadows) {\nvExternalColor = externalColor;\ncastShadows = true;\nreturn externalColor;\n}"]))));var r=e.output===h.H_.ObjectAndLayerIdColor;t.code.add((0,H.H)(f||(f=(0,x.Z)(["\n  void readExternalColor(out vec4 color, out int colorMixMode) {\n    color = vExternalColor;\n    colorMixMode = externalColorMixMode;\n  }\n\n  void outputObjectAndLayerIdColor() {\n    ","\n }\n"])),r?(0,H.H)(s||(s=(0,x.Z)(["fragColor = vec4(0,0,0,0);"]))):""))}(o,e);case u.COUNT:return;default:(0,v.Bg)(e.componentData)}}},77343:function(o,e,n){n.d(e,{A:function(){return d}});var t,r=n(30168),a=n(49420),l=n(98634);function d(o){o.vertex.code.add((0,l.H)(t||(t=(0,r.Z)(["\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ",";\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  "])),l.H.int(a.a9.Multiply),l.H.int(a.a9.Replace),l.H.int(a.a9.Tint),l.H.int(a.a9.Multiply)))}},77958:function(o,e,n){var t;n.d(e,{i:function(){return t}}),function(o){o[o.INVISIBLE=0]="INVISIBLE",o[o.TRANSPARENT=1]="TRANSPARENT",o[o.OPAQUE=2]="OPAQUE"}(t||(t={}))},34016:function(o,e,n){n.d(e,{G7:function(){return M},Pb:function(){return C},UR:function(){return L},lV:function(){return V}});var t,r,a,l,d,c,i,f,s,u,m,x,v,p,C,M,h,w=n(30168),T=n(37107),y=n(16010),F=n(27254),O=n(78980),b=n(86471),I=n(49450),g=n(58406),S=n(98634),H=n(82644),P=n(35522),Z=n(8654),E=n(78050),A=n(4760);function L(o,e){var n=o.vertex;n.include(O.n),o.include(y.O,e),n.uniforms.add(new g.p("distanceFalloffFactor",(function(o){return o.distanceFalloffFactor}))),n.code.add((0,S.H)(t||(t=(0,w.Z)(["float distanceBasedPerspectiveFactor(float distance) {\nreturn clamp(sqrt(distanceFalloffFactor / distance), 0.0, 1.0);\n}"])))),n.uniforms.add(new E.R("componentDataTex",(function(o){return o.componentDataTexture}))),o.attributes.add(A.T.COMPONENTINDEX,"float"),n.constants.add("componentColorFieldOffset","float",0),n.constants.add("componentOtherFieldOffset","float",1),n.constants.add("componentVerticalOffsetFieldOffset","float",2),n.constants.add("componentFieldCount","float",3),n.constants.add("lineWidthFractionFactor","float",8),n.constants.add("extensionLengthOffset","float",128),n.constants.add("verticalOffsetScale","float",2*T.Hz),n.code.add((0,S.H)(r||(r=(0,w.Z)(["\n    vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\n      float fieldIndex = componentFieldCount * componentIndex + fieldOffset;\n      float texSize = float(textureSize(componentDataTex, 0).x);\n      float colIndex = mod(fieldIndex, texSize);\n      float rowIndex = floor(fieldIndex / texSize);\n\n      return vec2(colIndex, rowIndex) + 0.5;\n    }\n\n    struct ComponentData {\n      vec4 color;\n      vec3 normal;\n      vec3 normal2;\n      float lineWidth;\n      float extensionLength;\n      float type;\n      float verticalOffset;\n    };\n\n    ComponentData readComponentData() {\n      vec2 colorIndex = _componentTextureCoords(componentIndex, componentColorFieldOffset);\n      vec2 otherIndex = _componentTextureCoords(componentIndex, componentOtherFieldOffset);\n      vec2 verticalOffsetIndex = _componentTextureCoords(componentIndex, componentVerticalOffsetFieldOffset);\n      vec3 normal = normalModel();\n      vec3 normal2 = ",";\n\n      vec4 colorValue = texelFetch(componentDataTex, ivec2(colorIndex), 0);\n      vec4 otherValue = texelFetch(componentDataTex, ivec2(otherIndex), 0);\n      float verticalOffset = (rgba2float(texelFetch(componentDataTex, ivec2(verticalOffsetIndex), 0)) - 0.5) * verticalOffsetScale;\n\n      return ComponentData(\n        vec4(colorValue.rgb, colorValue.a * otherValue.w), // otherValue.w stores separate opacity\n        normal, normal2,\n        otherValue.x * (255.0 / lineWidthFractionFactor),\n        otherValue.y * 255.0 - extensionLengthOffset,\n        -(otherValue.z * 255.0) + 0.5, // SOLID (=0/255) needs to be > 0.0, SKETCHY (=1/255) needs to be <= 0;\n        verticalOffset\n      );\n    }\n  "])),e.silhouette?(0,S.H)(a||(a=(0,w.Z)(["decompressNormal(normal2Compressed)"]))):(0,S.H)(l||(l=(0,w.Z)(["normal"]))))),e.legacy?n.code.add((0,S.H)(d||(d=(0,w.Z)(["vec3 _modelToWorldNormal(vec3 normal) {\nreturn (model * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (localView * model * vec4(normal, 0.0)).xyz;\n}"])))):(n.uniforms.add(new H.j("transformNormalGlobalFromModel",(function(o){return o.transformNormalGlobalFromModel}))),n.code.add((0,S.H)(c||(c=(0,w.Z)(["vec3 _modelToWorldNormal(vec3 normal) {\nreturn transformNormalGlobalFromModel * normal;\n}"]))))),e.silhouette?(o.attributes.add(A.T.NORMAL2COMPRESSED,"vec2"),n.code.add((0,S.H)(i||(i=(0,w.Z)(["vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(normalize(data.normal + data.normal2));\n}"]))))):n.code.add((0,S.H)(f||(f=(0,w.Z)(["vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(data.normal);\n}"])))),e.legacy?n.code.add((0,S.H)(s||(s=(0,w.Z)(["void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\n}"])))):(n.include(F.$,e),n.uniforms.add(new P.c("transformViewFromCameraRelativeRS",(function(o){return o.transformViewFromCameraRelativeRS})),new H.j("transformWorldFromModelRS",(function(o){return o.transformWorldFromModelRS})),new b.B("transformWorldFromModelTL",(function(o){return o.transformWorldFromModelTL})),new b.B("transformWorldFromModelTH",(function(o){return o.transformWorldFromModelTH})),new I.J("transformWorldFromViewTL",(function(o){return o.transformWorldFromViewTL})),new I.J("transformWorldFromViewTH",(function(o){return o.transformWorldFromViewTH}))),n.code.add((0,S.H)(u||(u=(0,w.Z)(["\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\n\n        vec3 transformCameraRelativeFromModel = dpAdd(\n          transformWorldFromModelTL,\n          transformWorldFromModelTH,\n          -transformWorldFromViewTL,\n          -transformWorldFromViewTH\n        );\n\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\n\n        if (verticalOffset != 0.0) {\n          vec3 vUp = ","\n          worldPos += verticalOffset * vUp;\n        }\n\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\n      }\n    "])),e.spherical?(0,S.H)(m||(m=(0,w.Z)(["normalize(transformWorldFromModelTL + rotatedModelPosition);"]))):(0,S.H)(x||(x=(0,w.Z)(["vec3(0.0, 0.0, 1.0);"])))))),n.uniforms.add(new Z.g("transformProjFromView",(function(o,e){return e.camera.projectionMatrix}))),n.code.add((0,S.H)(v||(v=(0,w.Z)(["vec4 projFromViewPosition(vec3 position) {\nreturn transformProjFromView * vec4(position, 1.0);\n}"])))),n.code.add((0,S.H)(p||(p=(0,w.Z)(["float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}"]))))}function V(o){return o===C.Sketch||o===C.Mixed}(h=C||(C={}))[h.Solid=0]="Solid",h[h.Sketch=1]="Sketch",h[h.Mixed=2]="Mixed",h[h.COUNT=3]="COUNT",function(o){o[o.REGULAR=0]="REGULAR",o[o.SILHOUETTE=1]="SILHOUETTE"}(M||(M={}))}}]);
//# sourceMappingURL=97689.7f43d2d9.chunk.js.map