{"version":3,"file":"static/js/62216.ee16c758.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.scss?tag=calcite-table-cell&encapsulation=shadow"],"sourcesContent":["import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getUserAgentString } from \"./browser\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction isInteractiveHTMLElement(el: Element): el is InteractiveHTMLElement {\n  return \"disabled\" in el;\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    const parent = disabledElementToParent.get(component.el);\n\n    let hasDisabledSiblingElements = false;\n\n    if (parent?.children) {\n      for (const child of parent.children) {\n        if (isInteractiveHTMLElement(child) && child.disabled && child !== component.el) {\n          hasDisabledSiblingElements = true;\n          break;\n        }\n      }\n    }\n\n    if (!hasDisabledSiblingElements) {\n      removeInteractionListeners(parent);\n    }\n\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","export const CSS = {\n  contentCell: \"content-cell\",\n  numberCell: \"number-cell\",\n  footerCell: \"footer-cell\",\n  selectionCell: \"selection-cell\",\n  selectedCell: \"selected-cell\",\n  assistiveText: \"assistive-text\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n","import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { CSS } from \"./resources\";\nimport { TableCellMessages } from \"./assets/table-cell/t9n\";\n\n/**\n * @slot - A slot for adding content, usually text content.\n */\n@Component({\n  tag: \"calcite-table-cell\",\n  styleUrl: \"table-cell.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableCell\n  implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() disabled: boolean;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell: boolean;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  @Watch(\"parentRowIsSelected\")\n  onSelectedChange(): void {\n    this.updateScreenReaderSelectionText();\n  }\n\n  /** @internal */\n  @Prop() parentRowAlignment: Alignment = \"start\";\n\n  /** @internal */\n  @Prop() parentRowPositionLocalized: string;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale = \"m\";\n\n  /** @internal */\n  @Prop() selectionCell: boolean;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableCellMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableCellMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableCellElement;\n\n  @State() contentsText = \"\";\n\n  @State() defaultMessages: TableCellMessages;\n\n  @State() focused = false;\n\n  @State() selectionText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderContentsText();\n    this.updateScreenReaderSelectionText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderSelectionText(): void {\n    const selectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.selected} ${this.messages?.keyboardDeselect}`;\n    const unselectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.unselected} ${this.messages?.keyboardSelect}`;\n    this.selectionText = this.parentRowIsSelected ? selectedText : unselectedText;\n  }\n\n  private updateScreenReaderContentsText = (): void => {\n    this.contentsText = this.el.textContent;\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const staticCell =\n      this.disabled ||\n      (this.interactionMode === \"static\" &&\n        (!this.selectionCell || (this.selectionCell && this.parentRowType === \"foot\")));\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <td\n            aria-disabled={this.disabled}\n            class={{\n              [CSS.footerCell]: this.parentRowType === \"foot\",\n              [CSS.contentCell]: !this.numberCell && !this.selectionCell,\n              [CSS.numberCell]: this.numberCell,\n              [CSS.selectionCell]: this.selectionCell,\n              [CSS.selectedCell]: this.parentRowIsSelected,\n              [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              [CSS.staticCell]: staticCell,\n              [this.parentRowAlignment]:\n                this.parentRowAlignment === \"start\" || this.parentRowAlignment === \"end\",\n            }}\n            colSpan={this.colSpan}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            ref={(el) => (this.containerEl = el)}\n            role={this.interactionMode === \"interactive\" ? \"gridcell\" : \"cell\"}\n            rowSpan={this.rowSpan}\n            tabIndex={staticCell ? -1 : 0}\n          >\n            {(this.selectionCell || this.readCellContentsToAT) && (\n              <span\n                aria-hidden={true}\n                aria-live={this.focused ? \"polite\" : \"off\"}\n                class={CSS.assistiveText}\n              >\n                {this.selectionCell && this.selectionText}\n                {this.readCellContentsToAT && !this.selectionCell && this.contentsText}\n              </span>\n            )}\n            <slot onSlotchange={this.updateScreenReaderContentsText} />\n          </td>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-cell-background: Specifies the background color of the component.\n */\n\n:host {\n  --calcite-internal-table-cell-background: var(--calcite-table-cell-background, transparent);\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\ntd {\n  @apply text-start align-middle text-color-1 whitespace-normal;\n  background: var(--calcite-internal-table-cell-background);\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-internal-table-cell-padding);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:focus {\n      @apply focus-inset;\n    }\n  }\n}\n\ntd.start.content-cell {\n  @apply align-top;\n}\n\ntd.end.content-cell {\n  @apply align-bottom;\n}\n\ntd.last-cell {\n  border-inline-end: 0;\n}\n\n.number-cell {\n  @apply bg-foreground-2;\n}\n\n.footer-cell {\n  @apply bg-background font-medium text-color-1;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.number-cell,\n.selection-cell {\n  @apply text-center;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell {\n  @apply text-color-3;\n  inset-inline-start: 2rem;\n  &:not(.footer-cell) {\n    @apply cursor-pointer;\n  }\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-cell-background: var(--calcite-color-foreground-current);\n}\n\n.selection-cell.selected-cell {\n  box-shadow: inset 0.25rem 0 0 0 var(--calcite-color-brand);\n  color: var(--calcite-color-brand);\n  & calcite-icon {\n    color: var(--calcite-color-brand);\n  }\n}\n\n.calcite--rtl.selection-cell.selected-cell {\n  box-shadow: inset -0.25rem 0 0 0 var(--calcite-color-brand);\n}\n\n.selection-cell {\n  @apply align-middle;\n  & ::slotted(calcite-icon) {\n    @apply pointer-events-none mt-1;\n  }\n}\n\n@include disabled();\n"],"names":["isFirefox","test","getUserAgentString","disabledElementToParent","WeakMap","interceptedClick","this","disabled","HTMLElement","prototype","click","call","onPointerDown","event","interactiveElement","target","get","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","addEventListener","forEach","parent","hasDisabledSiblingElements","children","_step","child","_iterator","delete","removeEventListener","connectInteractive","disconnectInteractive","CSS","container","InteractiveContainer","h","class","inert","TableCell","_inherits","_this","contentsText","textContent","focused","updateScreenReaderSelectionText","key","value","updateMessages","effectiveLocale","setUpLoadableComponent","_context","setUpMessages","updateScreenReaderContentsText","setComponentLoaded","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","_context2","componentFocusable","containerEl","focus","selectedText","messages","_this$messages","row","parentRowPositionLocalized","_this$messages2","selected","_this$messages3","keyboardDeselect","unselectedText","_this$messages4","_this$messages5","unselected","_this$messages6","keyboardSelect","selectionText","parentRowIsSelected","_this2","dir","getElementDir","staticCell","interactionMode","selectionCell","parentRowType","Host","numberCell","lastCell","rowSpan","colSpan","CSS_UTILITY","parentRowAlignment","onBlur","onContainerBlur","onFocus","onContainerFocus","ref","role","tabIndex","readCellContentsToAT","onSlotchange"],"sourceRoot":""}