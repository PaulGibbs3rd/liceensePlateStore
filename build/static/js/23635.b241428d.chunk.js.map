{"version":3,"file":"static/js/23635.b241428d.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/array.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts"],"sourcesContent":["export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const activeAttr = \"data-active\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { FlipPlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-action\")) as HTMLCalciteActionElement[];\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          ref={this.setDefaultMenuButtonEl}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce(\n        (previousValue: HTMLCalciteActionElement[], currentValue): HTMLCalciteActionElement[] => {\n          if (currentValue?.matches(\"calcite-action\")) {\n            previousValue.push(currentValue as HTMLCalciteActionElement);\n            return previousValue;\n          }\n\n          if (currentValue?.matches(\"calcite-action-group\")) {\n            return previousValue.concat(\n              Array.from(currentValue.querySelectorAll(\"calcite-action\")),\n            );\n          }\n\n          return previousValue;\n        },\n        [],\n      );\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-menu-items-space: Specifies the space between actions in the menu.\n *\n */\n\n:host {\n  @apply text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group:not(:last-of-type)) {\n  border-block-end-width: var(--calcite-border-width-sm);\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex\n  flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n  gap: var(--calcite-action-menu-items-space, 0);\n}\n\n@include base-component();\n","export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getUserAgentString } from \"./browser\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction isInteractiveHTMLElement(el: Element): el is InteractiveHTMLElement {\n  return \"disabled\" in el;\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    const parent = disabledElementToParent.get(component.el);\n\n    let hasDisabledSiblingElements = false;\n\n    if (parent?.children) {\n      for (const child of parent.children) {\n        if (isInteractiveHTMLElement(child) && child.disabled && child !== component.el) {\n          hasDisabledSiblingElements = true;\n          break;\n        }\n      }\n    }\n\n    if (!hasDisabledSiblingElements) {\n      removeInteractionListeners(parent);\n    }\n\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n"],"names":["CSS","SLOTS","tooltip","trigger","ICONS","SUPPORTED_MENU_NAV_KEYS","ActionMenu","_inherits","_this","guid","menuButtonId","menuId","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","event","actions","target","assignedElements","flatten","filter","el","matches","connectMenuButtonEl","setFocus","toggleOpen","tooltips","tooltipEl","expanded","referenceElement","action","index","activeMenuItemIndex","tabIndex","toggleAttribute","forEach","updateAction","reduce","previousValue","currentValue","push","concat","Array","from","querySelectorAll","actionElements","disabled","hidden","key","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","getRoundRobinIndex","Math","max","toggleOpenEnd","value","this","setUpLoadableComponent","setComponentLoaded","calciteActionMenuOpen","emit","updateActions","_context","componentFocusable","focusElement","appearance","scale","h","name","onSlotchange","setMenuButtonEl","class","icon","ref","setDefaultMenuButtonEl","textEnabled","placement","overlayPositioning","flipPlacements","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","handlePopoverClose","onCalcitePopoverOpen","handlePopoverOpen","pointerDisabled","onClick","handleCalciteActionClick","role","handleDefaultSlotChange","Fragment","renderMenuButton","renderMenuItems","updateTooltip","supportedKeys","find","k","get","HTMLElement","total","getIconScale","componentScale","componentOnReady","_componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","isFirefox","test","getUserAgentString","disabledElementToParent","WeakMap","interceptedClick","prototype","call","onPointerDown","interactiveElement","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","parent","hasDisabledSiblingElements","children","_step","child","_iterator","delete","connectInteractive","disconnectInteractive","container","InteractiveContainer","inert","resolveMap","promiseMap","componentLoaded","_componentFocusable","isBrowser","forceUpdate"],"sourceRoot":""}