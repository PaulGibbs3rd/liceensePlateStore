{"version":3,"file":"static/js/2654.3651c38a.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/FloatingArrow.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/popover/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/popover/PopoverManager.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FloatingLayout } from \"../../utils/floating-ui\";\n\ninterface FloatingArrowProps extends JSXAttributes {\n  floatingLayout: FloatingLayout;\n}\n\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1,\n};\n\n/**\n * Renders a SVG element to be used as a floating-ui arrow.\n *\n * This functional component should be rendered inside a `FloatingUIComponent` when it needs an arrow element.\n *\n * @param floatingLayout.floatingLayout\n * @param floatingLayout â€“ The effective floating layout to render the arrow vertically or horizontally. Possible values: `vertical` or `horizontal`.\n *\n * See [floating-ui](https://github.com/Esri/calcite-design-system/blob/dev/src/utils/floating-ui.ts)\n * @param floatingLayout.key\n * @param floatingLayout.ref\n */\nexport const FloatingArrow: FunctionalComponent<FloatingArrowProps> = ({\n  floatingLayout,\n  key,\n  ref,\n}): VNode => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n\n  const dValue =\n    \"M0,0\" +\n    ` H${width}` +\n    ` L${width - svgX},${height}` +\n    ` Q${svgX},${height} ${svgX},${height}` +\n    \" Z\";\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      class={CSS.arrow}\n      height={width}\n      key={key}\n      ref={ref}\n      viewBox={`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`}\n      width={width + (isVertical ? strokeWidth : 0)}\n    >\n      {strokeWidth > 0 && (\n        <path\n          class={CSS.arrowStroke}\n          d={dValue}\n          fill=\"none\"\n          // Account for the stroke on the fill path rendered below.\n          stroke-width={strokeWidth + 1}\n        />\n      )}\n      {/* In Firefox, for left/right placements there's a ~0.5px gap where the\n  border can show through. Adding a stroke on the fill removes it. */}\n      <path d={dValue} stroke=\"none\" />\n    </svg>\n  );\n};\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends JSXBase.HTMLAttributes {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return <HeadingTag {...props}>{children}</HeadingTag>;\n};\n","export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n\n    // we set up the ref element in the next frame to ensure PopoverManager\n    // event handlers are invoked after connect (mainly for `components` output target)\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n          scale={this.scale}\n          text={messages.close}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow floatingLayout={floatingLayout} key=\"floating-arrow\" ref={this.storeArrowEl} />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.container]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-z-index: Sets the z-index value for the component.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floating-ui-host();\n@include floating-ui-arrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply bg-foreground-1\n    border-color-3\n    rounded\n    border\n    border-solid;\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n.header {\n  @apply border-b-color-3\n    flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n}\n\n.heading {\n  @apply text-color-1\n  word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n}\n\n.container {\n  @apply text-color-1\n    relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: theme(\"borderRadius.DEFAULT\");\n  border-end-end-radius: theme(\"borderRadius.DEFAULT\");\n}\n\n.has-header .close-button-container {\n  border-end-end-radius: none;\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n"],"names":["CSS","DEFAULTS","FloatingArrow","floatingLayout","key","ref","width","height","strokeWidth","svgX","isVertical","dValue","h","class","viewBox","d","fill","stroke","Heading","props","children","HeadingTag","level","ARIA_CONTROLS","ARIA_EXPANDED","manager","_classCallCheck","registeredElements","Map","registeredElementCount","queryPopover","composedPath","_this","registeredElement","find","pathEl","has","get","togglePopovers","event","togglePopover","triggerDisabled","open","Array","from","values","filter","popover","autoClose","includes","forEach","keyDownHandler","defaultPrevented","closeAllPopovers","isActivationKey","clickHandler","isKeyboardTriggeredClick","referenceEl","this","set","addListeners","value","delete","removeListeners","window","addEventListener","removeEventListener","Popover","_inherits","_this2","createObserver","updateFocusTrapElements","guid","el","transitionEl","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","referenceElement","console","tagName","addReferences","id","setAttribute","toAriaBoolean","getId","registerElement","setExpandedAttr","removeAttribute","unregisterElement","arrowEl","reposition","defaultOffsetDistance","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","setFilteredPlacements","onToggleOpenCloseComponent","setUpReferenceElement","updateMessages","effectiveLocale","connectLocalized","connectMessages","connectFocusTrap","requestAnimationFrame","_this3","hasLoaded","_context","setUpMessages","setUpLoadableComponent","setComponentLoaded","disconnectLocalized","disconnectMessages","disconnectFloatingUI","placement","overlayPositioning","flipDisabled","offsetDistance","offsetSkidding","_args2","delayed","floatingEl","type","_context3","componentFocusable","forceUpdate","focusFirstTabbable","queryElementRoots","calcitePopoverBeforeOpen","emit","calcitePopoverOpen","calcitePopoverBeforeClose","calcitePopoverClose","messages","closable","appearance","onClick","hide","closeButtonEl","_this4","scale","text","close","icon","getIconScale","heading","headingLevel","headingNode","renderCloseButton","label","pointerDisabled","displayed","hidden","arrowNode","storeArrowEl","Host","role","FloatingCSS","setTransitionEl","renderHeader","HTMLElement"],"sourceRoot":""}