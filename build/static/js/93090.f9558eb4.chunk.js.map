{"version":3,"file":"static/js/93090.f9558eb4.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/block-section/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/block-section/block-section.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/block-section/block-section.scss?tag=calcite-block-section&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/switch/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.scss?tag=calcite-switch&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n};\n\nexport const CSS = {\n  chevronIcon: \"chevron-icon\",\n  content: \"content\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  invalid: \"invalid\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  switch: \"switch\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleContainer: \"toggle-container\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  valid: \"valid\",\n};\n\nexport const ICONS = {\n  menuOpen: \"chevron-up\",\n  menuClosed: \"chevron-down\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { FlipContext, Status } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { BlockSectionMessages } from \"./assets/block-section/t9n\";\nimport { BlockSectionToggleDisplay } from \"./interfaces\";\nimport { CSS, ICONS, IDS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-block-section\",\n  styleUrl: \"block-section.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  /**\n   * Displays a status-related indicator icon.\n   *\n   * @deprecated Use `icon-start` instead.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * The component header text.\n   */\n  @Prop() text: string;\n\n  /**\n   * Specifies how the component's toggle is displayed, where:\n   *\n   * `\"button\"` sets the toggle to a selectable header, and\n   *\n   * `\"switch\"` sets the toggle to a switch.\n   */\n  @Prop({ reflect: true }) toggleDisplay: BlockSectionToggleDisplay = \"button\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockSectionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockSectionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockSectionElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockSectionMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the header has been clicked.\n   */\n  @Event({ cancelable: false }) calciteBlockSectionToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggleSection();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  toggleSection = (): void => {\n    this.open = !this.open;\n    this.calciteBlockSectionToggle.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon(): VNode[] {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\",\n    };\n\n    return statusIcon ? (\n      <calcite-icon class={statusIconClasses} icon={statusIcon} scale=\"s\" />\n    ) : null;\n  }\n\n  renderIcon(icon: string): VNode {\n    const { iconFlipRtl } = this;\n\n    if (icon === undefined) {\n      return null;\n    }\n\n    const flipRtlStart = iconFlipRtl === \"both\" || iconFlipRtl === \"start\";\n    const flipRtlEnd = iconFlipRtl === \"both\" || iconFlipRtl === \"end\";\n\n    const isIconStart = icon === this.iconStart;\n\n    /** Icon scale is not variable as the component does not have a scale property */\n    return (\n      <calcite-icon\n        class={isIconStart ? CSS.iconStart : CSS.iconEnd}\n        flipRtl={isIconStart ? flipRtlStart : flipRtlEnd}\n        icon={isIconStart ? this.iconStart : this.iconEnd}\n        key={isIconStart ? this.iconStart : this.iconEnd}\n        scale=\"s\"\n      />\n    );\n  }\n\n  render(): VNode {\n    const { messages, open, text, toggleDisplay } = this;\n    const arrowIcon = open ? ICONS.menuOpen : ICONS.menuClosed;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerNode =\n      toggleDisplay === \"switch\" ? (\n        <div\n          class={{\n            [CSS.toggleContainer]: true,\n          }}\n        >\n          <div\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS.toggleSwitch]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n            onKeyDown={this.handleHeaderKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            title={toggleLabel}\n          >\n            {this.renderIcon(this.iconStart)}\n            <div class={CSS.toggleSwitchContent}>\n              <span class={CSS.toggleSwitchText}>{text}</span>\n            </div>\n\n            {this.renderIcon(this.iconEnd)}\n            {this.renderStatusIcon()}\n            <calcite-switch checked={open} class={CSS.switch} inert label={toggleLabel} scale=\"s\" />\n          </div>\n        </div>\n      ) : (\n        <div\n          class={{\n            [CSS.toggleContainer]: true,\n          }}\n        >\n          <button\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.sectionHeader]: true,\n              [CSS.toggle]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n          >\n            {this.renderIcon(this.iconStart)}\n            <span class={CSS.sectionHeaderText}>{text}</span>\n            {this.renderIcon(this.iconEnd)}\n            {this.renderStatusIcon()}\n            <calcite-icon class={CSS.chevronIcon} icon={arrowIcon} scale=\"s\" />\n          </button>\n        </div>\n      );\n\n    return (\n      <Host>\n        {headerNode}\n        <section aria-labelledby={IDS.toggle} class={CSS.content} hidden={!open} id={IDS.content}>\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply bg-foreground-1 text-n1 box-border block;\n\n  color: var(--calcite-color-text-2);\n}\n\n:host([open]) {\n  @apply border-b-color-3\n    border-0\n    border-b\n    border-solid;\n\n  .toggle {\n    color: var(--calcite-color-text-1);\n\n    &:hover {\n      color: var(--calcite-color-text-1);\n    }\n  }\n\n  .chevron-icon {\n    color: var(--calcite-color-text-3);\n\n    &:hover {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n:host(:last-child) {\n  @apply border-b-0;\n}\n\n.toggle {\n  @apply font-sans w-full border-0 bg-transparent;\n\n  gap: var(--calcite-spacing-md);\n  color: var(--calcite-color-text-2);\n  font-weight: var(--calcite-font-weight-normal);\n\n  &:hover {\n    color: var(--calcite-color-text-1);\n  }\n}\n\n.toggle--switch,\n.section-header {\n  @apply text-n1\n    focus-base\n    mx-0\n    my-1\n    flex\n    cursor-pointer\n    select-none\n    items-center\n    px-0\n    py-2;\n\n  &:focus {\n    @apply focus-outset;\n  }\n  &:hover {\n    color: var(--calcite-color-text-1);\n  }\n}\n\n.section-header__text {\n  @apply my-0\n    flex-auto;\n\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle-container {\n  @apply flex items-center relative bg-transparent;\n  word-break: break-word;\n\n  .toggle--switch__content {\n    @apply flex flex-auto items-center;\n  }\n\n  .icon--end,\n  .icon--start,\n  .chevron-icon {\n    @apply flex items-center;\n\n    color: var(--calcite-color-text-3);\n\n    &:hover {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n.status-icon {\n  @apply flex items-center;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  track: \"track\",\n  handle: \"handle\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-switch\",\n  styleUrl: \"switch.scss\",\n  shadow: true,\n})\nexport class Switch\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSwitchElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  switchEl: HTMLDivElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Switch[\"checked\"];\n\n  defaultChecked: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.switchEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"checkbox\";\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (!this.disabled && isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  };\n\n  onLabelClick(): void {\n    if (!this.disabled) {\n      this.toggle();\n      this.setFocus();\n    }\n  }\n\n  private toggle(): void {\n    this.checked = !this.checked;\n    this.calciteSwitchChange.emit();\n  }\n\n  private clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  };\n\n  private setSwitchEl = (el: HTMLDivElement): void => {\n    this.switchEl = el;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `checked` value has changed.\n   */\n  @Event({ cancelable: false }) calciteSwitchChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class={CSS.container}\n            ref={this.setSwitchEl}\n            role=\"switch\"\n            tabIndex={0}\n          >\n            <div class={CSS.track}>\n              <div class={CSS.handle} />\n            </div>\n            <HiddenFormInputSlot component={this} />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","// sizes\n:host([scale=\"s\"]) {\n  .container {\n    @apply h-3;\n  }\n  .track {\n    @apply h-3 w-6;\n  }\n  .handle {\n    @apply h-2 w-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .container {\n    @apply h-4;\n  }\n  .track {\n    @apply h-4 w-8;\n  }\n  .handle {\n    @apply h-3 w-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .container {\n    @apply h-6;\n  }\n  .track {\n    @apply h-6 w-12;\n  }\n  .handle {\n    @apply h-5 w-5;\n  }\n}\n\n:host {\n  @apply relative\n    inline-block\n    w-auto\n    cursor-pointer\n    select-none\n    align-middle;\n  tap-highlight-color: transparent;\n}\n\n@include disabled();\n\n.container {\n  @apply outline-0;\n}\n\n.track {\n  @apply bg-foreground-2\n    border-color-2\n    pointer-events-none\n    relative\n    box-border\n    inline-block\n    rounded-full\n    border\n    border-solid\n    align-top\n    focus-base;\n}\n\n:host(:focus) .track {\n  @apply focus-outset;\n}\n\n.handle {\n  @apply bg-foreground-1\n    border-color-input\n    pointer-events-none\n    absolute\n    block\n    rounded-full\n    border-2\n    border-solid\n    transition-all\n    duration-150\n    ease-in-out;\n  inset-block-start: -1px;\n  inset-inline: -1px theme(\"inset.auto\");\n}\n\n.container:hover,\n:host(:focus) {\n  .handle {\n    @apply border-color-brand;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  }\n}\n\n:host([checked]) {\n  .track {\n    @apply bg-brand border-color-brand-hover;\n  }\n  .handle {\n    @apply border-color-brand;\n    inset-inline: theme(\"inset.auto\") -1px;\n  }\n\n  .container:hover {\n    .handle {\n      @apply border-color-brand-hover;\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  :host([checked]) {\n    .track {\n      background-color: canvasText;\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["IDS","CSS","ICONS","menuOpen","menuClosed","valid","invalid","BlockSection","_inherits","_this","event","isActivationKey","key","toggleSection","preventDefault","stopPropagation","open","calciteBlockSectionToggle","emit","_context","componentFocusable","this","focusFirstTabbable","el","value","updateMessages","effectiveLocale","connectLocalized","connectMessages","_context2","setUpMessages","setUpLoadableComponent","setComponentLoaded","disconnectLocalized","disconnectMessages","status","statusIcon","statusIconClasses","h","class","icon","scale","iconFlipRtl","undefined","flipRtlStart","flipRtlEnd","isIconStart","iconStart","flipRtl","iconEnd","messages","text","toggleDisplay","arrowIcon","toggleLabel","collapse","expand","headerNode","toAriaBoolean","id","onClick","onKeyDown","handleHeaderKeyDown","role","tabIndex","title","renderIcon","renderStatusIcon","checked","inert","label","Host","hidden","get","HTMLElement","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetchIcon","_fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","visible","waitUntilVisible","_this2","loadIconPathData","intersectionObserver","_this$intersectionObs","disconnect","pathData","textLabel","dir","getElementDir","semantic","paths","concat","fill","height","viewBox","width","xmlns","d","opacity","isBrowser","fetchIconProps","callback","createObserver","entries","forEach","entry","isIntersecting","_this3","rootMargin","observe","Switch","disabled","toggle","switchEl","focusElement","input","type","setFocus","calciteSwitchChange","connectInteractive","connectLabel","connectForm","disconnectInteractive","disconnectLabel","disconnectForm","updateHostInteraction","clickHandler","keyDownHandler","InteractiveContainer","getLabelText","ref","setSwitchEl","HiddenFormInputSlot","component","componentLangToMessageBundleCache","getMessageBundle","_getMessageBundle","lang","ok","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","_setUpMessages","fetchMessages","_fetchMessages","_context3","tag","tagName","toLowerCase","componentName","getSupportedLocale","_updateMessages","_context4","onMessagesChange","defaultOnMessagesChange"],"sourceRoot":""}