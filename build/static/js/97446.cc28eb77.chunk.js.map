{"version":3,"file":"static/js/97446.cc28eb77.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/color-name/index.js","../node_modules/@esri/calcite-components/node_modules/simple-swizzle/index.js","../node_modules/@esri/calcite-components/node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../node_modules/@esri/calcite-components/node_modules/color-string/index.js","../node_modules/@esri/calcite-components/node_modules/color-convert/conversions.js","../node_modules/@esri/calcite-components/node_modules/color-convert/route.js","../node_modules/@esri/calcite-components/node_modules/color-convert/index.js","../node_modules/@esri/calcite-components/node_modules/color/index.js","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/utils.ts"],"sourcesContent":["export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n","import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n","$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","import Color from \"color\";\n\nexport const CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\",\n};\n\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\n\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100,\n};\n\n// 0 and 360 represent the same value, so we limit the hue to 359\nexport const HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\n\nexport const OPACITY_LIMITS = {\n  min: 0,\n  max: 100,\n};\n\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104,\n    },\n    colorField: {\n      height: 80,\n      width: 160,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 20,\n    },\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204,\n    },\n    colorField: {\n      height: 150,\n      width: 272,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 24,\n    },\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384,\n    },\n    colorField: {\n      height: 200,\n      width: 464,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 32,\n    },\n  },\n};\n\nexport const SCOPE_SIZE = 1;\n","import Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { ColorValue, HSLA, HSVA, RGB, RGBA } from \"./interfaces\";\nimport { DIMENSIONS } from \"./resources\";\n\nexport const hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\n\nexport const alphaToOpacity = (alpha: number): number => Number((alpha * 100).toFixed());\n\nexport const opacityToAlpha = (opacity: number): number => Number((opacity / 100).toFixed(2));\n\nexport function isValidHex(hex: string, hasAlpha = false): boolean {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\n\nexport function canConvertToHexa(hex: string): boolean {\n  const validHex = isValidHex(hex, false);\n  const validHexa = isValidHex(hex, true);\n  return !validHexa && validHex;\n}\n\nfunction evaluateHex(hex: string, length: number, pattern: RegExp): boolean {\n  if (!hex) {\n    return false;\n  }\n\n  return hex.length === length && pattern.test(hex);\n}\n\nexport function isShorthandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function isLonghandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function normalizeHex(hex: string, hasAlpha = false, convertFromHexToHexa = false): string {\n  hex = hex.toLowerCase();\n\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n\n  return hex;\n}\n\nexport function hexify(color: Color, hasAlpha = false): string {\n  return hasAlpha ? color.hexa() : color.hex();\n}\n\nexport function rgbToHex(color: RGB | RGBA): string {\n  const { r, g, b } = color;\n\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\n\nfunction numToHex(num: number): string {\n  return num.toString(16).padStart(2, \"0\");\n}\n\nexport function normalizeAlpha<T extends RGBA | HSVA | HSLA>(colorObject: ReturnType<Color[\"object\"]>): T {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n\n  return normalized as T;\n}\n\nexport function normalizeColor(alphaColorObject: RGBA | HSVA | HSLA): ReturnType<Color[\"object\"]> {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n\n  return normalized;\n}\n\nexport function hexToRGB(hex: string, hasAlpha = false): RGB | RGBA {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n\n  hex = hex.replace(\"#\", \"\");\n\n  let r: number;\n  let g: number;\n  let b: number;\n  let a: number;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = <T extends { [index: string]: U }, U extends string>(x: T) => x;\ntype Enumify<T> = T[keyof T];\n\nexport const CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\ntype CSSColorMode = Enumify<typeof CSSColorMode>;\n\nexport const ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\ntype ObjectColorMode = Enumify<typeof ObjectColorMode>;\n\nexport type SupportedMode = CSSColorMode | ObjectColorMode;\n\nexport type Format = \"auto\" | SupportedMode;\n\nexport function parseMode(colorValue: ColorValue): SupportedMode | null {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n\n  return null;\n}\n\nfunction hasChannels(colorObject: Exclude<ColorValue, string> | null, ...channels: string[]): boolean {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\n\nexport function colorEqual(value1: Color | null, value2: Color | null): boolean {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\n\nexport function alphaCompatible(mode: SupportedMode): boolean {\n  return (\n    mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA\n  );\n}\n\nexport function toAlphaMode(mode: SupportedMode): SupportedMode {\n  const alphaMode =\n    mode === CSSColorMode.HEX\n      ? CSSColorMode.HEXA\n      : mode === CSSColorMode.RGB_CSS\n        ? CSSColorMode.RGBA_CSS\n        : mode === CSSColorMode.HSL_CSS\n          ? CSSColorMode.HSLA_CSS\n          : mode === ObjectColorMode.RGB\n            ? ObjectColorMode.RGBA\n            : mode === ObjectColorMode.HSL\n              ? ObjectColorMode.HSLA\n              : mode === ObjectColorMode.HSV\n                ? ObjectColorMode.HSVA\n                : mode;\n\n  return alphaMode;\n}\n\nexport function toNonAlphaMode(mode: SupportedMode): SupportedMode {\n  const nonAlphaMode =\n    mode === CSSColorMode.HEXA\n      ? CSSColorMode.HEX\n      : mode === CSSColorMode.RGBA_CSS\n        ? CSSColorMode.RGB_CSS\n        : mode === CSSColorMode.HSLA_CSS\n          ? CSSColorMode.HSL_CSS\n          : mode === ObjectColorMode.RGBA\n            ? ObjectColorMode.RGB\n            : mode === ObjectColorMode.HSLA\n              ? ObjectColorMode.HSL\n              : mode === ObjectColorMode.HSVA\n                ? ObjectColorMode.HSV\n                : mode;\n\n  return nonAlphaMode;\n}\n\nexport function getSliderWidth(activeDimensions: (typeof DIMENSIONS)[Scale], hasAlpha: boolean): number {\n  const {\n    slider: { width },\n    preview,\n  } = activeDimensions;\n\n  if (hasAlpha) {\n    return width;\n  }\n\n  const previewWidthOffset = DIMENSIONS[\"l\"].preview.size - preview.size;\n\n  return width + previewWidthOffset;\n}\n"],"names":["CSS","COLORS","CHECKER_DIMENSIONS","squareSize","size","checkerSquareSize","ColorPickerSwatch","_inherits","color","this","internalColor","Color","handleColorChange","key","value","isEmpty","classes","h","class","xmlns","renderSwatch","active","el","borderRadius","commonSwatchProps","height","rx","stroke","getModeName","Fragment","id","width","x1","x2","y1","y2","alpha","hex","hexify","hexa","patternUnits","x","y","fill","style","get","HTMLElement","colorName","isArrayish","obj","Array","isArray","length","splice","Function","Object","getOwnPropertyDescriptor","constructor","name","concat","prototype","slice","swizzle","simpleSwizzleModule","args","results","i","len","arg","call","push","wrap","fn","arguments","colorNames","require$$0","require$$1","hasOwnProperty","reverseNames","create","cs","colorStringModule","to","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","match","hexAlpha","i2","parseInt","parseFloat","isNaN","rgba","percent","r","g","b","hsla","hwba","a","keyword","cssKeywords","reverseKeywords","keys","convert","channels","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","gray","conversions","Error","defineProperty","delta","l","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","z","t2","t3","t1","smin","lmin","hi","floor","f","p","q","t","sl","vmin","wh","bl","ratio","n","m","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","mult","rem","colorString","split","map","char","join","integer","hue","chroma","mg","pure","w","deriveBFS","fromModel","graph","models","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","toModel","path","cur","conversion","route","forEach","routes","wrappedFn","arg0","undefined","result","wrapRounded","raw","wrapRaw","colorConvert","skippedModels","hashedModelKeys","_toConsumableArray","sort","limiters","object","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","number","Number","toFixed","roundTo","roundToPlace","red","getset","maxfn","green","blue","saturationl","lightness","saturationv","white","wblack","cyan","magenta","yellow","black","rgbArray","alphaHex","rgbNumber","luminosity","_step","lum","entries","chan","_iterator","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","assertArray","channel","modifier","_step2","_iterator2","colorField","colorFieldScope","colorMode","colorModeContainer","container","control","controlAndScope","controlSection","deleteColor","header","hexAndChannelsGroup","hexOptions","hueScope","hueSlider","opacityScope","opacitySlider","preview","previewAndSliders","saveColor","savedColor","savedColors","savedColorsButtons","savedColorsSection","scope","section","slider","sliders","splitSection","DEFAULT_COLOR","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","HSV_LIMITS","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","DIMENSIONS","thumb","radius","SCOPE_SIZE","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","opacityToAlpha","opacity","isValidHex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","pattern","test","hexLength","hexPattern","normalizeHex","convertFromHexToHexa","startsWith","rgbToHex","hexToRGB","isShorthand","rChars","numToHex","gChars","bChars","alphaChars","padStart","normalizeAlpha","colorObject","normalized","normalizeColor","alphaColorObject","replace","_hex$split2","first","second","third","fourth","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","every","colorEqual","value1","value2","alphaCompatible","mode","toAlphaMode","toNonAlphaMode","getSliderWidth","activeDimensions"],"sourceRoot":""}