{"version":3,"file":"static/js/7769.232d4acf.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/tabs/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow"],"sourcesContent":["export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { getSlotAssignedElements, slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabNavSlotChange\")\n  calciteInternalTabNavSlotChangeHandler(event: CustomEvent): void {\n    event.stopPropagation();\n    if (event.detail.length !== this.titles.length) {\n      this.titles = event.detail;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  private defaultSlotChangeHandler = (event): void => {\n    this.tabs = slotChangeGetAssignedElements(event, \"calcite-tab\") as HTMLCalciteTabElement[];\n  };\n\n  private slotEl: HTMLSlotElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  @Watch(\"titles\")\n  titlesWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  @Watch(\"tabs\")\n  tabsWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async updateAriaSettings(): Promise<void> {\n    let tabIds;\n    let titleIds;\n    const tabs = getSlotAssignedElements<HTMLCalciteTabElement>(this.slotEl, \"calcite-tab\");\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(tabs.map((el) => el.getTabIndex()));\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  private setDefaultSlotRef = (el) => (this.slotEl = el);\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {}\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot onSlotchange={this.defaultSlotChangeHandler} ref={this.setDefaultSlotRef} />\n        </section>\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n\n  section {\n    @apply border-color-1 border border-solid;\n  }\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n"],"names":["SLOTS","Tabs","_inherits","_this","event","tabs","slotChangeGetAssignedElements","el","slotEl","this","updateItems","stopPropagation","detail","length","titles","key","value","updateAriaSettings","getSlotAssignedElements","some","tab","_context","tabIds","sort","a","b","localeCompare","map","id","titleIds","Promise","all","getTabIndex","tabDomIndexes","titleDomIndexes","reduce","ids","indexInDOM","registryIndex","_this2","forEach","updateAriaInfo","position","scale","nav","querySelector","Array","from","querySelectorAll","parentElement","_this3","title","h","Fragment","name","onSlotchange","defaultSlotChangeHandler","ref","setDefaultSlotRef","get","HTMLElement"],"sourceRoot":""}