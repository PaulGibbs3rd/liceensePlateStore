{"version":3,"file":"static/js/68698.953becf1.chunk.js","mappings":"2TAOMA,EAAa,SAACC,GAAa,OAAKA,EAAIC,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GAAKH,EAAII,MAAM,EAEpEC,EAAqB,SAChCC,GAEA,IAAMC,EAAoBD,EAAQE,QAAO,SAACC,GAAM,OAAKA,EAAOC,OAASC,EAAAA,EAAAA,WAA8B,IAC7FC,EAA6B,OAAjBL,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBH,OACrC,MAAO,CACLS,YAAaD,EAAYb,EAAWQ,EAAkBO,KAAI,SAACL,GAAM,OAAKA,EAAOM,aAAe,CAAC,KAAK,EAClGC,aAAcJ,EAAYb,EAAWQ,EAAkBO,KAAI,SAACL,GAAM,OAAKA,EAAOQ,cAAgB,CAAC,KAAK,EAExG,EAsBaC,EAAmB,SAAHA,GAgB5B,IAfCC,EAAM,EAANA,OACAC,EAAW,EAAXA,YACAP,EAAW,EAAXA,YACAQ,EAAK,EAALA,MACAL,EAAY,EAAZA,aACAM,EAAM,EAANA,OACAC,EAAU,EAAVA,WAUA,OAAOC,KAAKC,IAAIL,EArCQ,SAAHM,GActB,IAbCL,EAAK,EAALA,MACAR,EAAW,EAAXA,YACAM,EAAM,EAANA,OACAG,EAAM,EAANA,OACAN,EAAY,EAAZA,aACAO,EAAU,EAAVA,WASMI,EAA4B,eAAXR,EAA0BE,EAAQC,EACnDM,EAAuB,eAAXT,EAA0BN,EAAcG,EAC1D,OAAOQ,KAAKK,OAAOF,EAhCC,EAgCgBJ,GAA8BK,EACpE,CAmBgCF,CAAkB,CAAEL,MAAAA,EAAOR,YAAAA,EAAaM,OAAAA,EAAQG,OAAAA,EAAQN,aAAAA,EAAcO,WAAAA,IAAe,EACrH,EAEaO,EAAe,SAACC,GAC3B,OAAOC,MAAMC,KAAKF,EAAGG,iBAAiB,mBAAmB1B,QAAO,SAACC,GAAM,OACrEA,EAAO0B,QAAQ,wBAAyB1B,EAAOC,OAAS0B,EAAAA,EAAAA,OAAgC,GAE5F,EAEaC,EAAkB,SAAHA,GAQ3B,IAPCC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SAOIC,EANS,EAAbC,cAOAH,EAAaI,UAAUC,SAAQ,SAACC,GAC9B,IAAIC,EAA0B,EAExBC,EAAehB,EAAac,GAAOF,UAEzCI,EAAaH,SAAQ,SAACI,GAChBA,EAAYrC,OAASC,EAAAA,EAAAA,cACvBoC,EAAYC,gBAAgB,QAC5BD,EAAYE,YAAcV,E,IAI1BC,EAAkB,GACpBM,EAAaI,MAAK,SAACH,GAajB,OAZyBD,EAAatC,QAAO,SAACC,GAAM,OAAMA,EAAOC,IAAI,IAEhDN,OAAS,GAAK0C,EAAa1C,OAAS,IAAM2C,EAAYZ,QAAQ,yBACjFY,EAAYE,aAAc,EAC1BF,EAAYI,aAAa,OAAQxC,EAAAA,EAAAA,eACjCkC,EAE8B,GAC5BL,KAIGA,EAAkB,C,KAI7BY,EAAAA,EAAAA,IAAYR,E,GAEhB,ECxFMS,EACU,gBADVA,EAEW,iB,SAODC,EAAsB,GAMrC,IALCvB,EAAE,EAAFA,GACAQ,EAAQ,EAARA,SAKAT,EAAaC,GACVvB,QAAO,SAACuB,GAAE,OAAKA,EAAGrB,OAASC,EAAAA,EAAAA,WAA8B,IACzDgC,SAAQ,SAAClC,GAAM,OAAMA,EAAOwC,YAAcV,CAAQ,IACrDR,EAAGG,iBAAiB,6CAA6CS,SAC/D,SAACZ,GAAgE,OAAMA,EAAGQ,SAAWA,CAAQ,GAEjG,CAEA,IAsBagB,EAAuD,SAA3CA,GAYxB,IAXChB,EAAQ,EAARA,SACAiB,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAM,EAANA,OACA7B,EAAE,EAAFA,GACA8B,EAAQ,EAARA,SACAC,EAAO,EAAPA,QACAC,EAAG,EAAHA,IACAC,EAAK,EAALA,MAEMC,EAA4B,SAAtBC,EAAAA,EAAAA,GAAcnC,GAEpBoC,EAAO5B,EAAWkB,EAAeD,EACjCY,EAAQ7B,EAAWoB,EAAgBD,EACnCW,EAAQ,CAAChB,EAAoBA,GAE/BY,GACFI,EAAM3B,UAGR,IAAM4B,EAA2C,QAhEnD,SAA4BT,EAAoB9B,GAAe,MAC7D,OAAO8B,IAA6C,QAArC,EAAI9B,EAAGI,QAAQ,8BAAsB,aAAjCoC,EAAmCV,WAAY,OACpE,CA8DcW,CAAmBX,EAAU9B,GACnC0C,EAAaH,EAAMD,EAAM,GAAKA,EAAM,GACpCK,EAAeJ,EAAMD,EAAM,GAAKA,EAAM,GAEtCM,GACJC,EAAAA,EAAAA,GAAAA,iBAAAA,CACEC,KAAMtC,EAAWkC,EAAaC,EAC9BI,GAAG,gBACHV,MAAOA,EACPW,QAASnB,EACTG,IAAK,SAACiB,GAAgB,OAvDA,SAAHC,GAUxB,IATCnB,EAAO,EAAPA,QACAkB,EAAgB,EAAhBA,iBACAzC,EAAQ,EAARA,SACAwB,EAAG,EAAHA,IAeA,OARID,IACFA,EAAQkB,kBAAoBzC,GAAYyC,EAAmBA,EAAmB,MAG5EjB,GACFA,EAAIiB,GAGCA,CACT,CAoCQC,CAAoB,CAAEnB,QAAAA,EAASkB,iBAAAA,EAAkBzC,SAAAA,EAAUwB,IAAAA,GAAM,EAEnEC,MAAOA,EACPG,KAAMA,EACNlB,YAAaV,EACb2C,MAAQ3C,GAAauB,EAAiB,KAAPK,IAInC,OAAOQ,CACT,C,oSC9GaQ,EAAQ,CACnBC,YAAa,eACbC,YAAa,gBAGFhC,EACL,WAGKiC,EACA,YCgCAC,GAAW,qBAAAC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,iB,mBA0FS,O,oEA2F/BC,EAAAA,YAAc,SAACC,GACbD,EAAKE,WAAcD,EAAME,OAAwCC,I,EAGnEJ,EAAAA,4BAA8B,SAACC,GAC7BD,EAAKK,gBAAiBC,EAAAA,EAAAA,GAA6BL,E,cA9KjB,E,wBAiBmD,W,6BAUpC,E,qBASe,W,6EAiCvC,G,2CASD,EAAK,C,+CA3E/B,WACEM,KAAKL,UAAW,C,GACjB,CAAAM,IAAAA,mBAAAC,MAqDD,W,GAEC,CAAAD,IAAAA,wBAAAC,MAYD,YACEC,EAAAA,EAAAA,GAAeH,KAAMA,KAAKI,gB,kEAe5B,0FAAAC,EAAAA,KAAAA,GACQC,EAAAA,EAAAA,GAAmBN,MAAK,OAC9BA,KAAKjE,GAAGwE,QAAQ,gDACjB,kD,mCAOD,YACEC,EAAAA,EAAAA,GAAiBR,OACjBS,EAAAA,EAAAA,GAAgBT,OAChBU,EAAAA,EAAAA,GAAgCV,K,GACjC,CAAAC,IAAAA,uBAAAC,MAED,YACES,EAAAA,EAAAA,GAAoBX,OACpBY,EAAAA,EAAAA,GAAmBZ,OACnBa,EAAAA,EAAAA,GAAmCb,K,GACpC,CAAAC,IAAAA,oBAAAC,MAAAA,WAAA,8BAED,mFAC+B,OAA7BY,EAAAA,EAAAA,GAAuBd,MAAMe,EAAAA,KAAAA,GACvBC,EAAAA,EAAAA,GAAchB,MAAK,gDAC1B,kDALAE,IAKA,CAAAD,IAAAA,mBAAAC,MAED,YACEe,EAAAA,EAAAA,GAAmBjB,K,2BASrB,WACE,IAAQzD,EACNyD,KADMzD,SAAUoD,EAChBK,KADgBL,SAAU3B,EAC1BgC,KAD0BhC,MAAO7C,EACjC6E,KADiC7E,OAAQ+F,EACzClB,KADyCkB,SAAUC,EACnDnB,KADmDmB,mBAAoBrB,EACvEE,KADuEF,eAGzE,OACElB,EAAAA,EAAAA,GAAAA,sBAAAA,CACErC,SAAUA,EACV6E,eAAgB,CAAC,OAAQ,SACzBC,QAASvB,EACT1B,MAAO8C,EAASI,KAChBC,wBAAyBvB,KAAKwB,YAC9B3B,KAAMF,EACNwB,mBAAoBA,EACpBM,UAAsB,eAAXtG,EAA0B,eAAiB,gBACtD6C,MAAOA,IAEPY,EAAAA,EAAAA,GAAAA,iBAAAA,CACEC,KAAMxB,EACNW,MAAOA,EACPtD,KAAM0B,EAAAA,EAAAA,QACN+B,KAAM+C,EAASI,KACfrE,YAAaV,KAEfqC,EAAAA,EAAAA,GAAAA,OAAAA,CAAM8C,KAAMvC,EAAMC,YAAauC,aAAc3B,KAAK4B,+BAClDhD,EAAAA,EAAAA,GAAAA,OAAAA,CAAM8C,KAAMvC,EAAME,YAAa3E,KAAM0B,EAAAA,EAAAA,U,GAG1C,CAAA6D,IAAAA,SAAAC,MAED,WACE,OACEtB,EAAAA,EAAAA,GAAAA,MAAAA,CAAAqB,IAAAA,2CAAA,aAAiBD,KAAK5B,MAAOyD,MAAOvC,EAAewC,KAAK,UACtDlD,EAAAA,EAAAA,GAAAA,OAAAA,CAAAqB,IAAAA,6CACCD,KAAK+B,a,GAGX,CAAA9B,IAAAA,KAAA+B,IAAAA,W,4SCvNoB,wzC,OD0CC,CAAAC,EAAAA,IAAAA,CAAAA,GAAAA,uBAAAA,C,0zCE1CX3C,EACK,oBAGLH,EACC,cADDA,EAEI,iBAFJA,EAGI,iBCoDJ+C,GAAS,qBAAA1C,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,iB,uKAwHpBC,EAAAA,kBAAmB0C,EAAAA,EAAAA,GAAe,YAAY,WAC5C,iBAAQpG,EAAE,EAAFA,GAAIQ,EAAQ,EAARA,UACZe,EAAAA,EAAAA,GAAsB,CAAEvB,GAAAA,EAAIQ,SAAAA,IAC5BkD,EAAKpD,iB,IAGPoD,EAAAA,gBAAiB0C,EAAAA,EAAAA,GAAe,UAAU,SAACC,GAAO,OAAK3C,EAAK4C,qBAAqBD,EAAQ,IA+FzF3C,EAAAA,sBAAwB,SAACC,GACvB,GAAKA,EAAME,OAAyCD,SAAU,CAC5D,IAAM2C,EAAe5C,EAAM4C,eAC3BtG,MAAMC,KAAKwD,EAAK1D,GAAGG,iBAAiB,yBAAyBS,SAAQ,SAACC,GAC/D0F,EAAaC,SAAS3F,KACzBA,EAAM+C,UAAW,E,MAMzBF,EAAAA,qBAAuB,SAAC2C,GACtBA,EAAQzF,QAAQ8C,EAAK+C,c,EAGvB/C,EAAAA,cAAgB,SAACgD,GACf,MAA0BA,EAAMC,YAAxBrH,EAAK,EAALA,MAAOC,EAAM,EAANA,OACfmE,EAAKkD,OAAO,CAAEtH,MAAAA,EAAOC,OAAAA,G,EAGfmE,EAAAA,QAASmD,EAAAA,EAAAA,IAAS,YAAqD,IAAlDvH,EAAK,EAALA,MAAOC,EAAM,EAANA,OAClC,aAAQS,EAAE,EAAFA,GAAIQ,EAAQ,EAARA,SAAUsG,EAAc,EAAdA,eAAgB1H,EAAM,EAANA,OAEtC,KAFqE,EAAvB2H,yBAIhC,aAAX3H,IAA0BG,GACf,eAAXH,IAA4BE,GAH/B,CAQA,IAAMf,GAAUwB,EAAAA,EAAAA,GAAaC,GACvBX,EAAcyH,EAAiBvI,EAAQF,OAASE,EAAQF,OAAS,EACjEkC,EAAeN,MAAMC,KAAKF,EAAGG,iBAAiB,yBAEpDuD,EAAKsD,eAAezG,GAEpB,IAAMf,EACJkE,EAAKuD,eAAiBvD,EAAKwD,mBAAqBJ,EAC5CvG,EAAalC,OAAS,EACtBkC,EAAalC,OAEnB,GAAsCC,EAAAA,EAAAA,GAAmBC,GAAjDU,EAAY,EAAZA,aAAcH,EAAW,EAAXA,YAEhB4B,GAAgBvB,EAAAA,EAAAA,GAAiB,CACrCC,OAAAA,EACAC,YAAAA,EACAJ,aAAAA,EACAH,YAAAA,EACAS,OAAAA,EACAD,MAAAA,EACAE,WAAAA,KAGFc,EAAAA,EAAAA,GAAgB,CACdC,aAAAA,EACAC,SAAAA,EACAE,cAAAA,G,IAEDyG,EAAAA,EAAAA,QAEHzD,EAAAA,aAAe,WACbA,EAAKlD,UAAYkD,EAAKlD,SACtBkD,EAAK0D,uBAAuBC,M,EAG9B3D,EAAAA,mBAAqB,SAAC1D,GACpB0D,EAAK4D,eAAiBtH,C,EAWxB0D,EAAAA,wBAA0B,SAACC,GACzB,IAAM4D,GAASC,EAAAA,EAAAA,GAA8B7D,GAAOlF,QAAO,SAACuB,GAAE,OAC5DA,EAAGyH,QAAQ,uBAAuB,IAGpC/D,EAAKsD,eAAeO,E,EAGtB7D,EAAAA,2BAA6B,SAACC,GAC5BD,EAAKuD,eAAgBjD,EAAAA,EAAAA,GAA6BL,E,EAGpDD,EAAAA,8BAAgC,SAACC,GAC/BD,EAAKwD,kBAAmBlD,EAAAA,EAAAA,GAA6BL,E,EAGvDD,EAAAA,wBAA0B,SAACC,GACzB,IAAM+D,GAAWF,EAAAA,EAAAA,GAA8B7D,GAAOlF,QAAO,SAACuB,GAAE,OAC5D,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIyH,QAAQ,kBAAkB,IAGhC/D,EAAKiE,cAAgBD,EAAS,E,kDA/SU,E,YAUS,E,SAY2B,W,2BAU3B,E,qBAqBe,W,uHA8DzC,E,oBAEG,E,8FAlH5B,WACEzD,KAAK3D,iB,GACN,CAAA4D,IAAAA,kBAAAC,MAQD,WACE,IAAQnE,EAAiBiE,KAAjBjE,GAAIQ,EAAayD,KAAbzD,UACZe,EAAAA,EAAAA,GAAsB,CAAEvB,GAAAA,EAAIQ,SAAAA,IAC5ByD,KAAK3D,iB,GACN,CAAA4D,IAAAA,gBAAAC,MAQD,WACEF,KAAK2D,c,GACN,CAAA1D,IAAAA,0BAAAC,MAQD,SAAwB4C,GAAgC,MACzB,EAAzBA,EACiB,QAAnB,EAAA9C,KAAK4D,sBAAc,OAAnBC,EAAqBC,cAIJ,QAAnB,EAAA9D,KAAK4D,sBAAc,OAAnBG,EAAqBC,QAAQhE,KAAKjE,IAClCiE,KAAK3D,kB,GACN,CAAA4D,IAAAA,mBAAAC,MAqCD,W,GAEC,CAAAD,IAAAA,wBAAAC,MAwCD,YACEC,EAAAA,EAAAA,GAAeH,KAAMA,KAAKI,gB,iCAW5B,WACE,IAAQrE,EAAiBiE,KAAjBjE,GAAIQ,EAAayD,KAAbzD,UAEZ0E,EAAAA,EAAAA,GAAmBjB,OACnB1C,EAAAA,EAAAA,GAAsB,CAAEvB,GAAAA,EAAIQ,SAAAA,IAC5ByD,KAAK3D,iB,GACN,CAAA4D,IAAAA,oBAAAC,MAED,WAAiB,MASoB,EAR3BnE,EAAiBiE,KAAjBjE,GAAIQ,EAAayD,KAAbzD,WAEZiE,EAAAA,EAAAA,GAAiBR,OACjBS,EAAAA,EAAAA,GAAgBT,OAChB1C,EAAAA,EAAAA,GAAsB,CAAEvB,GAAAA,EAAIQ,SAAAA,IAEP,QAArB,EAAAyD,KAAKiE,wBAAgB,OAArBC,EAAuBF,QAAQjI,EAAI,CAAEoI,WAAW,EAAMC,SAAS,IAE1DpE,KAAK8C,2BACW,QAAnB,EAAA9C,KAAK4D,sBAAc,OAAnBS,EAAqBL,QAAQjI,IAG/BiE,KAAK3D,mBACLqE,EAAAA,EAAAA,GAAgCV,K,GACjC,CAAAC,IAAAA,oBAAAC,MAAAA,WAAA,8BAED,mFAC+B,OAA7BY,EAAAA,EAAAA,GAAuBd,MAAMK,EAAAA,KAAAA,GACvBW,EAAAA,EAAAA,GAAchB,MAAK,gDAC1B,kDALAE,IAKA,CAAAD,IAAAA,uBAAAC,MAED,WAAoB,QACG,QAArB,EAAAF,KAAKiE,wBAAgB,OAArBK,EAAuBR,aACJ,QAAnB,EAAA9D,KAAK4D,sBAAc,OAAnBW,EAAqBT,cACrBjD,EAAAA,EAAAA,GAAmCb,OACnCW,EAAAA,EAAAA,GAAoBX,OACpBY,EAAAA,EAAAA,GAAmBZ,K,yEAerB,mFACEA,KAAK2C,OAAO,CAAEtH,MAAO2E,KAAKjE,GAAGhB,YAAaO,OAAQ0E,KAAKjE,GAAGd,eAAgB,gDAC3E,kD,mEAMD,0FAAAuJ,EAAAA,KAAAA,GACQlE,EAAAA,EAAAA,GAAmBN,MAAK,QAE9ByE,EAAAA,EAAAA,GAAmBzE,KAAKjE,IAAI,gDAC7B,kD,IAAA,CAAAkE,IAAAA,eAAAC,MA8ED,WACEF,KAAK+C,eAAe/G,MAAMC,KAAK+D,KAAKjE,GAAGG,iBAAiB,yB,GACzD,CAAA+D,IAAAA,iBAAAC,MAED,SAAeoD,GAAuC,WACpDA,EAAO3G,SAAQ,SAACC,GAAK,OAAMA,EAAMzB,OAASuJ,EAAKvJ,MAAM,G,wCAiCvD,WACE,IACEoB,EAUEyD,KAVFzD,SACAsG,EASE7C,KATF6C,eACA9G,EAQEiE,KARFjE,GACA8B,EAOEmC,KAPFnC,SACA8G,EAME3E,KANF2E,aACA3G,EAKEgC,KALFhC,MACA7C,EAIE6E,KAJF7E,OACA+F,EAGElB,KAHFkB,SACA0D,EAEE5E,KAFF4E,qBACAzD,EACEnB,KADFmB,mBAGI0D,EAAoBhC,EActB,MAbFjE,EAAAA,EAAAA,GAACrB,EAAAA,EAAY,CACXI,cAAeuD,EAASvD,cACxBF,aAAcyD,EAAS4D,SACvB/I,GAAIA,EACJ2B,YAAawD,EAASxD,YACtBF,WAAY0D,EAAS6D,OACrBxI,SAAUA,EACVsB,SAAUA,EACVE,IAAKiC,KAAKgF,mBACVhH,MAAOA,EACPJ,OAAQ+G,EACR7G,QAASkC,KAAK0D,gBAIlB,OACE9E,EAAAA,EAAAA,GAAAA,uBAAAA,CACEiD,MAAOvC,EACP+B,OAAQrB,KAAK6C,kBAAoB7C,KAAKgD,eAAiBhD,KAAKiD,kBAC5D7E,MAAOwG,EACPzJ,OAAQA,EACRgG,mBAAoBA,EACpBnD,MAAOA,IAEPY,EAAAA,EAAAA,GAAAA,OAAAA,CAAM8C,KAAMvC,EAAkBwC,aAAc3B,KAAKiF,8BACjDrG,EAAAA,EAAAA,GAAAA,OAAAA,CAAM8C,KAAMvC,EAAqBwC,aAAc3B,KAAKkF,iCACpDtG,EAAAA,EAAAA,GAAAA,OAAAA,CAAM8C,KAAMvC,EAAqBwC,aAAc3B,KAAKmF,0BACnDN,E,GAGN,CAAA5E,IAAAA,SAAAC,MAED,WACE,OACEtB,EAAAA,EAAAA,GAACwG,EAAAA,GAAI,CAAAnF,IAAAA,2CAACsB,wBAAyBvB,KAAKqF,wBAClCzG,EAAAA,EAAAA,GAAAA,OAAAA,CAAAqB,IAAAA,2CAAM0B,aAAc3B,KAAKsF,0BACxBtF,KAAKuF,0B,GAGX,CAAAtF,IAAAA,KAAA+B,IAAAA,W,0WC1bkB,wnC,OD2DC,CAAAC,EAAAA,IAAAA,CAAAA,EAAAA,qBAAAA,C,k5CExClBgC,E,sBACEuB,EAAiF,CAAErB,WAAW,G,SAYpFzD,EAAgC+E,GACzCxB,IACHA,GAAmB9B,EAAAA,EAAAA,GAAe,WAAYuD,IAGhDzB,EAAiBD,QAAQyB,EAAU1J,GAAIyJ,EACzC,C,SAYgB3E,EAAmC4E,GACjDxB,EAAiB0B,UAAUF,EAAU1J,GACvC,CAEA,SAAS2J,EAAiBE,GACxBA,EAAUjJ,SAAQ,YAAW,IAARiD,EAAM,EAANA,QACnBxC,EAAAA,EAAAA,IAAYwC,E,GAEhB,C","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/functional/ExpandToggle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.scss?tag=calcite-action-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.scss?tag=calcite-action-bar&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts"],"sourcesContent":["import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  expandLabel: string;\n  collapseLabel: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n} as const;\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  expandLabel,\n  collapseLabel,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}): VNode => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const label = expanded ? collapseLabel : expandLabel;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      id=\"expand-toggle\"\n      label={label}\n      onClick={toggle}\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n    />\n  );\n\n  return actionNode;\n};\n","export const SLOTS = {\n  menuActions: \"menu-actions\",\n  menuTooltip: \"menu-tooltip\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const CSS = {\n  container: \"container\",\n};\n","import { Component, Element, h, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { CalciteActionMenuCustomEvent } from \"../../components\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Columns } from \"./interfaces\";\nimport { ActionGroupMessages } from \"./assets/action-group/t9n\";\nimport { ICONS, SLOTS, CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a group of `calcite-action`s.\n * @slot menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot menu-tooltip - A slot for adding a `calcite-tooltip` for the menu.\n */\n@Component({\n  tag: \"calcite-action-group\",\n  styleUrl: \"action-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionGroup\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.menuOpen = false;\n  }\n\n  /**\n   *  Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Indicates the layout of the component.\n   *\n   * @deprecated Use the `layout` property on the component's parent instead.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\" | \"grid\", Layout> = \"vertical\";\n\n  /**\n   * Indicates number of columns.\n   */\n  @Prop({ reflect: true }) columns: Columns;\n\n  /**\n   * When `true`, the `calcite-action-menu` is open.\n   */\n  @Prop({ reflect: true, mutable: true }) menuOpen = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Specifies the size of the `calcite-action-menu`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionGroupMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionGroupMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteActionGroupElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionGroupMessages;\n\n  @State() hasMenuActions = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderMenu(): VNode {\n    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } =\n      this;\n\n    return (\n      <calcite-action-menu\n        expanded={expanded}\n        flipPlacements={[\"left\", \"right\"]}\n        hidden={!hasMenuActions}\n        label={messages.more}\n        onCalciteActionMenuOpen={this.setMenuOpen}\n        open={menuOpen}\n        overlayPositioning={overlayPositioning}\n        placement={layout === \"horizontal\" ? \"bottom-start\" : \"leading-start\"}\n        scale={scale}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.more}\n          textEnabled={expanded}\n        />\n        <slot name={SLOTS.menuActions} onSlotchange={this.handleMenuActionsSlotChange} />\n        <slot name={SLOTS.menuTooltip} slot={ACTION_MENU_SLOTS.tooltip} />\n      </calcite-action-menu>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <div aria-label={this.label} class={CSS.container} role=\"group\">\n        <slot />\n        {this.renderMenu()}\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setMenuOpen = (event: CalciteActionMenuCustomEvent<void>): void => {\n    this.menuOpen = !!(event.target as HTMLCalciteActionMenuElement).open;\n  };\n\n  handleMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuActions = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-background-color: Specifies the component's background color.\n * @prop --calcite-action-group-border-color: Specifies the component's border color when used in a calcite-action-bar or calcite-action-menu.\n * @prop --calcite-action-group-columns: Specifies the component's grid-template-columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-gap: Specifies the component's gap  when the `layout` property is `\"grid\" and padding`.\n * @prop --calcite-action-group-padding: [Deprecated] Use --calcite-action-group-gap. Specifies the component's padding.\n *\n */\n\n:host {\n  @extend %component-host;\n\n  @apply flex\n  flex-col\n  p-0;\n\n  background-color: transparent;\n  border-color: var(--calcite-action-group-border-color, var(--calcite-color-border-3));\n  border-style: solid;\n  border-width: 0;\n}\n\n.container {\n  @apply flex flex-col flex-grow;\n}\n\n:host([columns=\"1\"]) {\n  --calcite-internal-action-group-columns: 1;\n}\n:host([columns=\"2\"]) {\n  --calcite-internal-action-group-columns: 2;\n}\n:host([columns=\"3\"]) {\n  --calcite-internal-action-group-columns: 3;\n}\n:host([columns=\"4\"]) {\n  --calcite-internal-action-group-columns: 4;\n}\n:host([columns=\"5\"]) {\n  --calcite-internal-action-group-columns: 5;\n}\n:host([columns=\"6\"]) {\n  --calcite-internal-action-group-columns: 6;\n}\n\n:host(:first-child) {\n  @apply pt-0;\n}\n\n:host([layout=\"horizontal\"]),\n:host([layout=\"horizontal\"]) .container {\n  @apply flex-row;\n}\n\n:host([layout=\"grid\"]) {\n  @apply grid;\n\n  .container {\n    @apply grid\n    place-content-stretch;\n    background-color: transparent;\n    grid-template-columns: repeat(\n      var(--calcite-action-group-columns, var(--calcite-internal-action-group-columns, 3)),\n      auto\n    );\n    gap: var(--calcite-action-group-gap, 1px);\n    padding: var(--calcite-action-group-gap, 1px);\n  }\n}\n\n@include base-component();\n","export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  bottomActions: \"bottom-actions\",\n  expandTooltip: \"expand-tooltip\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { DEBOUNCE } from \"../../utils/resources\";\nimport { ActionBarMessages } from \"./assets/action-bar/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { geActionDimensions, getOverflowCount, overflowActions, queryActions } from \"./utils\";\n\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-bar\",\n  styleUrl: \"action-bar.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ActionBar\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  @Watch(\"expandDisabled\")\n  expandHandler(): void {\n    this.overflowActions();\n  }\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  /**\n   *  Specifies the layout direction of the actions.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Disables automatically overflowing `calcite-action`s that won't fit into menus.\n   */\n  @Prop({ reflect: true }) overflowActionsDisabled = false;\n\n  @Watch(\"overflowActionsDisabled\")\n  overflowDisabledHandler(overflowActionsDisabled: boolean): void {\n    if (overflowActionsDisabled) {\n      this.resizeObserver?.disconnect();\n      return;\n    }\n\n    this.resizeObserver?.observe(this.el);\n    this.overflowActions();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Extract<\"start\" | \"end\", Position>;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionBarMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionBarMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionBarToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionBarElement;\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  });\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n\n  expandToggleEl: HTMLCalciteActionElement;\n\n  @State() effectiveLocale: string;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasBottomActions = false;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionBarMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    const { el, expanded } = this;\n\n    setComponentLoaded(this);\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  connectedCallback(): void {\n    const { el, expanded } = this;\n\n    connectLocalized(this);\n    connectMessages(this);\n    toggleChildActionText({ el, expanded });\n\n    this.mutationObserver?.observe(el, { childList: true, subtree: true });\n\n    if (!this.overflowActionsDisabled) {\n      this.resizeObserver?.observe(el);\n    }\n\n    this.overflowActions();\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Overflows actions that won't fit into menus.\n   *\n   * @internal\n   */\n  @Method()\n  async overflowActions(): Promise<void> {\n    this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  resizeHandlerEntries = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach(this.resizeHandler);\n  };\n\n  resizeHandler = (entry: ResizeObserverEntry): void => {\n    const { width, height } = entry.contentRect;\n    this.resize({ width, height });\n  };\n\n  private resize = debounce(({ width, height }: { width: number; height: number }): void => {\n    const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n\n    if (\n      overflowActionsDisabled ||\n      (layout === \"vertical\" && !height) ||\n      (layout === \"horizontal\" && !width)\n    ) {\n      return;\n    }\n\n    const actions = queryActions(el);\n    const actionCount = expandDisabled ? actions.length : actions.length + 1;\n    const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n\n    this.setGroupLayout(actionGroups);\n\n    const groupCount =\n      this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n        ? actionGroups.length + 1\n        : actionGroups.length;\n\n    const { actionHeight, actionWidth } = geActionDimensions(actions);\n\n    const overflowCount = getOverflowCount({\n      layout,\n      actionCount,\n      actionHeight,\n      actionWidth,\n      height,\n      width,\n      groupCount,\n    });\n\n    overflowActions({\n      actionGroups,\n      expanded,\n      overflowCount,\n    });\n  }, DEBOUNCE.resize);\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionBarToggle.emit();\n  };\n\n  setExpandToggleRef = (el: HTMLCalciteActionElement): void => {\n    this.expandToggleEl = el;\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter((el) =>\n      el.matches(\"calcite-action-group\"),\n    ) as HTMLCalciteActionGroupElement[];\n\n    this.setGroupLayout(groups);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleBottomActionsSlotChange = (event: Event): void => {\n    this.hasBottomActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter((el) =>\n      el?.matches(\"calcite-tooltip\"),\n    ) as HTMLCalciteTooltipElement[];\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      messages,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseLabel={messages.collapseLabel}\n        collapseText={messages.collapse}\n        el={el}\n        expandLabel={messages.expandLabel}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        ref={this.setExpandToggleRef}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n      />\n    ) : null;\n\n    return (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        hidden={this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions)}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        <slot name={SLOTS.bottomActions} onSlotchange={this.handleBottomActionsSlotChange} />\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <slot onSlotchange={this.handleDefaultSlotChange} />\n        {this.renderBottomActionGroup()}\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-bar-expanded-max-width: Specifies the maximum width of the component when it's `layout` is `\"vertical\"`.\n * @prop --calcite-action-bar-items-space: Specifies the space between slotted components in the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply pointer-events-auto\n    inline-flex\n    self-stretch;\n\n  gap: var(--calcite-action-bar-items-space, 0);\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-y: auto;\n  }\n\n  &:host([expanded]) {\n    max-inline-size: var(--calcite-action-bar-expanded-max-width, auto);\n  }\n\n  .action-group--end {\n    margin-block-start: auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-block-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n:host([layout=\"horizontal\"]) {\n  @apply flex-row;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-x: auto;\n  }\n\n  .action-group--end {\n    @apply ms-auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-inline-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n.action-group--end {\n  @apply justify-end;\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n"],"names":["getAverage","arr","reduce","p","c","length","geActionDimensions","actions","actionsNotSlotted","filter","action","slot","ACTION_GROUP_SLOTS","actionLen","actionWidth","map","clientWidth","actionHeight","clientHeight","getOverflowCount","layout","actionCount","width","height","groupCount","Math","max","getMaxActionCount","maxContainerPx","avgItemPx","floor","queryActions","el","Array","from","querySelectorAll","closest","ACTION_MENU_SLOTS","overflowActions","actionGroups","expanded","needToSlotCount","overflowCount","reverse","forEach","group","slottedWithinGroupCount","groupActions","groupAction","removeAttribute","textEnabled","some","setAttribute","forceUpdate","ICONS","toggleChildActionText","ExpandToggle","expandText","collapseText","expandLabel","collapseLabel","toggle","position","tooltip","ref","scale","rtl","getElementDir","text","label","icons","end","_el$closest","getCalcitePosition","expandIcon","collapseIcon","actionNode","h","icon","id","onClick","referenceElement","setTooltipReference","title","SLOTS","menuActions","menuTooltip","CSS","ActionGroup","_inherits","_this","event","menuOpen","target","open","hasMenuActions","slotChangeHasAssignedElement","this","key","value","updateMessages","effectiveLocale","_context","componentFocusable","focus","connectLocalized","connectMessages","connectConditionalSlotComponent","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","setUpLoadableComponent","_context2","setUpMessages","setComponentLoaded","messages","overlayPositioning","flipPlacements","hidden","more","onCalciteActionMenuOpen","setMenuOpen","placement","name","onSlotchange","handleMenuActionsSlotChange","class","role","renderMenu","get","HTMLElement","ActionBar","createObserver","entries","resizeHandlerEntries","composedPath","includes","resizeHandler","entry","contentRect","resize","debounce","expandDisabled","overflowActionsDisabled","setGroupLayout","hasActionsEnd","hasBottomActions","DEBOUNCE","calciteActionBarToggle","emit","expandToggleEl","groups","slotChangeGetAssignedElements","matches","tooltips","expandTooltip","updateGroups","resizeObserver","_this$resizeObserver","disconnect","_this$resizeObserver2","observe","mutationObserver","_this$mutationObserve","childList","subtree","_this$resizeObserver3","_this$mutationObserve2","_this$resizeObserver4","_context3","focusFirstTabbable","_this2","toggleExpand","actionsEndGroupLabel","expandToggleNode","collapse","expand","setExpandToggleRef","handleActionsEndSlotChange","handleBottomActionsSlotChange","handleTooltipSlotChange","Host","actionMenuOpenHandler","handleDefaultSlotChange","renderBottomActionGroup","observerOptions","component","processMutations","unobserve","mutations"],"sourceRoot":""}