{"version":3,"file":"static/js/11216.4dda4f53.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/date.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.scss?tag=calcite-date-picker-day&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.scss?tag=calcite-date-picker-month&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.scss?tag=calcite-date-picker-month-header&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.scss?tag=calcite-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.scss?tag=calcite-input-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends JSXBase.HTMLAttributes {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return <HeadingTag {...props}>{children}</HeadingTag>;\n};\n","import { DateLocaleData } from \"../components/date-picker/utils\";\nimport { numberStringFormatter } from \"./locale\";\n\nexport interface HoverRange {\n  focused: \"end\" | \"start\";\n  start: Date;\n  end: Date;\n}\n\n/**\n * Check if date is within a min and max\n *\n * @param date\n * @param min\n * @param max\n */\nexport function inRange(date: Date, min?: Date | string, max?: Date | string): boolean {\n  if (!date) {\n    return;\n  }\n  const time = date.getTime();\n  const afterMin = !(min instanceof Date) || time >= min.getTime();\n  const beforeMax = !(max instanceof Date) || time <= max.getTime();\n  return afterMin && beforeMax;\n}\n\n/**\n * Ensures date is within range,\n * returns min or max if out of bounds\n *\n * @param date\n * @param min\n * @param max\n */\nexport function dateFromRange(date?: any, min?: Date | string, max?: Date | string): Date | null {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  const time = date.getTime();\n  const beforeMin = min instanceof Date && time < min.getTime();\n  const afterMax = max instanceof Date && time > max.getTime();\n  if (beforeMin) {\n    return min as Date;\n  }\n  if (afterMax) {\n    return max as Date;\n  }\n  return date;\n}\n\n/**\n * Parse an iso8601 string (YYYY-mm-dd) into a valid date.\n * TODO: handle time when time of day UI is added\n *\n * @param iso8601\n * @param isEndDate\n */\nexport function dateFromISO(iso8601: string | Date, isEndDate = false): Date | null {\n  if (iso8601 instanceof Date) {\n    return iso8601;\n  }\n  if (!iso8601 || typeof iso8601 !== \"string\") {\n    return null;\n  }\n  const d = iso8601.split(/[: T-]/).map(parseFloat);\n  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);\n  date.setFullYear(d[0]);\n  if (isNaN(date.getTime())) {\n    throw new Error(`Invalid ISO 8601 date: \"${iso8601}\"`);\n  }\n  if (isEndDate) {\n    return setEndOfDay(date);\n  }\n  return date;\n}\n\n/**\n * Parse a localized date string into a valid Date.\n * return false if date is invalid, or out of range\n *\n * @param value\n * @param localeData\n */\nexport function dateFromLocalizedString(value: string, localeData: DateLocaleData): Date {\n  if (!localeData) {\n    return null;\n  }\n  const { separator } = localeData;\n  const parts = parseDateString(value, localeData);\n\n  const { day, month } = parts;\n  const year = parseCalendarYear(parts.year, localeData);\n\n  const date = new Date(year, month, day);\n  date.setFullYear(year);\n\n  const validDay = day > 0;\n  const validMonth = month > -1;\n  const validDate = !isNaN(date.getTime());\n  const validLength = value.split(separator).filter((c) => c).length > 2;\n  const validYear = year.toString().length > 0;\n\n  if (validDay && validMonth && validDate && validLength && validYear) {\n    return date;\n  }\n  return null;\n}\n\nexport function parseCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"read\");\n}\n\nexport function formatCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"write\");\n}\n\nfunction processCalendarYear(year: number, localeData: DateLocaleData, mode: \"read\" | \"write\"): number {\n  if (localeData[\"default-calendar\"] !== \"buddhist\") {\n    return year;\n  }\n\n  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;\n  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === \"read\" ? -1 : 1);\n\n  return year + yearOffset;\n}\n\n/**\n * Retrieve day, month, and year strings from a localized string\n *\n * @param string\n * @param localeData\n */\nexport function datePartsFromLocalizedString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: string; month: string; year: string } {\n  const { separator, unitOrder } = localeData;\n  const order = getOrder(unitOrder);\n  const values = string.split(separator).map((part) => numberStringFormatter.delocalize(part));\n  const day = values[order.indexOf(\"d\")];\n  const month = values[order.indexOf(\"m\")];\n  const year = values[order.indexOf(\"y\")];\n  return { day, month, year };\n}\n\n/**\n * Return the date portion in local time of a Date object in ISO 8601 format (YYYY-MM-DD)\n *\n * @param date\n */\nexport function dateToISO(date?: Date): string {\n  if (date instanceof Date) {\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const year = String(date.getFullYear()).padStart(4, \"0\");\n    return `${year}-${month}-${day}`;\n  }\n  return \"\";\n}\n\n/**\n * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)\n *\n * @param string\n * @param isoDate\n */\nexport function datePartsFromISO(isoDate: string): { day: string; month: string; year: string } {\n  const dateParts = isoDate.split(\"-\");\n  return { day: dateParts[2], month: dateParts[1], year: dateParts[0] };\n}\n\n/**\n * Check if two dates are the same day, month, year\n *\n * @param d1\n * @param d2\n */\nexport function sameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1 instanceof Date &&\n    d2 instanceof Date &&\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Get a date one month in the past\n *\n * @param date\n */\nexport function prevMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month - 1);\n  // date doesn't exist in new month, use last day\n  if (month === nextDate.getMonth()) {\n    return new Date(date.getFullYear(), month, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Get a date one month in the future\n *\n * @param date\n */\nexport function nextMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month + 1);\n  // date doesn't exist in new month, use last day\n  if ((month + 2) % 7 === nextDate.getMonth() % 7) {\n    return new Date(date.getFullYear(), month + 2, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Parse numeric units for day, month, and year from a localized string\n * month starts at 0 (can pass to date constructor)\n * can return values as number or string\n *\n * @param string\n * @param localeData\n */\nexport function parseDateString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: number; month: number; year: number } {\n  const { day, month, year } = datePartsFromLocalizedString(string, localeData);\n  return {\n    day: parseInt(day),\n    month: parseInt(month) - 1, // this subtracts by 1 because the month in the Date constructor is zero-based https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\n    year: parseInt(year),\n  };\n}\n\ntype unitOrderSignifier = \"m\" | \"d\" | \"y\";\n\n/**\n * Based on the unitOrder string, find order of month, day, and year for locale\n *\n * @param unitOrder\n */\nexport function getOrder(unitOrder: string): unitOrderSignifier[] {\n  const signifiers: unitOrderSignifier[] = [\"d\", \"m\", \"y\"];\n  const order = unitOrder.toLowerCase();\n  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n}\n\n/**\n * Get number of days between two dates\n *\n * @param date1\n * @param date2\n */\nexport function getDaysDiff(date1: Date, date2: Date): number {\n  const ts1 = date1.getTime();\n  const ts2 = date2.getTime();\n  return (ts1 - ts2) / (1000 * 3600 * 24);\n}\n\n/**\n * Set time of the day to the end.\n *\n * @param {Date} date Date.\n * @returns {Date} Date with time set to end of day .\n */\nexport function setEndOfDay(date: Date): Date {\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n  Method,\n} from \"@stencil/core\";\nimport { dateToISO } from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-date-picker-day\",\n  styleUrl: \"date-picker-day.scss\",\n  shadow: true,\n})\nexport class DatePickerDay implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Day of the month to be shown. */\n  @Prop() day!: number;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Date is in the current month. */\n  @Prop({ reflect: true }) currentMonth = false;\n\n  /**  When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** Date is currently highlighted as part of the range, */\n  @Prop({ reflect: true }) highlighted = false;\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /**\n   * When `true`, highlight styling for edge dates is applied.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) rangeEdge: \"start\" | \"end\" | undefined;\n\n  /** Date is the start of date range. */\n  @Prop({ reflect: true }) startOfRange = false;\n\n  /** Date is the end of date range. */\n  @Prop({ reflect: true }) endOfRange = false;\n\n  /** Date is being hovered and within the set range. */\n  @Prop({ reflect: true }) rangeHover = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** The component's value. */\n  @Prop() value: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onClick = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteDaySelect.emit();\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      !this.disabled && this.calciteDaySelect.emit();\n      event.preventDefault();\n    }\n  };\n\n  @Listen(\"pointerover\")\n  pointerOverHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteInternalDayHover.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects day.\n   */\n  @Event({ cancelable: false }) calciteDaySelect: EventEmitter<void>;\n\n  /**\n   * Fires when user hovers over a day.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDayHover: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  render(): VNode {\n    const dayId = dateToISO(this.value).replaceAll(\"-\", \"\");\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n    const formattedDay = numberStringFormatter.localize(String(this.day));\n    const dayLabel = this.dateTimeFormat.format(this.value);\n\n    return (\n      <Host\n        aria-disabled={toAriaBoolean(this.disabled)}\n        aria-label={dayLabel}\n        aria-selected={toAriaBoolean(this.active)}\n        id={dayId}\n        onClick={this.onClick}\n        onKeyDown={this.keyDownHandler}\n        role=\"button\"\n        tabIndex={this.active && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-hidden=\"true\" class={{ \"day-v-wrapper\": true }}>\n            <div class=\"day-wrapper\">\n              <span class=\"day\">\n                <span class=\"text\">{formattedDay}</span>\n              </span>\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerDayElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n}\n",":host {\n  @apply cursor-pointer flex relative text-color-3;\n}\n\n@include disabled();\n\n@mixin range-part-base() {\n  &::before,\n  &::after {\n    @apply absolute pointer-events-none;\n    inset-block: 0;\n    content: \"\";\n    block-size: var(--calcite-internal-day-size);\n    inline-size: var(--calcite-internal-day-size);\n  }\n}\n\n@mixin range-part-edge-end() {\n  &::before {\n    inset-inline-end: 50%;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-start-end-radius: var(--calcite-internal-day-size);\n    border-end-end-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n}\n\n@mixin range-part-edge-start() {\n  &::before {\n    inset-inline-end: 50%;\n    border-start-start-radius: var(--calcite-internal-day-size);\n    border-end-start-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n  &::after {\n    inset-inline-start: 50%;\n  }\n}\n\n@mixin range-part-middle() {\n  &::before {\n    inset-inline-end: 50%;\n    border-radius: 0;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-radius: 0;\n  }\n}\n\n.day-v-wrapper {\n  @apply flex-auto;\n}\n\n.day-wrapper {\n  @apply flex\n    flex-col\n    items-center\n    relative;\n}\n\n:host([range]),\n:host([range-hover]) {\n  .day-wrapper {\n    @include range-part-base();\n  }\n}\n\n.day {\n  @apply text-n2h\n    text-color-3\n    flex\n    focus-base\n    items-center\n    justify-center\n    rounded-full\n    leading-none\n    transition-default\n    z-default;\n  background: none;\n  box-shadow: 0 0 0 2px transparent;\n  block-size: var(--calcite-internal-day-size);\n  inline-size: var(--calcite-internal-day-size);\n}\n\n.text {\n  @apply mt-px mb-0;\n  margin-inline-start: theme(\"spacing.0\");\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-day-size: 27px;\n\n  .day-v-wrapper {\n    @apply py-0.5;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-day-size: 33px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n1;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-day-size: 43px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply px-1;\n  }\n  .day {\n    @apply text-0;\n  }\n}\n\n:host(:not([current-month])) .day {\n  @apply opacity-disabled;\n}\n\n:host(:hover:not([disabled]):not([selected])),\n:host([active]:not([range]):not([selected])) {\n  & .day {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n:host(:focus),\n:host([active]) {\n  @apply outline-none;\n}\n\n:host(:focus:not([disabled])) .day {\n  @apply focus-outset;\n}\n\n:host([selected]) .day {\n  @apply font-medium;\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-foreground-1);\n}\n\n:host(:focus:not([disabled])),\n:host([start-of-range]:not(:focus)),\n:host([end-of-range]:not(:focus)) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n:host([range-hover]:not([selected])),\n:host([highlighted]:not([selected])) {\n  .day-wrapper {\n    @include range-part-middle();\n  }\n\n  .day {\n    @apply text-color-1;\n  }\n}\n\n:host([highlighted]),\n:host([selected]:not(.hover--outside-range)) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      background-color: var(--calcite-color-foreground-current);\n    }\n  }\n}\n\n:host([range-hover]:not([selected])) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host([highlighted][end-of-range]),\n:host([highlighted][range-edge=\"end\"]),\n:host([range-hover][range-edge=\"end\"]),\n:host(:hover[range-hover].focused--end.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-end();\n  }\n}\n\n:host([highlighted][start-of-range]),\n:host([highlighted][range-edge=\"start\"]),\n:host([range-hover][range-edge=\"start\"]),\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host([start-of-range].hover--inside-range),\n:host(:hover[range-hover].focused--start.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-start();\n  }\n}\n\n:host([range-hover][start-of-range][range-edge=\"end\"]),\n:host([range-hover][end-of-range][range-edge=\"start\"]),\n:host([start-of-range][range-edge=\"end\"].hover--inside-range),\n:host([end-of-range]) {\n  .day-wrapper {\n    &::after,\n    &::before {\n      content: unset;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range),\n:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n@media (forced-colors: active) {\n  .day {\n    @apply rounded-none;\n  }\n\n  :host([selected]) {\n    outline: 2px solid canvasText;\n  }\n\n  :host(:hover:not([selected])) {\n    .day {\n      border-radius: 50%;\n    }\n  }\n\n  :host([range][selected]),\n  :host([highlighted]),\n  :host([range-hover]:not([selected])) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: highlight;\n      }\n    }\n  }\n\n  :host([range-hover]),\n  :host([range][selected][start-of-range]),\n  :host([range][selected][end-of-range]) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: canvas;\n      }\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateFromRange, HoverRange, inRange, sameDate } from \"../../utils/date\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Scale } from \"../interfaces\";\n\nconst DAYS_PER_WEEK = 7;\nconst DAYS_MAXIMUM_INDEX = 6;\n\ninterface Day {\n  active: boolean;\n  currentMonth?: boolean;\n  date: Date;\n  day: number;\n  dayInWeek?: number;\n  ref?: boolean;\n}\n\n@Component({\n  tag: \"calcite-date-picker-month\",\n  styleUrl: \"date-picker-month.scss\",\n  shadow: true,\n})\nexport class DatePickerMonth {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** Already selected date.*/\n  @Prop() selectedDate: Date;\n\n  /** The currently active Date.*/\n  @Prop() activeDate: Date = new Date();\n\n  /** Start date currently active. */\n  @Prop() startDate?: Date;\n\n  /** End date currently active.  */\n  @Prop() endDate?: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * CLDR locale data for current locale.\n   *\n   * @internal\n   */\n  @Prop() localeData: DateLocaleData;\n\n  /** The range of dates currently being hovered. */\n  @Prop() hoverRange: HoverRange;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  /**\n   * Fires when user hovers the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerHover: EventEmitter<Date>;\n\n  /**\n   * Active date for the user keyboard access.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerActiveDateChange: EventEmitter<Date>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerMouseOut: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const isRTL = this.el.dir === \"rtl\";\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.addDays(-7);\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.addDays(isRTL ? -1 : 1);\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.addDays(7);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.addDays(isRTL ? 1 : -1);\n        break;\n      case \"PageUp\":\n        event.preventDefault();\n        this.addMonths(-1);\n        break;\n      case \"PageDown\":\n        event.preventDefault();\n        this.addMonths(1);\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.activeDate.setDate(1);\n        this.addDays();\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.activeDate.setDate(\n          new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate(),\n        );\n        this.addDays();\n        break;\n      case \"Enter\":\n      case \" \":\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.activeFocus = false;\n    }\n  };\n\n  /**\n   * Once user is not interacting via keyboard,\n   * disable auto focusing of active date\n   */\n  disableActiveFocus = (): void => {\n    this.activeFocus = false;\n  };\n\n  @Listen(\"pointerout\")\n  pointerOutHandler(): void {\n    this.calciteInternalDatePickerMouseOut.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render(): VNode {\n    const month = this.activeDate.getMonth();\n    const year = this.activeDate.getFullYear();\n    const startOfWeek = this.localeData.weekStart % 7;\n    const { abbreviated, short, narrow } = this.localeData.days;\n    const weekDays =\n      this.scale === \"s\" ? narrow || short || abbreviated : short || abbreviated || narrow;\n    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];\n    const curMonDays = this.getCurrentMonthDays(month, year);\n    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);\n    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);\n    let dayInWeek = 0;\n    const getDayInWeek = () => dayInWeek++ % 7;\n\n    const days: Day[] = [\n      ...prevMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month - 1, day),\n        };\n      }),\n      ...curMonDays.map((day) => {\n        const date = new Date(year, month, day);\n        const active = sameDate(date, this.activeDate);\n        return {\n          active,\n          currentMonth: true,\n          day,\n          dayInWeek: getDayInWeek(),\n          date,\n          ref: true,\n        };\n      }),\n      ...nextMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month + 1, day),\n        };\n      }),\n    ];\n\n    return (\n      <Host onFocusout={this.disableActiveFocus} onKeyDown={this.keyDownHandler}>\n        <div class=\"calendar\" role=\"grid\">\n          <div class=\"week-headers\" role=\"row\">\n            {adjustedWeekDays.map((weekday) => (\n              <span class=\"week-header\" role=\"columnheader\">\n                {weekday}\n              </span>\n            ))}\n          </div>\n\n          <div class=\"week-days\" role=\"row\">\n            {days.map((day, index) => this.renderDateDay(day, index))}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthElement;\n\n  private activeFocus: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Add n months to the current month\n   *\n   * @param step\n   */\n  private addMonths(step: number) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setMonth(this.activeDate.getMonth() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Add n days to the current date\n   *\n   * @param step\n   */\n  private addDays(step = 0) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setDate(this.activeDate.getDate() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Get dates for last days of the previous month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getPreviousMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const lastDate = new Date(year, month, 0);\n    const date = lastDate.getDate();\n    const startDay = lastDate.getDay();\n    const days = [];\n\n    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n\n    if (startDay === startOfWeek) {\n      return [date];\n    }\n\n    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {\n      days.push(date - i);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for the current month\n   *\n   * @param month\n   * @param year\n   */\n  private getCurrentMonthDays(month: number, year: number): number[] {\n    const num = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let i = 0; i < num; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for first days of the next month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getNextMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const endDay = new Date(year, month + 1, 0).getDay();\n    const days = [];\n    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Determine if the date is in between the start and end dates\n   *\n   * @param date\n   */\n  private betweenSelectedRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      this.endDate &&\n      date > this.startDate &&\n      date < this.endDate &&\n      !this.isRangeHover(date)\n    );\n  }\n\n  /**\n   * Determine if the date should be in selected state\n   *\n   * @param date\n   */\n  private isSelected(date: Date): boolean {\n    return !!(\n      sameDate(date, this.selectedDate) ||\n      (this.startDate && sameDate(date, this.startDate)) ||\n      (this.endDate && sameDate(date, this.endDate))\n    );\n  }\n\n  /**\n   * Determine if the date is the start of the date range\n   *\n   * @param date\n   */\n  private isStartOfRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      !sameDate(this.startDate, this.endDate) &&\n      sameDate(this.startDate, date) &&\n      !this.isEndOfRange(date)\n    );\n  }\n\n  private isEndOfRange(date: Date): boolean {\n    return !!(\n      (this.endDate && !sameDate(this.startDate, this.endDate) && sameDate(this.endDate, date)) ||\n      (!this.endDate &&\n        this.hoverRange &&\n        sameDate(this.startDate, this.hoverRange.end) &&\n        sameDate(date, this.hoverRange.end))\n    );\n  }\n\n  dayHover = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    if (target.disabled) {\n      this.calciteInternalDatePickerMouseOut.emit();\n    } else {\n      this.calciteInternalDatePickerHover.emit(target.value);\n    }\n    event.stopPropagation();\n  };\n\n  daySelect = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    this.calciteInternalDatePickerSelect.emit(target.value);\n  };\n\n  /**\n   * Render calcite-date-picker-day\n   *\n   * @param active.active\n   * @param active\n   * @param day\n   * @param dayInWeek\n   * @param date\n   * @param currentMonth\n   * @param ref\n   * @param active.currentMonth\n   * @param active.date\n   * @param active.day\n   * @param active.dayInWeek\n   * @param active.ref\n   * @param key\n   */\n  private renderDateDay({ active, currentMonth, date, day, dayInWeek, ref }: Day, key: number) {\n    const isFocusedOnStart = this.isFocusedOnStart();\n    const isHoverInRange =\n      this.isHoverInRange() ||\n      (!this.endDate && this.hoverRange && sameDate(this.hoverRange?.end, this.startDate));\n\n    return (\n      <div class=\"day\" key={key} role=\"gridcell\">\n        <calcite-date-picker-day\n          active={active}\n          class={{\n            \"hover--inside-range\": this.startDate && isHoverInRange,\n            \"hover--outside-range\": this.startDate && !isHoverInRange,\n            \"focused--start\": isFocusedOnStart,\n            \"focused--end\": !isFocusedOnStart,\n          }}\n          currentMonth={currentMonth}\n          dateTimeFormat={this.dateTimeFormat}\n          day={day}\n          disabled={!inRange(date, this.min, this.max)}\n          endOfRange={this.isEndOfRange(date)}\n          highlighted={this.betweenSelectedRange(date)}\n          onCalciteDaySelect={this.daySelect}\n          onCalciteInternalDayHover={this.dayHover}\n          range={!!this.startDate && !!this.endDate && !sameDate(this.startDate, this.endDate)}\n          rangeEdge={dayInWeek === 0 ? \"start\" : dayInWeek === 6 ? \"end\" : undefined}\n          rangeHover={this.isRangeHover(date)}\n          ref={(el: HTMLCalciteDatePickerDayElement) => {\n            // when moving via keyboard, focus must be updated on active date\n            if (ref && active && this.activeFocus) {\n              el?.setFocus();\n            }\n          }}\n          scale={this.scale}\n          selected={this.isSelected(date)}\n          startOfRange={this.isStartOfRange(date)}\n          value={date}\n        />\n      </div>\n    );\n  }\n\n  private isFocusedOnStart(): boolean {\n    return this.hoverRange?.focused === \"start\";\n  }\n\n  private isHoverInRange(): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    return !!(\n      (!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||\n      (this.isFocusedOnStart() && this.startDate && start > this.startDate)\n    );\n  }\n\n  private isRangeHover(date): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    const isStart = this.isFocusedOnStart();\n    const insideRange = this.isHoverInRange();\n    const cond1 =\n      insideRange &&\n      ((!isStart && date > this.startDate && (date < end || sameDate(date, end))) ||\n        (isStart && date < this.endDate && (date > start || sameDate(date, start))));\n    const cond2 =\n      !insideRange &&\n      ((!isStart && date >= this.endDate && (date < end || sameDate(date, end))) ||\n        (isStart &&\n          ((this.startDate && date < this.startDate) ||\n            (this.endDate && sameDate(date, this.startDate))) &&\n          ((start && date > start) || sameDate(date, start))));\n    return cond1 || cond2;\n  }\n}\n","@include base-component();\n\n.calendar {\n  @apply mb-1;\n}\n\n.week-headers {\n  @apply border-color-3\n    flex\n    border-0\n    border-t\n    border-solid\n    py-0\n    px-1;\n}\n\n.week-header {\n  @apply text-color-3\n    text-center\n    font-bold;\n  inline-size: calc(100% / 7);\n}\n\n.day {\n  @apply flex\n  min-w-0\n  justify-center;\n  inline-size: 100%;\n  calcite-date-picker-day {\n    @apply w-full;\n  }\n}\n\n:host([scale=\"s\"]) .week-header {\n  @apply text-n2h px-0 pt-2 pb-3;\n}\n\n:host([scale=\"m\"]) .week-header {\n  @apply text-n2h px-0 pt-3 pb-4;\n}\n\n:host([scale=\"l\"]) .week-header {\n  @apply text-n1h px-0 pt-4 pb-5;\n}\n\n.week-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: 1fr;\n  padding-block: 0;\n  padding-inline: 6px;\n  &:focus {\n    @apply outline-none;\n  }\n}\n","export const CSS = {\n  header: \"header\",\n  month: \"month\",\n  chevron: \"chevron\",\n  suffix: \"suffix\",\n  yearSuffix: \"year--suffix\",\n  yearWrap: \"year-wrap\",\n  textReverse: \"text--reverse\",\n};\n\nexport const ICON = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromRange,\n  parseCalendarYear,\n  getOrder,\n  nextMonth,\n  prevMonth,\n  formatCalendarYear,\n} from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICON } from \"./resources\";\n\n@Component({\n  tag: \"calcite-date-picker-month-header\",\n  styleUrl: \"date-picker-month-header.scss\",\n  shadow: true,\n})\nexport class DatePickerMonthHeader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Already selected date. */\n  @Prop() selectedDate: Date;\n\n  /** The focused date is indicated and will become the selected date if the user proceeds. */\n  @Prop() activeDate: Date;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop() headingLevel: HeadingLevel;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** CLDR locale data for translated calendar info. */\n  @Prop() localeData: DateLocaleData;\n\n  /**\n   * This property specifies accessible strings for the component's previous month button ,next month button & year input elements.\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   *  Fires to active date\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  connectedCallback(): void {\n    this.setNextPrevMonthDates();\n  }\n\n  render(): VNode {\n    return <div class={CSS.header}>{this.renderContent()}</div>;\n  }\n\n  renderContent(): VNode {\n    const { messages, localeData, activeDate } = this;\n    if (!activeDate || !localeData) {\n      return null;\n    }\n\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n\n    const activeMonth = activeDate.getMonth();\n    const { months, unitOrder } = localeData;\n    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];\n    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());\n    const order = getOrder(unitOrder);\n    const reverse = order.indexOf(\"y\") < order.indexOf(\"m\");\n    const suffix = localeData.year?.suffix;\n    return (\n      <Fragment>\n        <a\n          aria-disabled={`${this.prevMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.prevMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.prevMonthClick}\n          onKeyDown={this.prevMonthKeydown}\n          role=\"button\"\n          tabindex={this.prevMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronLeft} scale={getIconScale(this.scale)} />\n        </a>\n        <div class={{ text: true, [CSS.textReverse]: reverse }}>\n          <Heading class={CSS.month} level={this.headingLevel}>\n            {localizedMonth}\n          </Heading>\n          <span class={CSS.yearWrap}>\n            <input\n              aria-label={messages.year}\n              class={{\n                year: true,\n                [CSS.yearSuffix]: !!suffix,\n              }}\n              inputmode=\"numeric\"\n              maxlength=\"4\"\n              minlength=\"1\"\n              onChange={this.onYearChange}\n              onInput={this.onYearInput}\n              onKeyDown={this.onYearKey}\n              pattern=\"\\d*\"\n              ref={(el) => (this.yearInput = el)}\n              type=\"text\"\n              value={localizedYear}\n            />\n            {suffix && <span class={CSS.suffix}>{suffix}</span>}\n          </span>\n        </div>\n        <a\n          aria-disabled={`${this.nextMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.nextMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.nextMonthClick}\n          onKeyDown={this.nextMonthKeydown}\n          role=\"button\"\n          tabindex={this.nextMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronRight} scale={getIconScale(this.scale)} />\n        </a>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthHeaderElement;\n\n  private yearInput: HTMLInputElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n\n  @State() nextMonthDate: Date;\n\n  @State() prevMonthDate: Date;\n\n  @Watch(\"min\")\n  @Watch(\"max\")\n  @Watch(\"activeDate\")\n  setNextPrevMonthDates(): void {\n    if (!this.activeDate) {\n      return;\n    }\n\n    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);\n    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Increment year on UP/DOWN keys\n   *\n   * @param event\n   */\n  private onYearKey = (event: KeyboardEvent): void => {\n    const localizedYear = this.parseCalendarYear((event.target as HTMLInputElement).value);\n    switch (event.key) {\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: -1 });\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: 1 });\n        break;\n    }\n  };\n\n  private formatCalendarYear(year: number): string {\n    return numberStringFormatter.localize(`${formatCalendarYear(year, this.localeData)}`);\n  }\n\n  private parseCalendarYear(year: string): string {\n    return numberStringFormatter.localize(\n      `${parseCalendarYear(Number(numberStringFormatter.delocalize(year)), this.localeData)}`,\n    );\n  }\n\n  private onYearChange = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n    });\n  };\n\n  private onYearInput = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n      commit: false,\n    });\n  };\n\n  private prevMonthClick = (event: KeyboardEvent | MouseEvent): void => {\n    this.handleArrowClick(event, this.prevMonthDate);\n  };\n\n  private prevMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.prevMonthClick(event);\n    }\n  };\n\n  private nextMonthClick = (event: MouseEvent | KeyboardEvent): void => {\n    this.handleArrowClick(event, this.nextMonthDate);\n  };\n\n  private nextMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.nextMonthClick(event);\n    }\n  };\n\n  /*\n   * Update active month on clicks of left/right arrows\n   */\n  private handleArrowClick = (event: MouseEvent | KeyboardEvent, date: Date): void => {\n    event.preventDefault();\n    this.calciteInternalDatePickerSelect.emit(date);\n  };\n\n  private getInRangeDate({\n    localizedYear,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    offset?: number;\n  }): Date {\n    const { min, max, activeDate } = this;\n    const parsedYear = Number(numberStringFormatter.delocalize(localizedYear));\n    const length = parsedYear.toString().length;\n    const year = isNaN(parsedYear) ? false : parsedYear + offset;\n    const inRange =\n      year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);\n    // if you've supplied a year and it's in range\n    if (year && inRange && length === localizedYear.length) {\n      const nextDate = new Date(activeDate);\n      nextDate.setFullYear(year as number);\n      return dateFromRange(nextDate, min, max);\n    }\n  }\n\n  /**\n   * Parse localized year string from input,\n   * set to active if in range\n   *\n   * @param root0\n   * @param root0.localizedYear\n   * @param root0.commit\n   * @param root0.offset\n   */\n  private setYear({\n    localizedYear,\n    commit = true,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    commit?: boolean;\n    offset?: number;\n  }): void {\n    const { yearInput, activeDate } = this;\n    const inRangeDate = this.getInRangeDate({ localizedYear, offset });\n\n    // if you've supplied a year and it's in range, update active date\n    if (inRangeDate) {\n      this.calciteInternalDatePickerSelect.emit(inRangeDate);\n    }\n\n    if (commit) {\n      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());\n    }\n  }\n}\n",":host {\n  @apply block;\n}\n\n.header {\n  @apply flex justify-between;\n  @apply py-0 px-1;\n}\n\n:host([scale=\"s\"]) {\n  .text {\n    @apply text-n1h my-2;\n  }\n  .chevron {\n    @apply h-9;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .text {\n    @apply text-0h my-3;\n  }\n  .chevron {\n    @apply h-12;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .text {\n    @apply text-1h my-4;\n  }\n  .chevron {\n    block-size: 3.5rem;\n  }\n}\n\n.chevron {\n  @apply text-color-3\n    bg-foreground-1\n    focus-base\n    -mx-1\n    box-content\n    flex\n    flex-grow-0\n    cursor-pointer\n    items-center\n    justify-center\n    border-none\n    px-1\n    outline-none\n    transition-default;\n  inline-size: calc(100% / 7);\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply text-color-1 bg-foreground-2 fill-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  &[aria-disabled=\"true\"] {\n    @apply pointer-events-none opacity-0;\n  }\n}\n\n.text {\n  @apply my-auto\n    w-full\n    flex\n    flex-auto\n    items-center\n    justify-center\n    text-center\n    leading-none;\n}\n\n.text--reverse {\n  @apply flex-row-reverse;\n}\n\n.month,\n.year,\n.suffix {\n  @apply text-color-1\n    bg-foreground-1\n    mx-1\n    my-auto\n    inline-block\n    font-medium\n    leading-tight;\n  font-size: inherit;\n}\n\n.year {\n  @apply font-inherit\n    focus-base\n    relative\n    w-10\n    border-none\n    bg-transparent\n    text-center;\n  &:hover {\n    @apply duration-100 ease-in-out;\n    transition-property: outline-color;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.year--suffix {\n  @apply text-left;\n}\n\n.year-wrap {\n  @apply relative;\n}\n\n.suffix {\n  @apply top-0\n    whitespace-nowrap\n    text-start;\n  inset-inline-start: 0;\n}\n\n@include base-component();\n","export const HEADING_LEVEL = 2;\n\nexport const DATE_PICKER_FORMAT_OPTIONS: Intl.DateTimeFormatOptions = { dateStyle: \"full\" };\n","import { getAssetPath } from \"@stencil/core\";\nimport { dateFromISO } from \"../../utils/date\";\nimport { getSupportedLocale } from \"../../utils/locale\";\n\n/**\n * Translation resource data structure\n *\n * @private\n */\nexport interface DateLocaleData {\n  \"default-calendar\": \"gregorian\" | \"buddhist\";\n  separator: string;\n  unitOrder: string;\n  weekStart: number;\n  placeholder: string;\n  days: {\n    abbreviated?: string[];\n    narrow?: string[];\n    short?: string[];\n    wide?: string[];\n  };\n  numerals: string;\n  months: {\n    abbreviated: string[];\n    narrow: string[];\n    wide: string[];\n  };\n  year?: {\n    suffix: string;\n  };\n}\n\n/**\n * CLDR cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const translationCache: Record<string, DateLocaleData> = {};\n\n/**\n * CLDR request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<DateLocaleData>> = {};\n\n/**\n * Fetch calendar data for a given locale from list of supported languages\n *\n * @param lang\n * @public\n */\nexport async function getLocaleData(lang: string): Promise<DateLocaleData> {\n  const locale = getSupportedLocale(lang);\n  if (translationCache[locale]) {\n    return translationCache[locale];\n  }\n  if (!requestCache[locale]) {\n    requestCache[locale] = fetch(getAssetPath(`./assets/date-picker/nls/${locale}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`Translations for \"${locale}\" not found or invalid, falling back to english`);\n        return getLocaleData(\"en\");\n      });\n  }\n\n  const data = await requestCache[locale];\n  translationCache[locale] = data;\n\n  return data;\n}\n\n/**\n *  Maps value to valueAsDate\n *\n * @param value\n */\n\nexport function getValueAsDateRange(value: string[]): Date[] {\n  return value.map((v, index) => dateFromISO(v, index === 1));\n}\n",":host {\n  @extend %component-host;\n  @apply align-top\n    border\n    border-color-1\n    border-solid\n    inline-block\n    overflow-visible\n    rounded-none\n    w-auto;\n}\n\n:host([scale=\"s\"]) {\n  inline-size: 234px;\n  min-inline-size: 216px;\n  max-inline-size: 380px;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: 304px;\n  min-inline-size: 272px;\n  max-inline-size: 480px;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: 370px;\n  min-inline-size: 320px;\n  max-inline-size: 600px;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromISO,\n  dateFromRange,\n  dateToISO,\n  getDaysDiff,\n  HoverRange,\n  setEndOfDay,\n} from \"../../utils/date\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  getDateTimeFormat,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { DatePickerMessages } from \"./assets/date-picker/t9n\";\nimport { DATE_PICKER_FORMAT_OPTIONS, HEADING_LEVEL } from \"./resources\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"./utils\";\n\n@Component({\n  assetsDirs: [\"assets\"],\n  tag: \"calcite-date-picker\",\n  styleUrl: \"date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DatePicker implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the component's active date. */\n  @Prop({ mutable: true }) activeDate: Date;\n\n  @Watch(\"activeDate\")\n  activeDateWatcher(newActiveDate: Date): void {\n    if (this.activeRange === \"end\") {\n      this.activeEndDate = newActiveDate;\n    }\n  }\n\n  /**\n   * When `range` is true, specifies the active `range`. Where `\"start\"` specifies the starting range date and `\"end\"` the ending range date.\n   */\n  @Prop({ reflect: true }) activeRange: \"start\" | \"end\";\n\n  /**\n   * Specifies the selected date as a string (`\"yyyy-mm-dd\"`), or an array of strings for `range` values (`[\"yyyy-mm-dd\", \"yyyy-mm-dd\"]`).\n   */\n  @Prop({ mutable: true }) value: string | string[];\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies the selected date as a full date object (`new Date(\"yyyy-mm-dd\")`), or an array containing full date objects (`[new Date(\"yyyy-mm-dd\"), new Date(\"yyyy-mm-dd\")]`). */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(newValueAsDate: Date | Date[]): void {\n    if (this.range && Array.isArray(newValueAsDate)) {\n      const { activeStartDate, activeEndDate } = this;\n      const newActiveStartDate = newValueAsDate[0];\n      const newActiveEndDate = newValueAsDate[1];\n      this.activeStartDate = activeStartDate !== newActiveStartDate && newActiveStartDate;\n      this.activeEndDate = activeEndDate !== newActiveEndDate && newActiveEndDate;\n    } else if (newValueAsDate && newValueAsDate !== this.activeDate) {\n      this.activeDate = newValueAsDate as Date;\n    }\n  }\n\n  /** Specifies the earliest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, disables the default behavior on the third click of narrowing or extending the range and instead starts a new range. */\n  @Prop({ reflect: true }) proximitySelectionDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires when a user changes the component's date. For `range` events, use `calciteDatePickerRangeChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerChange: EventEmitter<void>;\n\n  /**\n   * Fires when a user changes the component's date `range`. For components without `range` use `calciteDatePickerChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerRangeChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /**\n   * Resets active date state.\n   * @internal\n   */\n  @Method()\n  async reset(): Promise<void> {\n    this.resetActiveDates();\n    this.mostRecentRangeValue = undefined;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      this.valueAsDate = dateFromISO(this.value);\n    }\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await this.loadLocaleData();\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  render(): VNode {\n    const date = dateFromRange(\n      this.range && Array.isArray(this.valueAsDate) ? this.valueAsDate[0] : this.valueAsDate,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    let activeDate = this.getActiveDate(date, this.minAsDate, this.maxAsDate);\n    const endDate =\n      this.range && Array.isArray(this.valueAsDate)\n        ? dateFromRange(this.valueAsDate[1], this.minAsDate, this.maxAsDate)\n        : null;\n    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);\n    if (\n      (this.activeRange === \"end\" ||\n        (this.hoverRange?.focused === \"end\" && (!this.proximitySelectionDisabled || endDate))) &&\n      activeEndDate\n    ) {\n      activeDate = activeEndDate;\n    }\n    if (this.range && this.mostRecentRangeValue) {\n      activeDate = this.mostRecentRangeValue;\n    }\n\n    const minDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? this.minAsDate\n          : date || this.minAsDate\n        : this.minAsDate;\n\n    const maxDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? endDate || this.maxAsDate\n          : this.maxAsDate\n        : this.maxAsDate;\n    return (\n      <Host onBlur={this.resetActiveDates} onKeyDown={this.keyDownHandler}>\n        {this.renderCalendar(activeDate, maxDate, minDate, date, endDate)}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerElement;\n\n  /**\n   * Active end date.\n   */\n  @State() activeEndDate: Date;\n\n  /**\n   * Active start date.\n   */\n  @State() activeStartDate: Date;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @State() dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() defaultMessages: DatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() endAsDate: Date;\n\n  @State() private hoverRange: HoverRange;\n\n  @State() private localeData: DateLocaleData;\n\n  @State() private mostRecentRangeValue?: Date;\n\n  @State() startAsDate: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\") {\n      this.resetActiveDates();\n    }\n  };\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (Array.isArray(value)) {\n      this.valueAsDate = getValueAsDateRange(value);\n    } else if (value) {\n      this.valueAsDate = dateFromISO(value);\n    }\n  }\n\n  @Watch(\"effectiveLocale\")\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.dateTimeFormat = getDateTimeFormat(this.effectiveLocale, DATE_PICKER_FORMAT_OPTIONS);\n  }\n\n  monthHeaderSelectChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthActiveDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthHoverChange = (event: CustomEvent<Date>): void => {\n    if (!this.range) {\n      this.hoverRange = undefined;\n      return;\n    }\n\n    const { valueAsDate } = this;\n    const start = Array.isArray(valueAsDate) && valueAsDate[0];\n    const end = Array.isArray(valueAsDate) && valueAsDate[1];\n\n    const date = new Date(event.detail);\n    this.hoverRange = {\n      focused: this.activeRange || \"start\",\n      start,\n      end,\n    };\n\n    if (this.proximitySelectionDisabled) {\n      if ((end && start) || (!end && date >= start)) {\n        this.hoverRange.focused = \"end\";\n        this.hoverRange.end = date;\n      } else if (!end && date < start) {\n        this.hoverRange = {\n          focused: \"start\",\n          start: date,\n          end: start,\n        };\n      } else {\n        this.hoverRange = undefined;\n      }\n    } else {\n      if (start && end) {\n        const startDiff = getDaysDiff(date, start);\n        const endDiff = getDaysDiff(date, end);\n        if (endDiff > 0) {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        } else if (startDiff < 0) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else if (startDiff > endDiff) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        }\n      } else {\n        if (start) {\n          if (date < start) {\n            this.hoverRange = {\n              focused: \"start\",\n              start: date,\n              end: start,\n            };\n          } else {\n            this.hoverRange.end = date;\n            this.hoverRange.focused = \"end\";\n          }\n        }\n      }\n    }\n    event.stopPropagation();\n  };\n\n  monthMouseOutChange = (): void => {\n    if (this.hoverRange) {\n      this.hoverRange = undefined;\n    }\n  };\n\n  /**\n   * Render calcite-date-picker-month-header and calcite-date-picker-month\n   *\n   * @param activeDate\n   * @param maxDate\n   * @param minDate\n   * @param date\n   * @param endDate\n   */\n  private renderCalendar(\n    activeDate: Date,\n    maxDate: Date,\n    minDate: Date,\n    date: Date,\n    endDate: Date,\n  ) {\n    return (\n      this.localeData && [\n        <calcite-date-picker-month-header\n          activeDate={activeDate}\n          headingLevel={this.headingLevel || HEADING_LEVEL}\n          localeData={this.localeData}\n          max={maxDate}\n          messages={this.messages}\n          min={minDate}\n          onCalciteInternalDatePickerSelect={this.monthHeaderSelectChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date || new Date()}\n        />,\n        <calcite-date-picker-month\n          activeDate={activeDate}\n          dateTimeFormat={this.dateTimeFormat}\n          endDate={this.range ? endDate : undefined}\n          hoverRange={this.hoverRange}\n          localeData={this.localeData}\n          max={maxDate}\n          min={minDate}\n          onCalciteInternalDatePickerActiveDateChange={this.monthActiveDateChange}\n          onCalciteInternalDatePickerHover={this.monthHoverChange}\n          onCalciteInternalDatePickerMouseOut={this.monthMouseOutChange}\n          onCalciteInternalDatePickerSelect={this.monthDateChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date}\n          startDate={this.range ? date : undefined}\n        />,\n      ]\n    );\n  }\n\n  private resetActiveDates = (): void => {\n    const { valueAsDate } = this;\n\n    if (!Array.isArray(valueAsDate) && valueAsDate && valueAsDate !== this.activeDate) {\n      this.activeDate = new Date(valueAsDate);\n    }\n\n    if (Array.isArray(valueAsDate)) {\n      if (valueAsDate[0] && valueAsDate[0] !== this.activeStartDate) {\n        this.activeStartDate = new Date(valueAsDate[0]);\n      }\n      if (valueAsDate[1] && valueAsDate[1] !== this.activeEndDate) {\n        this.activeEndDate = new Date(valueAsDate[1]);\n      }\n    }\n  };\n\n  private getEndDate(): Date {\n    return (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined;\n  }\n\n  private setEndDate(date: Date): void {\n    const startDate = this.getStartDate();\n    const newEndDate = date ? setEndOfDay(date) : date;\n    this.value = [dateToISO(startDate), dateToISO(date)];\n    this.valueAsDate = [startDate, date];\n    this.mostRecentRangeValue = newEndDate;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeEndDate = date || null;\n  }\n\n  private getStartDate(): Date {\n    return Array.isArray(this.valueAsDate) && this.valueAsDate[0];\n  }\n\n  private setStartDate(date: Date): void {\n    const endDate = this.getEndDate();\n    this.value = [dateToISO(date), dateToISO(endDate)];\n    this.valueAsDate = [date, endDate];\n    this.mostRecentRangeValue = date;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeStartDate = date || null;\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event\n   */\n  private monthDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    const isoDate = dateToISO(date);\n\n    if (!this.range && isoDate === dateToISO(this.valueAsDate as Date)) {\n      return;\n    }\n\n    if (!this.range) {\n      this.value = isoDate || \"\";\n      this.valueAsDate = date || null;\n      this.activeDate = date || null;\n      this.calciteDatePickerChange.emit();\n      return;\n    }\n\n    const start = this.getStartDate();\n    const end = this.getEndDate();\n\n    if (!start || (!end && date < start)) {\n      if (start) {\n        this.setEndDate(new Date(start));\n      }\n      if (this.activeRange == \"end\") {\n        this.setEndDate(date);\n      } else {\n        this.setStartDate(date);\n      }\n    } else if (!end) {\n      this.setEndDate(date);\n    } else {\n      if (this.proximitySelectionDisabled) {\n        this.setStartDate(date);\n        this.setEndDate(null);\n      } else {\n        if (this.activeRange) {\n          if (this.activeRange == \"end\") {\n            this.setEndDate(date);\n          } else {\n            this.setStartDate(date);\n          }\n        } else {\n          const startDiff = getDaysDiff(date, start);\n          const endDiff = getDaysDiff(date, end);\n          if (endDiff === 0 || startDiff < 0) {\n            this.setStartDate(date);\n          } else if (startDiff === 0 || endDiff < 0) {\n            this.setEndDate(date);\n          } else if (startDiff < endDiff) {\n            this.setStartDate(date);\n          } else {\n            this.setEndDate(date);\n          }\n        }\n      }\n    }\n    this.calciteDatePickerChange.emit();\n  };\n\n  /**\n   * Get an active date using the value, or current date as default\n   *\n   * @param value\n   * @param min\n   * @param max\n   */\n  private getActiveDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return dateFromRange(this.activeDate, min, max) || value || dateFromRange(new Date(), min, max);\n  }\n\n  private getActiveEndDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return (\n      dateFromRange(this.activeEndDate, min, max) || value || dateFromRange(new Date(), min, max)\n    );\n  }\n}\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  calendarWrapper: \"calendar-wrapper\",\n  calendarWrapperEnd: \"calendar-wrapper--end\",\n  horizontalArrowContainer: \"horizontal-arrow-container\",\n  inputBorderTopColorOne: \"border-top-color-one\",\n  inputContainer: \"input-container\",\n  inputNoBottomBorder: \"no-bottom-border\",\n  inputWrapper: \"input-wrapper\",\n  input: \"input\",\n  menu: \"menu-container\",\n  menuActive: \"menu-container--active\",\n  toggleIcon: \"toggle-icon\",\n  verticalArrowContainer: \"vertical-arrow-container\",\n  chevronIcon: \"chevron-icon\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputDatePickerValidationMessage\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { FocusTrap } from \"focus-trap\";\nimport {\n  dateFromISO,\n  dateFromLocalizedString,\n  dateFromRange,\n  datePartsFromISO,\n  datePartsFromLocalizedString,\n  dateToISO,\n  inRange,\n} from \"../../utils/date\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  FlipPlacement,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  getSupportedNumberingSystem,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n  getDateFormatSupportedLocale,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"../date-picker/utils\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrapComponent,\n} from \"../../utils/focusTrapComponent\";\nimport { guid } from \"../../utils/guid\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { normalizeToCurrentCentury, isTwoDigitYear } from \"./utils\";\nimport { InputDatePickerMessages } from \"./assets/input-date-picker/t9n\";\nimport { CSS, IDS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-input-date-picker\",\n  styleUrl: \"input-date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class InputDatePicker\n  implements\n    FloatingUIComponent,\n    FocusTrapComponent,\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    OpenCloseComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"readOnly\")\n  handleDisabledAndReadOnlyChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /** Selected date as a string in ISO format (`\"yyyy-mm-dd\"`). */\n  @Prop({ mutable: true }) value: string | string[] = \"\";\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string | string[]): void {\n    if (!this.userChangedValue) {\n      let newValueAsDate: Date | Date[];\n\n      if (Array.isArray(newValue)) {\n        newValueAsDate = getValueAsDateRange(newValue);\n      } else if (newValue) {\n        newValueAsDate = dateFromISO(newValue);\n      } else {\n        newValueAsDate = undefined;\n      }\n\n      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {\n        this.valueAsDate = newValueAsDate;\n      }\n\n      this.localizeInputValues();\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(valueAsDate: Date): void {\n    this.datePickerActiveDate = valueAsDate;\n    const newValue =\n      this.range && Array.isArray(valueAsDate)\n        ? [dateToISO(valueAsDate[0]), dateToISO(valueAsDate[1])]\n        : dateToISO(valueAsDate);\n    if (this.value !== newValue) {\n      this.valueAsDateChangedExternally = true;\n      this.value = newValue;\n      this.valueAsDateChangedExternally = false;\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** The component's value as a full date object. */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputDatePickerMessages & DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputDatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the earliest allowed date as a full date object. */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object. */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /** When `true`, displays the `calcite-date-picker` component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled || this.readOnly) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the placement of the `calcite-date-picker` relative to the component.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  /** When `true`, activates a range for the component. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, disables the default behavior on the third click of narrowing or extending the range.\n   * Instead starts a new range.\n   */\n  @Prop() proximitySelectionDisabled = false;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: \"horizontal\" | \"vertical\" = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteDaySelect\")\n  calciteDaySelectHandler(): void {\n    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  private calciteInternalInputInputHandler = (event: CustomEvent<any>): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    const value = target.value;\n    const parsedValue = this.parseNumerals(value);\n    const formattedValue = this.formatNumerals(parsedValue);\n\n    target.value = formattedValue;\n\n    const { year } = datePartsFromLocalizedString(value, this.localeData);\n\n    if (year && year.length < 4) {\n      return;\n    }\n\n    const date = dateFromLocalizedString(value, this.localeData) as Date;\n\n    if (inRange(date, this.min, this.max)) {\n      this.datePickerActiveDate = date;\n    }\n  };\n\n  private calciteInternalInputBlurHandler = (): void => {\n    this.commitValue();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputDatePickerChange: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed If true, the repositioning is delayed.\n   * @returns void\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    this.handleDateTimeFormatChange();\n\n    const { open } = this;\n    open && this.openHandler();\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      try {\n        const date = dateFromISO(this.value);\n        const dateInRange = dateFromRange(date, this.minAsDate, this.maxAsDate);\n        this.valueAsDate = dateInRange;\n      } catch (error) {\n        this.warnAboutInvalidValue(this.value);\n        this.value = \"\";\n      }\n    } else if (this.valueAsDate) {\n      if (this.range) {\n        this.setRangeValue(this.valueAsDate as Date[]);\n      } else if (!Array.isArray(this.valueAsDate)) {\n        this.value = dateToISO(this.valueAsDate);\n      }\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    connectMessages(this);\n\n    this.setFilteredPlacements();\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await Promise.all([this.loadLocaleData(), setUpMessages(this)]);\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.localizeInputValues();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  disconnectedCallback(): void {\n    deactivateFocusTrap(this);\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { disabled, effectiveLocale, messages, numberingSystem, readOnly } = this;\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem,\n      locale: effectiveLocale,\n      useGrouping: false,\n    };\n\n    return (\n      <Host onBlur={this.blurHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.localeData && (\n            <div class={CSS.inputContainer}>\n              <div\n                class={CSS.inputWrapper}\n                data-position=\"start\"\n                onClick={this.onInputWrapperClick}\n                onPointerDown={this.onInputWrapperPointerDown}\n                ref={this.setStartWrapper}\n              >\n                <calcite-input-text\n                  aria-autocomplete=\"none\"\n                  aria-controls={this.dialogId}\n                  aria-describedby={this.placeholderTextId}\n                  aria-errormessage={IDS.validationMessage}\n                  aria-expanded={toAriaBoolean(this.open)}\n                  aria-haspopup=\"dialog\"\n                  aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                  class={{\n                    [CSS.input]: true,\n                    [CSS.inputNoBottomBorder]: this.layout === \"vertical\" && this.range,\n                  }}\n                  disabled={disabled}\n                  icon=\"calendar\"\n                  onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                  onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                  onCalciteInternalInputTextFocus={this.startInputFocus}\n                  placeholder={this.localeData?.placeholder}\n                  readOnly={readOnly}\n                  ref={this.setStartInput}\n                  role=\"combobox\"\n                  scale={this.scale}\n                  status={this.status}\n                />\n                {!this.readOnly &&\n                  this.renderToggleIcon(this.open && this.focusedInput === \"start\")}\n                <span aria-hidden=\"true\" class={CSS.assistiveText} id={this.placeholderTextId}>\n                  Date Format: {this.localeData?.placeholder}\n                </span>\n              </div>\n              <div\n                aria-hidden={toAriaBoolean(!this.open)}\n                aria-label={messages.chooseDate}\n                aria-live=\"polite\"\n                aria-modal=\"true\"\n                class={{\n                  [CSS.menu]: true,\n                  [CSS.menuActive]: this.open,\n                }}\n                id={this.dialogId}\n                ref={this.setFloatingEl}\n                role=\"dialog\"\n              >\n                <div\n                  class={{\n                    [CSS.calendarWrapper]: true,\n                    [CSS.calendarWrapperEnd]: this.focusedInput === \"end\",\n                    [FloatingCSS.animation]: true,\n                    [FloatingCSS.animationActive]: this.open,\n                  }}\n                  ref={this.setTransitionEl}\n                >\n                  <calcite-date-picker\n                    activeDate={this.datePickerActiveDate}\n                    activeRange={this.focusedInput}\n                    headingLevel={this.headingLevel}\n                    max={this.max}\n                    maxAsDate={this.maxAsDate}\n                    messageOverrides={this.messageOverrides}\n                    min={this.min}\n                    minAsDate={this.minAsDate}\n                    numberingSystem={numberingSystem}\n                    onCalciteDatePickerChange={this.handleDateChange}\n                    onCalciteDatePickerRangeChange={this.handleDateRangeChange}\n                    proximitySelectionDisabled={this.proximitySelectionDisabled}\n                    range={this.range}\n                    ref={this.setDatePickerRef}\n                    scale={this.scale}\n                    tabIndex={this.open ? undefined : -1}\n                    valueAsDate={this.valueAsDate}\n                  />\n                </div>\n              </div>\n\n              {this.range && this.layout === \"horizontal\" && (\n                <div class={CSS.horizontalArrowContainer}>\n                  <calcite-icon\n                    flipRtl={true}\n                    icon=\"arrow-right\"\n                    scale={getIconScale(this.scale)}\n                  />\n                </div>\n              )}\n              {this.range && this.layout === \"vertical\" && this.scale !== \"s\" && (\n                <div class={CSS.verticalArrowContainer}>\n                  <calcite-icon icon=\"arrow-down\" scale={getIconScale(this.scale)} />\n                </div>\n              )}\n              {this.range && (\n                <div\n                  class={CSS.inputWrapper}\n                  data-position=\"end\"\n                  onClick={this.onInputWrapperClick}\n                  onPointerDown={this.onInputWrapperPointerDown}\n                  ref={this.setEndWrapper}\n                >\n                  <calcite-input-text\n                    aria-autocomplete=\"none\"\n                    aria-controls={this.dialogId}\n                    aria-errormessage={IDS.validationMessage}\n                    aria-expanded={toAriaBoolean(this.open)}\n                    aria-haspopup=\"dialog\"\n                    aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                    class={{\n                      [CSS.input]: true,\n                      [CSS.inputBorderTopColorOne]: this.layout === \"vertical\" && this.range,\n                    }}\n                    disabled={disabled}\n                    icon=\"calendar\"\n                    onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                    onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                    onCalciteInternalInputTextFocus={this.endInputFocus}\n                    placeholder={this.localeData?.placeholder}\n                    readOnly={readOnly}\n                    ref={this.setEndInput}\n                    role=\"combobox\"\n                    scale={this.scale}\n                    status={this.status}\n                  />\n                  {!this.readOnly &&\n                    this.renderToggleIcon(this.open && this.focusedInput === \"end\")}\n                </div>\n              )}\n            </div>\n          )}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderToggleIcon(open: boolean): VNode {\n    return (\n      // we set tab index to -1 to prevent delegatesFocus from stealing focus before we can set it\n      <span class={CSS.toggleIcon} tabIndex={-1}>\n        <calcite-icon\n          class={CSS.chevronIcon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputDatePickerElement;\n\n  private currentOpenInput: \"start\" | \"end\";\n\n  private datePickerEl: HTMLCalciteDatePickerElement;\n\n  private dialogId = `date-picker-dialog--${guid()}`;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  private focusOnOpen = false;\n\n  focusTrap: FocusTrap;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputDatePicker[\"value\"];\n\n  private dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() datePickerActiveDate: Date;\n\n  @State() defaultMessages: InputDatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    this.loadLocaleData();\n  }\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"numberingSystem\")\n  handleDateTimeFormatChange(): void {\n    const formattingOptions: Intl.DateTimeFormatOptions = {\n      // we explicitly set numberingSystem to prevent the browser-inferred value\n      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info\n      numberingSystem: getSupportedNumberingSystem(this.numberingSystem),\n    };\n\n    this.dateTimeFormat = new Intl.DateTimeFormat(\n      getDateFormatSupportedLocale(this.effectiveLocale),\n      formattingOptions,\n    );\n  }\n\n  @State() focusedInput: \"start\" | \"end\" = \"start\";\n\n  @State() private localeData: DateLocaleData;\n\n  private startInput: HTMLCalciteInputElement;\n\n  private endInput: HTMLCalciteInputElement;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private startWrapper: HTMLDivElement;\n\n  private endWrapper: HTMLDivElement;\n\n  private userChangedValue = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  @Watch(\"layout\")\n  @Watch(\"focusedInput\")\n  setReferenceEl(): void {\n    const { focusedInput, layout, endWrapper, startWrapper } = this;\n\n    this.referenceEl =\n      focusedInput === \"end\" || layout === \"vertical\"\n        ? endWrapper || startWrapper\n        : startWrapper || endWrapper;\n\n    requestAnimationFrame(() => connectFloatingUI(this, this.referenceEl, this.floatingEl));\n  }\n\n  private valueAsDateChangedExternally = false;\n\n  private placeholderTextId = `calcite-input-date-picker-placeholder-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private onInputWrapperPointerDown = (): void => {\n    this.currentOpenInput = this.focusedInput;\n  };\n\n  private onInputWrapperClick = (event: MouseEvent) => {\n    const { range, endInput, startInput, currentOpenInput } = this;\n    const currentTarget = event.currentTarget as HTMLDivElement;\n    const position = currentTarget.getAttribute(\"data-position\") as \"start\" | \"end\";\n    const path = event.composedPath();\n    const wasToggleClicked = path.find((el: HTMLElement) => el.classList?.contains(CSS.toggleIcon));\n\n    if (wasToggleClicked) {\n      const targetInput = position === \"start\" ? startInput : endInput;\n      targetInput.setFocus();\n    }\n\n    if (!range || !this.open || currentOpenInput === position) {\n      this.open = !this.open;\n    }\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  onBeforeOpen(): void {\n    this.calciteInputDatePickerBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    activateFocusTrap(this, {\n      onActivate: () => {\n        if (this.focusOnOpen) {\n          this.datePickerEl.setFocus();\n          this.focusOnOpen = false;\n        }\n      },\n    });\n    this.calciteInputDatePickerOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteInputDatePickerBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteInputDatePickerClose.emit();\n    deactivateFocusTrap(this);\n    this.restoreInputFocus();\n    this.focusOnOpen = false;\n    this.datePickerEl.reset();\n  }\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"date\", this, input);\n  }\n\n  setStartInput = (el: HTMLCalciteInputElement): void => {\n    this.startInput = el;\n  };\n\n  setEndInput = (el: HTMLCalciteInputElement): void => {\n    this.endInput = el;\n  };\n\n  private blurHandler = (): void => {\n    this.open = false;\n  };\n\n  private commitValue(): void {\n    const { focusedInput, value } = this;\n    const focusedInputName = `${focusedInput}Input`;\n    const focusedInputValue = this[focusedInputName].value;\n    const date = dateFromLocalizedString(focusedInputValue, this.localeData) as Date;\n    const dateAsISO = dateToISO(date);\n    const valueIsArray = Array.isArray(value);\n    if (this.range) {\n      const focusedInputValueIndex = focusedInput === \"start\" ? 0 : 1;\n      if (valueIsArray) {\n        if (dateAsISO === value[focusedInputValueIndex]) {\n          return;\n        }\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        } else {\n          this.setRangeValue([\n            focusedInput === \"end\" && dateFromISO(value[0]),\n            focusedInput === \"start\" && dateFromISO(value[1]),\n          ]);\n        }\n      } else {\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        }\n      }\n    } else {\n      if (dateAsISO === value) {\n        return;\n      }\n      this.setValue(date);\n      this.localizeInputValues();\n    }\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      event.preventDefault();\n      this.commitValue();\n\n      if (this.shouldFocusRangeEnd()) {\n        this.endInput?.setFocus();\n      } else if (this.shouldFocusRangeStart()) {\n        this.startInput?.setFocus();\n      }\n\n      if (submitForm(this)) {\n        this.restoreInputFocus();\n      }\n    } else if (key === \"ArrowDown\") {\n      this.open = true;\n      this.focusOnOpen = true;\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.open = false;\n      event.preventDefault();\n      this.restoreInputFocus();\n    }\n  };\n\n  startInputFocus = (): void => {\n    this.focusedInput = \"start\";\n  };\n\n  endInputFocus = (): void => {\n    this.focusedInput = \"end\";\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setStartWrapper = (el: HTMLDivElement): void => {\n    this.startWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setEndWrapper = (el: HTMLDivElement): void => {\n    this.endWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setDatePickerRef = (el: HTMLCalciteDatePickerElement): void => {\n    this.datePickerEl = el;\n    connectFocusTrap(this, {\n      focusTrapEl: el,\n      focusTrapOptions: {\n        initialFocus: false,\n        setReturnFocus: false,\n      },\n    });\n  };\n\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.localizeInputValues();\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event CalciteDatePicker custom change event\n   */\n  handleDateChange = (event: CustomEvent<void>): void => {\n    if (this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    this.setValue((event.target as HTMLCalciteDatePickerElement).valueAsDate as Date);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private shouldFocusRangeStart(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(endValue && !startValue && this.focusedInput === \"end\" && this.startInput);\n  }\n\n  private shouldFocusRangeEnd(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(startValue && !endValue && this.focusedInput === \"start\" && this.endInput);\n  }\n\n  private handleDateRangeChange = (event: CustomEvent<void>): void => {\n    if (!this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const value = (event.target as HTMLCalciteDatePickerElement).valueAsDate as Date[];\n\n    this.setRangeValue(value);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private restoreInputFocus(): void {\n    if (!this.range) {\n      this.startInput.setFocus();\n      return;\n    }\n\n    const focusedInput = this.focusedInput === \"start\" ? this.startInput : this.endInput;\n    focusedInput.setFocus();\n  }\n\n  private localizeInputValues(): void {\n    const date = dateFromRange(\n      (this.range\n        ? (Array.isArray(this.valueAsDate) && this.valueAsDate[0]) || undefined\n        : this.valueAsDate) as Date,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    const endDate = this.range\n      ? dateFromRange(\n          (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined,\n          this.minAsDate,\n          this.maxAsDate,\n        )\n      : null;\n\n    this.setInputValue((date && this.dateTimeFormat.format(date)) ?? \"\", \"start\");\n    this.setInputValue((this.range && endDate && this.dateTimeFormat.format(endDate)) ?? \"\", \"end\");\n  }\n\n  private setInputValue = (newValue: string, input: \"start\" | \"end\" = \"start\"): void => {\n    const inputEl = this[`${input}Input`];\n    if (!inputEl) {\n      return;\n    }\n    inputEl.value = newValue;\n  };\n\n  private setRangeValue = (valueAsDate: Date[]): void => {\n    if (!this.range) {\n      return;\n    }\n\n    const { value: oldValue } = this;\n    const oldValueIsArray = Array.isArray(oldValue);\n    const valueIsArray = Array.isArray(valueAsDate);\n\n    const newStartDate = valueIsArray ? valueAsDate[0] : null;\n    let newStartDateISO = valueIsArray ? dateToISO(newStartDate) : \"\";\n    if (newStartDateISO) {\n      newStartDateISO = this.getNormalizedDate(newStartDateISO);\n    }\n\n    const newEndDate = valueIsArray ? valueAsDate[1] : null;\n    let newEndDateISO = valueIsArray ? dateToISO(newEndDate) : \"\";\n    if (newEndDateISO) {\n      newEndDateISO = this.getNormalizedDate(newEndDateISO);\n    }\n\n    const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : \"\";\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.value = newValue;\n    this.valueAsDate = newValue ? getValueAsDateRange(newValue) : undefined;\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent && changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      if (oldValueIsArray) {\n        this.setInputValue(oldValue[0], \"start\");\n        this.setInputValue(oldValue[1], \"end\");\n      } else {\n        this.value = oldValue;\n        this.setInputValue(oldValue as string);\n      }\n    }\n  };\n\n  private setValue = (value: Date | string): void => {\n    if (this.range) {\n      return;\n    }\n\n    const oldValue = this.value;\n    let newValue = dateToISO(value as Date);\n    newValue = this.getNormalizedDate(newValue);\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.valueAsDate = newValue ? dateFromISO(newValue) : undefined;\n    this.value = newValue || \"\";\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      this.setInputValue(oldValue as string);\n    }\n  };\n\n  private warnAboutInvalidValue(value: string): void {\n    console.warn(\n      `The specified value \"${value}\" does not conform to the required format, \"YYYY-MM-DD\".`,\n    );\n  }\n\n  private commonDateSeparators = [\".\", \"-\", \"/\"];\n\n  private formatNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            this.commonDateSeparators?.includes(char)\n              ? this.localeData?.separator\n              : numberKeys?.includes(char)\n                ? numberStringFormatter?.numberFormatter?.format(Number(char))\n                : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private parseNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            numberKeys.includes(char) ? numberStringFormatter.delocalize(char) : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private getNormalizedDate(value: string): string {\n    if (!value) {\n      return \"\";\n    }\n\n    if (!isTwoDigitYear(value)) {\n      return value;\n    }\n\n    const { day, month, year } = datePartsFromISO(value);\n    const normalizedYear = normalizeToCurrentCentury(Number(year));\n    return `${normalizedYear}-${month}-${day}`;\n  }\n}\n","import { datePartsFromISO } from \"../../utils/date\";\n\n/**\n * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isTwoDigitYear(value: string): boolean {\n  if (!value) {\n    return false;\n  }\n  const { year } = datePartsFromISO(value);\n  return Number(year) < 100;\n}\n\n/**\n * Returns a normalized year to current century from a given two digit year number.\n *\n * @param {number} twoDigitYear\n * @returns {string}\n */\nexport function normalizeToCurrentCentury(twoDigitYear: number): number {\n  const currentYear = new Date().getFullYear();\n  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;\n  return normalizedYear;\n}\n",":host {\n  @extend %component-spacing;\n  @include floating-ui-elem-anim(\".menu-container\");\n  @apply relative\n    inline-block\n    w-full\n    overflow-visible\n    align-top\n    shadow-none;\n}\n\n@function get-trailing-text-input-padding($chevron-spacing) {\n  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.2\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.4\"))};\n}\n\n:host([scale=\"m\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.3\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.6\"))};\n}\n\n:host([scale=\"l\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.4\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.8\"))};\n}\n\n@include disabled();\n\n.calendar-wrapper {\n  @apply shadow-none;\n  transform: translate3d(0, 0, 0);\n}\n\n.input-wrapper {\n  @apply relative;\n\n  .chevron-icon {\n    color: var(--calcite-color-text-3);\n  }\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .chevron-icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n.toggle-icon {\n  @apply absolute flex cursor-pointer items-center;\n  inset-inline-end: 0;\n  inset-block: 0;\n  padding-inline: var(--calcite-toggle-spacing);\n}\n\n:host([range]) {\n  .input-container {\n    @apply flex;\n  }\n\n  .input-wrapper {\n    @apply flex-auto;\n  }\n\n  .horizontal-arrow-container {\n    @apply bg-background\n      border-color-input\n      flex\n      items-center\n      border\n      border-l-0\n      border-r-0\n      border-solid\n      py-0\n      px-1;\n  }\n}\n\n:host([range][layout=\"vertical\"]) {\n  .input-wrapper {\n    @apply w-full;\n  }\n\n  .input-container {\n    @apply flex-col\n      items-start;\n  }\n\n  .calendar-wrapper--end {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .vertical-arrow-container {\n    inset-block-start: theme(\"spacing.6\");\n    @apply bg-foreground-1\n      absolute\n      z-default\n      mx-px\n      px-2.5;\n    inset-inline-start: 0;\n  }\n}\n\n.menu-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n  @apply invisible;\n}\n\n@include floating-ui-elem-anim(\".menu-container\");\n\n:host([open]) .menu-container {\n  @include floating-ui-wrapper-active();\n}\n\n.menu-container--active {\n  @include floating-ui-wrapper-active();\n}\n\n.input .calcite-input__wrapper {\n  @apply mt-0;\n}\n\n:host([range][layout=\"vertical\"][scale=\"m\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.6\");\n  padding-inline-start: theme(\"spacing.3\");\n\n  calcite-icon {\n    @apply h-3\n      w-3\n      min-w-0;\n  }\n}\n\n:host([range][layout=\"vertical\"][scale=\"l\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.9\");\n  @apply px-3.5;\n}\n\n:host([range][layout=\"vertical\"][open]) {\n  .vertical-arrow-container {\n    @apply hidden;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n"],"names":["Heading","props","children","HeadingTag","level","h","inRange","date","min","max","time","getTime","afterMin","Date","beforeMax","dateFromRange","beforeMin","afterMax","dateFromISO","iso8601","isEndDate","d","split","map","parseFloat","setFullYear","isNaN","Error","setEndOfDay","dateFromLocalizedString","value","localeData","separator","parts","string","datePartsFromLocalizedString","day","month","year","parseInt","parseDateString","parseCalendarYear","validDay","validMonth","validDate","validLength","filter","c","length","validYear","toString","processCalendarYear","mode","order","getOrder","unitOrder","values","part","numberStringFormatter","indexOf","dateToISO","String","getMonth","padStart","getDate","getFullYear","datePartsFromISO","isoDate","dateParts","sameDate","d1","d2","toLowerCase","sort","a","b","getDaysDiff","date1","date2","setHours","DatePickerDay","_inherits","_this","disabled","calciteDaySelect","emit","event","isActivationKey","key","preventDefault","this","calciteInternalDayHover","setUpLoadableComponent","parentDatePickerEl","closestElementCrossShadowBoundary","el","setComponentLoaded","_context2","componentFocusable","focus","dayId","replaceAll","numberingSystem","locale","lang","useGrouping","formattedDay","dayLabel","dateTimeFormat","format","Host","toAriaBoolean","active","id","onClick","onKeyDown","keyDownHandler","role","tabIndex","InteractiveContainer","class","connectInteractive","updateHostInteraction","disconnectInteractive","get","HTMLElement","DatePickerMonth","defaultPrevented","isRTL","dir","addDays","addMonths","activeDate","setDate","activeFocus","target","calciteInternalDatePickerMouseOut","calciteInternalDatePickerHover","stopPropagation","calciteInternalDatePickerSelect","startOfWeek","weekStart","days","abbreviated","short","narrow","weekDays","scale","adjustedWeekDays","slice","curMonDays","getCurrentMonthDays","prevMonDays","getPreviousMonthDays","nextMonDays","getNextMonthDays","dayInWeek","getDayInWeek","_this2","currentMonth","ref","onFocusout","disableActiveFocus","weekday","index","renderDateDay","step","nextDate","setMonth","calciteInternalDatePickerActiveDateChange","lastDate","startDay","getDay","i","push","num","endDay","startDate","endDate","isRangeHover","selectedDate","isEndOfRange","hoverRange","end","_this3","isFocusedOnStart","isHoverInRange","_this$hoverRange","endOfRange","highlighted","betweenSelectedRange","onCalciteDaySelect","daySelect","onCalciteInternalDayHover","dayHover","range","rangeEdge","undefined","rangeHover","setFocus","selected","isSelected","startOfRange","isStartOfRange","_this$hoverRange2","focused","start","isStart","insideRange","cond1","cond2","CSS","ICON","DatePickerMonthHeader","localizedYear","setYear","offset","commit","handleArrowClick","prevMonthDate","prevMonthClick","nextMonthDate","nextMonthClick","setNextPrevMonthDates","renderContent","messages","activeMonth","months","localizedMonth","wide","formatCalendarYear","reverse","suffix","_localeData$year","Fragment","prevMonth","href","prevMonthKeydown","tabindex","icon","getIconScale","text","headingLevel","inputmode","maxlength","minlength","onChange","onYearChange","onInput","onYearInput","onYearKey","pattern","yearInput","type","nextMonth","nextMonthKeydown","Number","_ref$offset","parsedYear","_ref2$commit","_ref2$offset","inRangeDate","getInRangeDate","DATE_PICKER_FORMAT_OPTIONS","dateStyle","translationCache","requestCache","getLocaleData","_getLocaleData","getSupportedLocale","_context5","fetch","getAssetPath","then","resp","json","catch","console","error","data","getValueAsDateRange","v","DatePicker","resetActiveDates","detail","activeRange","activeEndDate","activeStartDate","mostRecentRangeValue","valueAsDate","Array","isArray","proximitySelectionDisabled","startDiff","endDiff","calciteDatePickerChange","getStartDate","getEndDate","setEndDate","setStartDate","newActiveDate","newValueAsDate","newActiveStartDate","newActiveEndDate","minAsDate","maxAsDate","_context","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","_context3","loadLocaleData","onMinChanged","onMaxChanged","setUpMessages","getActiveDate","getActiveEndDate","minDate","maxDate","onBlur","renderCalendar","updateMessages","effectiveLocale","isBrowser","_context4","getDateTimeFormat","onCalciteInternalDatePickerSelect","monthHeaderSelectChange","onCalciteInternalDatePickerActiveDateChange","monthActiveDateChange","onCalciteInternalDatePickerHover","monthHoverChange","onCalciteInternalDatePickerMouseOut","monthMouseOutChange","monthDateChange","newEndDate","calciteDatePickerRangeChange","IDS","InputDatePicker","parsedValue","parseNumerals","formattedValue","formatNumerals","datePickerActiveDate","commitValue","guid","currentOpenInput","focusedInput","endInput","startInput","position","currentTarget","getAttribute","composedPath","find","classList","_el$classList","contains","open","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","transitionEl","shouldFocusRangeEnd","_this$endInput","shouldFocusRangeStart","_this$startInput","submitForm","restoreInputFocus","focusOnOpen","floatingEl","connectFloatingUI","referenceEl","startWrapper","setReferenceEl","endWrapper","datePickerEl","connectFocusTrap","focusTrapEl","focusTrapOptions","initialFocus","setReturnFocus","setValue","localizeInputValues","setRangeValue","newValue","input","inputEl","oldValue","oldValueIsArray","valueIsArray","newStartDate","newStartDateISO","getNormalizedDate","newEndDateISO","userChangedValue","changeEvent","calciteInputDatePickerChange","setInputValue","char","commonDateSeparators","_this$commonDateSepar","includes","_this$localeData","numberKeys","_numberStringFormatte","join","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","defaultMenuPlacement","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","valueAsDateChangedExternally","setFilteredPlacements","reposition","onToggleOpenCloseComponent","readOnly","focusFirstTabbable","placement","overlayPositioning","_args2","delayed","handleDateTimeFormatChange","openHandler","dateInRange","warnAboutInvalidValue","connectLabel","connectForm","Promise","all","disconnectLabel","disconnectForm","disconnectFloatingUI","blurHandler","onInputWrapperClick","onPointerDown","onInputWrapperPointerDown","setStartWrapper","dialogId","placeholderTextId","status","layout","onCalciteInputTextInput","calciteInternalInputInputHandler","onCalciteInternalInputTextBlur","calciteInternalInputBlurHandler","onCalciteInternalInputTextFocus","startInputFocus","placeholder","_this$localeData2","setStartInput","renderToggleIcon","_this$localeData3","chooseDate","setFloatingEl","FloatingCSS","setTransitionEl","messageOverrides","onCalciteDatePickerChange","handleDateChange","onCalciteDatePickerRangeChange","handleDateRangeChange","setDatePickerRef","flipRtl","setEndWrapper","endInputFocus","_this$localeData4","setEndInput","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","message","formattingOptions","getSupportedNumberingSystem","Intl","DateTimeFormat","getDateFormatSupportedLocale","requestAnimationFrame","calciteInputDatePickerBeforeOpen","onActivate","calciteInputDatePickerOpen","calciteInputDatePickerBeforeClose","calciteInputDatePickerClose","reset","syncHiddenFormInput","dateAsISO","startValue","endValue","warn","isTwoDigitYear","normalizedYear","twoDigitYear","currentYear","Math","floor","normalizeToCurrentCentury","iconCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","charAt","firstNonDigitInPartPattern","partIndex","replace","match","toUpperCase","normalizeIconName","filled","iconName","substring","fetchIcon","_fetchIcon","cachedIconKey","cachedIconData","getCachedIconDataByKey","path","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","_this$intersectionObs","disconnect","pathData","textLabel","getElementDir","semantic","paths","concat","fill","height","viewBox","width","xmlns","opacity","fetchIconProps","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe"],"sourceRoot":""}