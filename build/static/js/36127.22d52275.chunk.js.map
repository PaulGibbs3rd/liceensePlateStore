{"version":3,"file":"static/js/36127.22d52275.chunk.js","mappings":";uKAaaA,EACU,uBAGVC,EAAmD,SAAzCA,GAAA,IACrBC,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAE,EAAFA,GACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QAAO,OAEPC,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAOR,IACVO,EAAAA,EAAAA,GAAAA,wBAAAA,CAAA,YAAiC,SAASF,KAAMA,EAAMD,GAAIA,EAAIF,MAAOA,EAAOC,OAAQA,GACjFG,GAEC,qXC5BKN,EACI,iBADJA,EAEK,kBAFLA,EAGF,UAHEA,EAIA,YAJAA,EAKH,SALGA,EASS,wBATTA,EAUD,WAVCA,EAWM,qBAXNA,EAYI,kBAZJA,EAaE,gBAbFA,EAcL,OAdKA,EAeI,mBAfJA,EAgBQ,mBAGRS,EACQ,4BAGRC,EACE,eADFA,EAEA,aCiDAC,GAAQ,qBAAAC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,oCAwWU,uNAOrBC,EAAAA,MAAOC,EAAAA,EAAAA,KAcfD,EAAAA,YAAc,SAACE,GACbF,EAAKG,MAAQD,EAAME,OAAc,MACjCJ,EAAKK,qBAAqBC,QAG5BN,EAAAA,aAAe,WACbA,EAAKO,sBAAsBD,QAG7BN,EAAAA,yBAA2B,WACpBA,EAAKG,OACMH,EAAKQ,GAAGC,WAChBC,SAAQ,SAACF,GACO,UAAhBA,EAAGG,WACLX,EAAKG,MAAQK,EAAGI,UAAUC,YAMlCb,EAAAA,qBAAuB,WACrB,OAAIA,EAAKc,WACPd,EAAKe,4BAA8Bf,EAAKgB,+BAEtCtB,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,MAAOR,IACXO,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,OAAK,UAAKR,EAAyBa,EAAKiB,6BAC3CjB,EAAKe,4BAA4BG,eAEnC,IACAlB,EAAKe,4BAA4BD,YAIjC,MAsBTd,EAAAA,gBAAiBmB,EAAAA,EAAAA,GAAe,UAAQ,uBAAE,4GAAAC,EAAAA,KAAAA,GAClCC,EAAAA,EAAAA,IAAgB,WAAK,OAAAC,EAEzBtB,EAAKuB,8BADCC,EAAc,EAAdA,eAAgBC,EAAa,EAAbA,cAAeC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAY,EAAZA,cAAcC,EAAW,EAAXA,aAEtD,GAAKA,IAAgBJ,IACrCzB,EAAK8B,SAASC,MAAMC,MAAQ,GAAH,OAAMP,EAAa,OAE1CE,IAAYF,GAAiBC,IAAaF,GAAkBI,GAAgB,IAC9E5B,EAAKiC,0BACN,4CAYHjC,EAAAA,cAAgB,SAACQ,GACfR,EAAKkC,WAAa1B,EAClBR,EAAKmC,eAAeC,QAAQ5B,IAyCtBR,EAAAA,yBAA0BqC,EAAAA,EAAAA,IAChC,WACsB,aAAhBrC,EAAKsC,QAAyC,SAAhBtC,EAAKsC,SACrCtC,EAAKQ,GAAGuB,MAAMQ,OAAS,QAEL,eAAhBvC,EAAKsC,QAA2C,SAAhBtC,EAAKsC,SACvCtC,EAAKQ,GAAGuB,MAAMC,MAAQ,UDxiBA,IC4iB1B,CAAEQ,SAAS,iCAvduB,kCAaM,uIA0CgB,CACxDC,OAAO,EACPC,UAAU,EACVC,aAAa,EACbC,iBAAiB,EACjBC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,cAAc,EACdC,cAAc,2EA4BoB,cAOA,WAG2C,6BAU7B,aAGR,eAGT,UAOgB,sIAkMtB,GAAE,8DAvV7B,YACEC,EAAAA,EAAAA,IAAYC,QACb,CAAAC,IAAAA,mBAAAnD,MA4JD,6CAyBA,YACEoD,EAAAA,EAAAA,GAAmBF,OACnBG,EAAAA,EAAAA,GAAaH,OACbI,EAAAA,EAAAA,GAAYJ,OACZK,EAAAA,EAAAA,GAAiBL,OACjBM,EAAAA,EAAAA,GAAgBN,QACjB,CAAAC,IAAAA,oBAAAnD,MAAAA,WAAA,8BAED,mFAC+B,OAA7ByD,EAAAA,EAAAA,GAAuBP,MAAMQ,EAAAA,KAAAA,GACvBC,EAAAA,EAAAA,GAAcT,MAAK,gDAC1B,kDALAlD,IAKA,CAAAmD,IAAAA,mBAAAnD,MAED,YACE4D,EAAAA,EAAAA,GAAmBV,QACpB,CAAAC,IAAAA,qBAAAnD,MAED,YACE6D,EAAAA,EAAAA,GAAsBX,MACtBA,KAAKY,sBACN,CAAAX,IAAAA,uBAAAnD,MAED,WAAoB,OAClB+D,EAAAA,EAAAA,GAAsBb,OACtBc,EAAAA,EAAAA,GAAgBd,OAChBe,EAAAA,EAAAA,GAAef,OACfgB,EAAAA,EAAAA,GAAoBhB,OACpBiB,EAAAA,EAAAA,GAAmBjB,MACA,QAAnB,EAAAA,KAAKlB,sBAAc,OAAnBoC,EAAqBC,eACtB,CAAAlB,IAAAA,SAAAnD,MAED,WAAM,MAAAsE,EAAAC,EAAAC,EAAAA,KACEC,EAAYvB,KAAKwB,sBAAwBxB,KAAKyB,sBAAwBzB,KAAKvC,UACjF,OACEpB,EAAAA,EAAAA,GAACqF,EAAAA,GAAI,CAAAzB,IAAAA,6CACH5D,EAAAA,EAAAA,GAACsF,EAAAA,EAAoB,CAAA1B,IAAAA,2CAAC2B,SAAU5B,KAAK4B,WACnCvF,EAAAA,EAAAA,GAAAA,WAAAA,CAAA4D,IAAAA,2CAAA,mBACoBD,KAAKpD,KAAI,oBACRL,EAAqB,gBAC1BsF,EAAAA,EAAAA,GACI,YAAhB7B,KAAK/D,QAAwB+D,KAAKpC,4BACnC,cACWkE,EAAAA,EAAAA,GAAa9B,MACzB+B,UAAW/B,KAAK7C,GAAG4E,UACnBzF,OAAK,eACFR,EAAekE,KAAKgC,WAAQ,SAC5BlG,EAAsBkE,KAAKpC,6BAA0B,SACrD9B,EAAoBkE,KAAKyB,oBAAsBzB,KAAKwB,uBAAoB,SACxE1F,GAAqByF,IAAS,SAC9BzF,GAAmByF,GAAS,GAE/BU,KAAMjC,KAAKkC,QACXN,SAAU5B,KAAK4B,SACfO,KAAMnC,KAAKmC,KACXC,SAAUpC,KAAKqC,aACfC,QAAStC,KAAKuC,YACdC,YAAaxC,KAAKwC,YAClBR,SAAUhC,KAAKgC,SACfS,IAAKzC,KAAK0C,cACVC,SAAU3C,KAAK2C,SACfC,KAAM5C,KAAK4C,KACX9F,MAAOkD,KAAKlD,MACZ+F,KAAM7C,KAAK6C,QAEbxG,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,2CAAM3D,OAAK,UAAKR,GAAc,KAC5BO,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,2CAAM6C,aAAc9C,KAAK+C,6BAE3B1G,EAAAA,EAAAA,GAAAA,SAAAA,CAAA4D,IAAAA,2CACE3D,OAAK,eACFR,GAAa,IAAI,SACjBA,EAAekE,KAAKgC,WAAQ,SAC5BlG,GAAYyF,GAAS,GAExBkB,IAAK,SAACtF,GAAE,OAAMmE,EAAK7C,SAAWtB,CAAiB,IAE/Cd,EAAAA,EAAAA,GAAAA,MAAAA,CAAA4D,IAAAA,2CACE3D,OAAK,eACFR,GAAgB,IAAI,SACpBA,GAAyBkE,KAAKwB,sBAAwBxB,KAAKyB,oBAAkB,KAGhFpF,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,2CACEkC,KAAM3F,EACNsG,aAAc,SAACjG,GAAK,OACjByE,EAAKE,sBAAuBwB,EAAAA,EAAAA,GAA6BnG,EAAM,KAGpER,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,2CACEkC,KAAM3F,EACNsG,aAAc,SAACjG,GAAK,OACjByE,EAAKG,oBAAqBuB,EAAAA,EAAAA,GAA6BnG,EAAM,KAInEmD,KAAKiD,yBAER5G,EAAAA,EAAAA,GAAC6G,EAAAA,EAAmB,CAAAjD,IAAAA,2CAACkD,UAAWnD,OAC/BA,KAAKpC,6BACJvB,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,2CAAA,eAAmB,EAAI,YAAY,SAAS3D,MAAOR,EAAmBI,GAAI8D,KAAKpD,MAC5EoD,KAAKoD,iCAGTpD,KAAKqD,mBAAqC,YAAhBrD,KAAK/D,QAC9BI,EAAAA,EAAAA,GAACN,EAAAA,EAAU,CACTI,KAAM6D,KAAKsD,eACXpH,GAAIK,EACJH,QAAS4D,KAAKqD,kBACdrH,MAAOgE,KAAKhE,MACZC,OAAQ+D,KAAK/D,SAEb,wEAcZ,0FAAAsH,EAAAA,KAAAA,GACQC,EAAAA,EAAAA,GAAmBxD,MAAK,OAC9BA,KAAKnB,WAAW4E,QAAQ,gDACzB,uHAID,0FAAAC,EAAAA,KAAAA,GACQ1F,EAAAA,EAAAA,GAAgBgC,MAAK,OAC3BA,KAAKnB,WAAW8E,SAAS,gDAC1B,uDAAA1D,IAAAA,wBAAAnD,MA6BD,YACE8G,EAAAA,EAAAA,GAAe5D,KAAMA,KAAK6D,6CAa5B,WACE7D,KAAK8D,aACN,CAAA7D,IAAAA,8BAAAnD,MAsCD,WACE,IAAMe,EAAgBmC,KAAKlD,MAAQkD,KAAKlD,MAAMiH,OAAOC,WAAa,IAC5DvG,EAAYuC,KAAKvC,UAAUuG,WACjC,MAA6B,SAAzBhE,KAAKiE,gBACA,CAAEpG,cAAAA,EAAeJ,UAAAA,IAG1ByG,EAAAA,EAAAA,oBAA4C,CAC1CC,OAAQnE,KAAK6D,gBACbI,gBAAiBjE,KAAKiE,gBACtBG,YAAa,QACbC,YAAarE,KAAKsE,gBAEb,CACLzG,cAAeqG,EAAAA,EAAAA,SAA+BrG,GAC9CJ,UAAWyG,EAAAA,EAAAA,SAA+BzG,OAE7C,CAAAwC,IAAAA,sBAAAnD,MAcD,SAAoByH,GAClBA,EAAMC,kBAAkB,IACpBxE,KAAKpC,4BACP2G,EAAMC,kBAAkBxE,KAAKoD,kCAG/BqB,EAAAA,EAAAA,GAAoB,WAAYzE,KAAMuE,KACvC,CAAAtE,IAAAA,oBAAAnD,MAOD,WACE,MAAmDkD,KAAK9B,8BAAhDC,EAAc,EAAdA,eAAgBE,EAAQ,EAARA,SAAUE,EAAY,EAAZA,aAC9BA,EAAe,GAAKJ,EAAiBI,GAAgBF,IACvD2B,KAAKnB,WAAWH,MAAMQ,OAAS,GAAH,OAAMb,EAAWE,EAAY,SAE5D,CAAA0B,IAAAA,8BAAAnD,MAED,WAQE,MACEkD,KAAKnB,WAAW6F,wBADFvG,EAAc,EAAtBe,OAA+Bd,EAAa,EAApBO,MAEhC,EAA6CqB,KAAK7C,GAAGuH,wBAArCrG,EAAQ,EAAhBa,OAAyBZ,EAAO,EAAdK,MAC1B,EAAqDqB,KAAKvB,SAASiG,wBAEnE,MAAO,CACLvG,eAAAA,EACAC,cAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,aAP0B,EAApBW,OAQNV,YAR8C,EAAlBG,SAU/B,CAAAsB,IAAAA,gCAAAnD,MAEO,WACN,OAAOkD,KAAK2E,SAAShF,QAClBiF,QAAQ,cAAe5E,KAAKtC,4BAA4BD,WACxDmH,QAAQ,kBAAmB5E,KAAKtC,4BAA4BG,iBAChE,CAAAoC,IAAAA,2BAAAnD,MAiBO,WAAwB,MAC9B,OAAiB,QAAV,EAAAkD,KAAKlD,aAAK,aAAV+H,EAAYd,QAAS/D,KAAKvC,YAClC,CAAAwC,IAAAA,KAAA6E,IAAAA,sRC7kBiB,u2JD0EC,CAAAC,EAAAA,IAAAA,CAAAA,EAAAA,oBAAAA,0xCEzErB,IAEA,EAFkC,iBAAVC,QAAsBA,QAAUA,OAAOC,SAAWA,QAAUD,OCEhFE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KAK5E,EAFWC,GAAcF,GAAYG,SAAS,cAATA,GCDrC,EAFaC,EAAKC,OCAdC,EAAcP,OAAOQ,UAGrBC,EAAiBF,EAAYE,eAO7BC,EAAuBH,EAAYxB,SAGnC4B,EAAiBL,EAASA,EAAOM,iBAAcC,ECfnD,IAOIH,EAPcV,OAAOQ,UAOczB,SCHvC,IAII4B,EAAiBL,EAASA,EAAOM,iBAAcC,EASnD,SAASC,EAAWjJ,GAClB,OAAa,MAATA,OACegJ,IAAVhJ,EAdQ,qBADL,gBAiBJ8I,GAAkBA,KAAkBX,OAAOnI,GFGrD,SAAmBA,GACjB,IAAIkJ,EAAQN,EAAeO,KAAKnJ,EAAO8I,GACnCM,EAAMpJ,EAAM8I,GAEhB,IACE9I,EAAM8I,QAAkBE,EACxB,IAAIK,GAAW,CACJ,CAAX,MAAOC,GAAI,CAEb,IAAIC,EAASV,EAAqBM,KAAKnJ,GAQvC,OAPIqJ,IACEH,EACFlJ,EAAM8I,GAAkBM,SAEjBpJ,EAAM8I,IAGVS,CACT,CEpBMC,CAAUxJ,GDNhB,SAAwBA,GACtB,OAAO6I,EAAqBM,KAAKnJ,EACnC,CCKMyJ,CAAezJ,EACrB,CCDA,SAAS0J,EAAa1J,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,CCHA,SAAS2J,EAAS3J,GAChB,MAAuB,iBAATA,GACX0J,EAAa1J,IArBF,mBAqBYiJ,EAAWjJ,EACvC,CCzBA,IAAI4J,EAAe,KCEnB,IAAIC,EAAc,OASlB,SAASC,EAASC,GAChB,OAAOA,EACHA,EAAOC,MAAM,EDHnB,SAAyBD,GAGvB,IAFA,IAAIE,EAAQF,EAAO9C,OAEZgD,KAAWL,EAAaM,KAAKH,EAAOI,OAAOF,MAClD,OAAOA,CACT,CCFsBG,CAAgBL,GAAU,GAAGjC,QAAQ+B,EAAa,IAClEE,CACN,CCSA,SAASM,EAASrK,GAChB,IAAIsK,SAActK,EAClB,OAAgB,MAATA,IAA0B,UAARsK,GAA4B,YAARA,EAC/C,CCvBA,IAGIC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SAyBnB,SAASC,EAAS5K,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI2J,EAAS3J,GACX,OA1CM,IA4CR,GAAIqK,EAASrK,GAAQ,CACnB,IAAI6K,EAAgC,mBAAjB7K,EAAM8K,QAAwB9K,EAAM8K,UAAY9K,EACnEA,EAAQqK,EAASQ,GAAUA,EAAQ,GAAMA,CAC7C,CACE,GAAoB,iBAAT7K,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQ8J,EAAS9J,GACjB,IAAI+K,EAAWP,EAAWN,KAAKlK,GAC/B,OAAQ+K,GAAYN,EAAUP,KAAKlK,GAC/B0K,EAAa1K,EAAMgK,MAAM,GAAIe,EAAW,EAAI,GAC3CR,EAAWL,KAAKlK,GAvDb,KAuD6BA,CACvC,CC3CA,IAIA,EAJU,WACR,OAAOwI,EAAKwC,KAAKC,KACnB,ECZIC,EAAYC,KAAKC,IACjBC,EAAYF,KAAKG,IAwDrB,SAASC,EAASC,EAAMC,EAAMC,GAC5B,IAAIC,EACAC,EACAC,EACAtC,EACAuC,EACAC,EACAC,EAAiB,EACjB3J,GAAU,EACV4J,GAAS,EACTC,GAAW,EAEf,GAAmB,mBAARV,EACT,MAAM,IAAIW,UAzEQ,uBAmFpB,SAASC,EAAWC,GAClB,IAAIC,EAAOX,EACPY,EAAUX,EAKd,OAHAD,EAAWC,OAAW5C,EACtBgD,EAAiBK,EACjB9C,EAASiC,EAAKgB,MAAMD,EAASD,EAEjC,CAEE,SAASG,EAAYJ,GAMnB,OAJAL,EAAiBK,EAEjBP,EAAUY,WAAWC,EAAclB,GAE5BpJ,EAAU+J,EAAWC,GAAQ9C,CACxC,CAYE,SAASqD,EAAaP,GACpB,IAAIQ,EAAoBR,EAAON,EAM/B,YAAyB/C,IAAjB+C,GAA+Bc,GAAqBpB,GACzDoB,EAAoB,GAAOZ,GANJI,EAAOL,GAM8BH,CACnE,CAEE,SAASc,IACP,IAAIN,EAAOpB,IACX,GAAI2B,EAAaP,GACf,OAAOS,EAAaT,GAGtBP,EAAUY,WAAWC,EA3BvB,SAAuBN,GACrB,IAEIU,EAActB,GAFMY,EAAON,GAI/B,OAAOE,EACHZ,EAAU0B,EAAalB,GAJDQ,EAAOL,IAK7Be,CACR,CAmBuCC,CAAcX,GACrD,CAEE,SAASS,EAAaT,GAKpB,OAJAP,OAAU9C,EAINkD,GAAYP,EACPS,EAAWC,IAEpBV,EAAWC,OAAW5C,EACfO,EACX,CAcE,SAAS0D,IACP,IAAIZ,EAAOpB,IACPiC,EAAaN,EAAaP,GAM9B,GAJAV,EAAWwB,UACXvB,EAAW1I,KACX6I,EAAeM,EAEXa,EAAY,CACd,QAAgBlE,IAAZ8C,EACF,OAAOW,EAAYV,GAErB,GAAIE,EAIF,OAFAmB,aAAatB,GACbA,EAAUY,WAAWC,EAAclB,GAC5BW,EAAWL,EAE1B,CAII,YAHgB/C,IAAZ8C,IACFA,EAAUY,WAAWC,EAAclB,IAE9BlC,CACX,CAGE,OA3GAkC,EAAOb,EAASa,IAAS,EACrBpB,EAASqB,KACXrJ,IAAYqJ,EAAQrJ,QAEpBwJ,GADAI,EAAS,YAAaP,GACHR,EAAUN,EAASc,EAAQG,UAAY,EAAGJ,GAAQI,EACrEK,EAAW,aAAcR,IAAYA,EAAQQ,SAAWA,GAoG1De,EAAUI,OApCV,gBACkBrE,IAAZ8C,GACFsB,aAAatB,GAEfE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,OAAU9C,CACnD,EA+BEiE,EAAUK,MA7BV,WACE,YAAmBtE,IAAZ8C,EAAwBvC,EAASuD,EAAa7B,IACzD,EA4BSgC,CACT,4MC5LajO,EAEF,WCcEuO,EAA6C,CAAC,EAQ9CC,EAAyD,CAAC,EAE1DC,EAAmC,CAC9CC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGL,SAASC,EAAe,GAA+B,IAA7BxO,EAAI,EAAJA,KAAMH,EAAK,EAALA,MACxB4O,EAAOL,EAAUvO,GACjBmG,WAkD0BA,GAChC,IAAM0I,GAAqBC,MAAMC,OAAO5I,EAAK8E,OAAO,KAC9C+D,EAAQ7I,EAAK8I,MAAM,KAGzB,GAFmBD,EAAMjH,OAAS,EAElB,CACd,IAAMmH,EAA6B,SAEnC/I,EAAO6I,EACJG,KAAI,SAACC,EAAMC,GACV,OAAOD,EAAKxG,QAAQsG,GAA4B,SAAkBI,EAAOC,GAGvE,OAFwC,IAAdF,GAA8B,IAAXE,EAGpCD,EAGFA,EAAME,oBAGhBC,KAAK,IAGV,OAAOZ,EAAoB,IAAH,OAAO1I,GAASA,CAC1C,CA1EeuJ,CAAkBvP,GACzBwP,EAA0C,MAAjCxJ,EAAK8E,OAAO9E,EAAK4B,OAAS,GACnC6H,EAAWD,EAASxJ,EAAK0J,UAAU,EAAG1J,EAAK4B,OAAS,GAAK5B,EAE/D,MAAO,GAAP,OAAUyJ,GAAQ,OAAGhB,GAAI,OAAGe,EAAS,IAAM,GAC7C,CAAC,SAEqBG,EAAU,GAAD,+BAuB/B,aAFC,OAEDC,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAvBO,WAAyBC,GAAqB,gFAES,GADtDC,EAAgBtB,EAAeqB,KAC/BE,EAAiBC,EAAuBF,IAE1B,CAAFzL,EAAAA,KAAAA,EAAA,+BACT0L,GAAc,OAUtB,OAPI5B,EAAa2B,KAChB3B,EAAa2B,GAAiBG,OAAMC,EAAAA,EAAAA,IAAa,iBAAD,OAAkBJ,EAAa,WAC5EK,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAC1BC,OAAM,WAEL,OADAC,QAAQC,MAAM,IAAD,OAAKV,EAAa,0CACxB,OAEZzL,EAAAA,KAAAA,EAEkB8J,EAAa2B,GAAc,OACd,OAD1BW,EAAO,EAAH,KACVvC,EAAU4B,GAAiBW,EAAK,kBAEzBA,GAAI,6CACZ,sBAWD,SAAST,EAAuBjQ,GAC9B,OAAOmO,EAAUnO,EACnB,CC3EA,ICgBa2Q,GAAI,qBAAAnQ,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,oCA+GQ,kFAhGE,gBAQf,UAQK,oDAgFG,EAAK,kDAhEvB,WAAiB,WACVsD,KAAK8M,SACR9M,KAAK+M,kBAAiB,WACpBzL,EAAKwL,SAAU,EACfxL,EAAK0L,wBAGV,CAAA/M,IAAAA,uBAAAnD,MAED,WAAoB,MACO,QAAzB,EAAAkD,KAAKiN,4BAAoB,OAAzBC,EAA2B/L,aAC3BnB,KAAKiN,qBAAuB,OAC7B,CAAAhN,IAAAA,SAAAnD,MAED,WAAM,MACIK,EAA4C6C,KAA5C7C,GAAIgQ,EAAwCnN,KAAxCmN,QAASC,EAA+BpN,KAA/BoN,SAAUpR,EAAqBgE,KAArBhE,MAAOqR,EAAcrN,KAAdqN,UAChCC,GAAMC,EAAAA,EAAAA,GAAcpQ,GACpByN,EAAOL,EAAUvO,GACjBwR,IAAaH,EACbI,EAAQ,GAAGC,OAAON,GAAY,IACpC,OACE/Q,EAAAA,EAAAA,GAACqF,EAAAA,GAAI,CAAAzB,IAAAA,2CAAA,eACU4B,EAAAA,EAAAA,IAAe2L,GAAS,aACzBA,EAAWH,EAAY,KACnCM,KAAMH,EAAW,MAAQ,OAEzBnR,EAAAA,EAAAA,GAAAA,MAAAA,CAAA4D,IAAAA,2CAAA,cACc,OACZ3D,OAAK,eACFR,EAAsB,QAARwR,GAAiBH,IAAO,gBAClC,GAAI,GAEXS,KAAK,eACL1O,OAAO,OACP2O,QAAO,cAASjD,EAAI,YAAIA,GACxBjM,MAAM,OACNmP,MAAM,8BAELL,EAAMtC,KAAI,SAACyB,GAAoC,MAC9B,kBAATA,GACLvQ,EAAAA,EAAAA,GAAAA,OAAAA,CAAM0R,EAAGnB,KAETvQ,EAAAA,EAAAA,GAAAA,OAAAA,CAAM0R,EAAGnB,EAAKmB,EAAGC,QAAS,YAAapB,EAAOA,EAAKoB,QAAU,GAC9D,+EA+BH,iGACsB,GAApB7R,EAAyB6D,KAAzB7D,KAAMH,EAAmBgE,KAAnBhE,MAAO8Q,EAAY9M,KAAZ8M,SAEhBmB,EAAAA,EAAAA,MAAgB9R,GAAS2Q,EAAO,CAAA/O,EAAAA,KAAAA,EAAA,uCAKa,GAD5CmQ,EAAiB,CAAE/R,KAAAA,EAAMH,MAAAA,GAAO+B,EAAAA,GF1EjCoO,EAAuBxB,EE2EOuD,IAAe,MAAAnQ,EAAAA,KAAAA,EAAA,aAAAA,EAAAA,KAAAA,EAAW+N,EAAUoC,GAAe,OAAAnQ,EAAAA,GAAAA,EAAAA,KAAA,OAAxE,GAARqP,EAAW,EAAH,GAGVjR,IAAS6D,KAAK7D,KAAI,CAAA4B,EAAAA,KAAAA,GAAA,wCAItBiC,KAAKoN,SAAWA,EAAS,iDAC1B,uDAAAnN,IAAAA,mBAAAnD,MAEO,SAAiBqR,GAAoB,WAC3CnO,KAAKiN,sBAAuBnP,EAAAA,EAAAA,GAC1B,gBACA,SAACsQ,GACCA,EAAQ/Q,SAAQ,SAACgR,GACXA,EAAMC,iBACRC,EAAKtB,qBAAqB9L,aAC1BoN,EAAKtB,qBAAuB,KAC5BkB,UAIN,CAAEK,WAAY,SAGXxO,KAAKiN,qBAKVjN,KAAKiN,qBAAqBlO,QAAQiB,KAAK7C,IAJrCgR,MAKH,CAAAlO,IAAAA,KAAA6E,IAAAA,+MDhLa,qeCgBC,CAAAC,EAAAA,IAAAA,CAAAA,EAAAA,eAAAA,kfChBJ0J,EAAqB,CAChCrP,MAAO,eACPsP,QAAS,4BACTC,KAAM,eCWKC,GAAY,qBAAAlS,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,oCAiByB,wGANT,UAGC,aAGE,OAAM,6CAIhD,WACEsD,KAAK6O,eAAgBC,EAAAA,EAAAA,GAAiBL,EAAoBzO,KAAK7D,KAAM6D,KAAK/D,yCAS5E,WACE+D,KAAK6O,eAAgBC,EAAAA,EAAAA,GAAiBL,EAAoBzO,KAAK7D,KAAM6D,KAAK/D,UAC3E,CAAAgE,IAAAA,SAAAnD,MAED,WACE,IAAMiS,EAAS/O,KAAK7C,GAAG4R,OACvB,OACE1S,EAAAA,EAAAA,GAACqF,EAAAA,GAAI,CAAAzB,IAAAA,2CAAA,0BAA0B8O,GAC5B/O,KAAKgP,WAAWhP,KAAK6O,gBACtBxS,EAAAA,EAAAA,GAAAA,OAAAA,CAAA4D,IAAAA,wEAsBE,SAAW2L,GACjB,GAAIA,EACF,OACEvP,EAAAA,EAAAA,GAAAA,eAAAA,CACEC,MAAM,6BACN6Q,QAASnN,KAAKiP,YACd9S,KAAMyP,EACN5P,MAAM,QAIb,CAAAiE,IAAAA,KAAA6E,IAAAA,oJCvFqB,4iDDcC,CAAAC,EAAAA,IAAAA,CAAAA,EAAAA,wBAAAA,scEQlB,IAAMmK,EAAkB,CAAC,OAAQ,iBAAkB,QAAS,SAAU,QAAS,OAAQ,QAKjFC,EAAe,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,OAK9DC,EAAoB,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,WAAY,OAE5F,SAASC,EACPC,EACA/K,EACAgL,EACAC,GAEA,IAAMC,EAAgBF,EAASG,cACzB5S,EAAQwS,EAAeC,GAEzBC,GAAwB,MAAT1S,EACjByH,EAAMoL,aAAaF,EAAe,GAAF,OAAK3S,IAGrCyH,EAAMqL,gBAAgBH,EAE1B,UAWgBhL,EACd2C,EACAkI,EACAO,GAEAA,EAAgBzI,KAAgB,aAATA,EAAsB,OAASA,EAEtD,IAAM0I,EAAmBZ,EAAgBa,SAAS3I,GAC5C4I,EAAwBV,EAE9BD,EAA2BW,EAAuBH,EAAiB,MAAOC,GAC1ET,EAA2BW,EAAuBH,EAAiB,MAAOC,GAC1ET,EAA2BW,EAAuBH,EAAiB,OAAQC,GAE3E,IAAMG,EAAqBb,EAAkBW,SAAS3I,GAEhD8I,EAAwBZ,EAE9BD,EAA2Ba,EAAuBL,EAAiB,YAAaI,GAChFZ,EAA2Ba,EAAuBL,EAAiB,YAAaI,GAIhFZ,EAA2Ba,EAAuBL,EAAiB,UAF7CV,EAAaY,SAAS3I,GAG9C,mMC9Ea+I,EAA4E,CAAC,EAAE,SAE7EC,EAAiB,EAADA,GAAA,4CAiB9B,OAjB8BC,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAA/B,WAAgCC,EAAcnN,GAAiB,4EAC7B,GAA1BlD,EAAM,GAAH,OAAMkD,EAAS,YAAImN,IAExBH,EAAkClQ,GAAM,CAAFlC,EAAAA,KAAAA,EAAA,+BACjCoS,EAAkClQ,IAAI,OAUN,OAPzCkQ,EAAkClQ,GAAOmM,OAAMC,EAAAA,EAAAA,IAAa,YAAD,OAAalJ,EAAS,yBAAiBmN,EAAI,WACnGhE,MAAK,SAACC,GAIL,OAHKA,EAAKgE,IACRC,IAEKjE,EAAKC,UAEbC,OAAM,kBAAM+D,GAAwB,IAAE,kBAElCL,EAAkClQ,IAAI,4CAC9C,sBAED,SAASuQ,IACP,MAAM,IAAIC,MAAM,2CAClB,CAEA,SAASC,EAAcvN,GACrBA,EAAUwB,UAAW,kBAChBxB,EAAUwN,iBACVxN,EAAUyN,iBAEjB,CAEA,SAASC,KAIT,SAKsBpQ,EAAc,GAAD,4CAGlC,OAHkCqQ,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAA5B,WAA6B3N,GAAuB,6EAAA3C,EAAAA,KAAAA,EACvBuQ,EAAc5N,EAAWA,EAAUU,iBAAgB,OAArFV,EAAUwN,gBAAkB,EAAH,KACzBD,EAAcvN,GAAW,4CAC1B,+BAEc4N,EAAc,EAADA,GAAA,+BAY5B,aAFC,OAEDC,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAZA,WAA6B7N,EAAyBmN,GAAY,oFAC3DrC,EAAAA,EAAAA,KAAa,CAAF1K,EAAAA,KAAAA,EAAA,+BACP,CAAC,GAAC,OAKsC,OAFzCpG,EAAOgG,EAAPhG,GACF+I,EAAM/I,EAAG8T,QAAQvB,cACjBwB,EAAgBhL,EAAItB,QAAQ,WAAY,IAAG,kBAE1CwL,GAAiBe,EAAAA,EAAAA,GAAmBb,EAAM,OAAQY,IAAc,4CACxE,+BAaqBtN,EAAe,EAADA,GAAA,+BAKpC,aAFC,OAEDwN,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MALO,WAA8BjO,EAAyBmN,GAAY,6EAAA5M,EAAAA,KAAAA,EACtCqN,EAAc5N,EAAWmN,GAAK,OAAhEnN,EAAUwN,gBAAkB,EAAH,KACzBD,EAAcvN,GAAW,4CAC1B,+BAWe7C,EAAgB6C,GAC9BA,EAAUkO,iBAAmBC,CAC/B,UASgBrQ,EAAmBkC,GAEjCA,EAAUkO,iBAAmBR,CAC/B,CA6CA,SAASS,IACPZ,EAAc1Q,KAChB,sECpGA,SAAShB,EAASsJ,EAAMC,EAAMC,GAC5B,IAAIrJ,GAAU,EACV6J,GAAW,EAEf,GAAmB,mBAARV,EACT,MAAM,IAAIW,UAnDQ,uBAyDpB,OAJI9B,EAAAA,EAAAA,GAASqB,KACXrJ,EAAU,YAAaqJ,IAAYA,EAAQrJ,QAAUA,EACrD6J,EAAW,aAAcR,IAAYA,EAAQQ,SAAWA,IAEnDX,EAAAA,EAAAA,GAASC,EAAMC,EAAM,CAC1B,QAAWpJ,EACX,QAAWoJ,EACX,SAAYS,GAEhB","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/text-area.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/text-area.scss?tag=calcite-text-area&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  id?: string;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  id,\n  icon,\n  message,\n}): VNode => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message aria-live=\"polite\" icon={icon} id={id} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  characterLimit: \"character-limit\",\n  content: \"content\",\n  container: \"container\",\n  footer: \"footer\",\n  resizeDisabled: \"resize--disabled\",\n  resizeDisabledX: \"resize--disabled-x\",\n  resizeDisabledY: \"resize--disabled-y\",\n  characterOverLimit: \"character--over-limit\",\n  readOnly: \"readonly\",\n  textAreaInvalid: \"text-area--invalid\",\n  footerSlotted: \"footer--slotted\",\n  borderColor: \"border--color\",\n  hide: \"hide\",\n  blockSizeFull: \"block-size--full\",\n  footerEndSlotOnly: \"footer--end-only\",\n};\n\nexport const IDS = {\n  validationMessage: \"textAreaValidationMessage\",\n};\n\nexport const SLOTS = {\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const RESIZE_TIMEOUT = 100;\n","import {\n  Component,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  VNode,\n  Watch,\n  Method,\n  Host,\n  State,\n  forceUpdate,\n} from \"@stencil/core\";\nimport { throttle } from \"lodash-es\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  componentFocusable,\n  componentLoaded,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { guid } from \"../../utils/guid\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput, TextualInputComponent } from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CharacterLengthObj } from \"./interfaces\";\nimport { TextAreaMessages } from \"./assets/text-area/t9n\";\nimport { CSS, IDS, SLOTS, RESIZE_TIMEOUT } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot footer-start - A slot for adding content to the start of the component's footer.\n * @slot footer-end - A slot for adding content to the end of the component's footer.\n */\n\n@Component({\n  tag: \"calcite-text-area\",\n  styleUrl: \"text-area.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TextArea\n  implements\n    FormComponent,\n    LabelableComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    T9nComponent,\n    InteractiveComponent,\n    Omit<TextualInputComponent, \"pattern\">\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the component's number of columns.\n   *\n   * @mdn [cols](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-cols)\n   */\n  @Prop({ reflect: true }) columns: number;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Specifies the minimum number of characters allowed.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /**\n   * Specifies the maximum number of characters allowed.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TextAreaMessages;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /**\n   * Specifies the placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * When `true`, the component's `value` can be read, but cannot be modified.\n   *\n   * @readonly\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   *\n   * @mdn [required]https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies if the component is resizable. */\n  @Prop({ reflect: true }) resize: \"both\" | \"horizontal\" | \"vertical\" | \"none\" = \"both\";\n\n  /**\n   * Specifies the component's number of rows.\n   *\n   * @mdn [rows](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-rows)\n   */\n  @Prop({ reflect: true }) rows: number;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"l\" | \"m\" | \"s\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Specifies the wrapping mechanism for the text.\n   *\n   * @mdn [wrap](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-wrap)\n   */\n  @Prop({ reflect: true }) wrap: \"soft\" | \"hard\" = \"soft\";\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TextAreaMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Emitters\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event() calciteTextAreaInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event() calciteTextAreaChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n    this.setTextAreaHeight();\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const hasFooter = this.startSlotHasElements || this.endSlotHasElements || !!this.maxLength;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <textarea\n            aria-describedby={this.guid}\n            aria-errormessage={IDS.validationMessage}\n            aria-invalid={toAriaBoolean(\n              this.status === \"invalid\" || this.isCharacterLimitExceeded(),\n            )}\n            aria-label={getLabelText(this)}\n            autofocus={this.el.autofocus}\n            class={{\n              [CSS.readOnly]: this.readOnly,\n              [CSS.textAreaInvalid]: this.isCharacterLimitExceeded(),\n              [CSS.footerSlotted]: this.endSlotHasElements && this.startSlotHasElements,\n              [CSS.blockSizeFull]: !hasFooter,\n              [CSS.borderColor]: !hasFooter,\n            }}\n            cols={this.columns}\n            disabled={this.disabled}\n            name={this.name}\n            onChange={this.handleChange}\n            onInput={this.handleInput}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            ref={this.setTextAreaEl}\n            required={this.required}\n            rows={this.rows}\n            value={this.value}\n            wrap={this.wrap}\n          />\n          <span class={{ [CSS.content]: true }}>\n            <slot onSlotchange={this.contentSlotChangeHandler} />\n          </span>\n          <footer\n            class={{\n              [CSS.footer]: true,\n              [CSS.readOnly]: this.readOnly,\n              [CSS.hide]: !hasFooter,\n            }}\n            ref={(el) => (this.footerEl = el as HTMLElement)}\n          >\n            <div\n              class={{\n                [CSS.container]: true,\n                [CSS.footerEndSlotOnly]: !this.startSlotHasElements && this.endSlotHasElements,\n              }}\n            >\n              <slot\n                name={SLOTS.footerStart}\n                onSlotchange={(event) =>\n                  (this.startSlotHasElements = slotChangeHasAssignedElement(event))\n                }\n              />\n              <slot\n                name={SLOTS.footerEnd}\n                onSlotchange={(event) =>\n                  (this.endSlotHasElements = slotChangeHasAssignedElement(event))\n                }\n              />\n            </div>\n            {this.renderCharacterLimit()}\n          </footer>\n          <HiddenFormInputSlot component={this} />\n          {this.isCharacterLimitExceeded() && (\n            <span aria-hidden={true} aria-live=\"polite\" class={CSS.assistiveText} id={this.guid}>\n              {this.replacePlaceHoldersInMessages()}\n            </span>\n          )}\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.textAreaEl.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    await componentLoaded(this);\n    this.textAreaEl.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTextAreaElement;\n\n  defaultValue: TextArea[\"value\"];\n\n  footerEl: HTMLElement;\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  textAreaEl: HTMLTextAreaElement;\n\n  @State() defaultMessages: TextAreaMessages;\n\n  @State() endSlotHasElements: boolean;\n\n  @State() startSlotHasElements: boolean;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private guid = guid();\n\n  private localizedCharacterLengthObj: CharacterLengthObj;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  handleInput = (event: InputEvent): void => {\n    this.value = event.target[\"value\"];\n    this.calciteTextAreaInput.emit();\n  };\n\n  handleChange = (): void => {\n    this.calciteTextAreaChange.emit();\n  };\n\n  contentSlotChangeHandler = (): void => {\n    if (!this.value) {\n      const nodes = this.el.childNodes;\n      nodes.forEach((el) => {\n        if (el.nodeName === \"#text\") {\n          this.value = el.nodeValue.trim();\n        }\n      });\n    }\n  };\n\n  renderCharacterLimit = (): VNode | null => {\n    if (this.maxLength) {\n      this.localizedCharacterLengthObj = this.getLocalizedCharacterLength();\n      return (\n        <span class={CSS.characterLimit}>\n          <span class={{ [CSS.characterOverLimit]: this.isCharacterLimitExceeded() }}>\n            {this.localizedCharacterLengthObj.currentLength}\n          </span>\n          {\"/\"}\n          {this.localizedCharacterLengthObj.maxLength}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  getLocalizedCharacterLength(): CharacterLengthObj {\n    const currentLength = this.value ? this.value.length.toString() : \"0\";\n    const maxLength = this.maxLength.toString();\n    if (this.numberingSystem === \"latn\") {\n      return { currentLength, maxLength };\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"never\",\n      useGrouping: this.groupSeparator,\n    };\n    return {\n      currentLength: numberStringFormatter.localize(currentLength),\n      maxLength: numberStringFormatter.localize(maxLength),\n    };\n  }\n\n  resizeObserver = createObserver(\"resize\", async () => {\n    await componentLoaded(this);\n    const { textAreaHeight, textAreaWidth, elHeight, elWidth, footerHeight, footerWidth } =\n      this.getHeightAndWidthOfElements();\n    if (footerWidth > 0 && footerWidth !== textAreaWidth) {\n      this.footerEl.style.width = `${textAreaWidth}px`;\n    }\n    if (elWidth !== textAreaWidth || elHeight !== textAreaHeight + (footerHeight || 0)) {\n      this.setHeightAndWidthToAuto();\n    }\n  });\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.setCustomValidity(\"\");\n    if (this.isCharacterLimitExceeded()) {\n      input.setCustomValidity(this.replacePlaceHoldersInMessages());\n    }\n\n    syncHiddenFormInput(\"textarea\", this, input);\n  }\n\n  setTextAreaEl = (el: HTMLTextAreaElement): void => {\n    this.textAreaEl = el;\n    this.resizeObserver.observe(el);\n  };\n\n  setTextAreaHeight(): void {\n    const { textAreaHeight, elHeight, footerHeight } = this.getHeightAndWidthOfElements();\n    if (footerHeight > 0 && textAreaHeight + footerHeight != elHeight) {\n      this.textAreaEl.style.height = `${elHeight - footerHeight}px`;\n    }\n  }\n\n  getHeightAndWidthOfElements(): {\n    textAreaHeight: number;\n    textAreaWidth: number;\n    elHeight: number;\n    elWidth: number;\n    footerHeight: number;\n    footerWidth: number;\n  } {\n    const { height: textAreaHeight, width: textAreaWidth } =\n      this.textAreaEl.getBoundingClientRect();\n    const { height: elHeight, width: elWidth } = this.el.getBoundingClientRect();\n    const { height: footerHeight, width: footerWidth } = this.footerEl.getBoundingClientRect();\n\n    return {\n      textAreaHeight,\n      textAreaWidth,\n      elHeight,\n      elWidth,\n      footerHeight,\n      footerWidth,\n    };\n  }\n\n  private replacePlaceHoldersInMessages(): string {\n    return this.messages.tooLong\n      .replace(\"{maxLength}\", this.localizedCharacterLengthObj.maxLength)\n      .replace(\"{currentLength}\", this.localizedCharacterLengthObj.currentLength);\n  }\n\n  // height and width are set to auto here to avoid overlapping on to neighboring elements in the layout when user starts resizing.\n  // throttle is used to avoid flashing of textarea when user resizes.\n  private setHeightAndWidthToAuto = throttle(\n    (): void => {\n      if (this.resize === \"vertical\" || this.resize === \"both\") {\n        this.el.style.height = \"auto\";\n      }\n      if (this.resize === \"horizontal\" || this.resize === \"both\") {\n        this.el.style.width = \"auto\";\n      }\n    },\n    RESIZE_TIMEOUT,\n    { leading: false },\n  );\n\n  private isCharacterLimitExceeded(): boolean {\n    return this.value?.length > this.maxLength;\n  }\n}\n",":host {\n  @apply inline-block\n  relative\n  w-full\n  h-full;\n}\n\ntextarea {\n  @apply font-sans\n    text-color-1\n    relative\n    block\n    bg-foreground-1\n    box-border\n    border-color-input\n    border\n    w-full\n    m-0;\n  min-inline-size: theme(\"spacing.48\");\n  border-block-end: 1px solid var(--calcite-color-border-3);\n  @media screen and (max-width: 480px) {\n    @apply resize-none;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &.text-area--invalid {\n    @apply border-color-danger\n    border\n    border-solid\n    border-b;\n    &:focus {\n      @apply focus-inset-danger;\n    }\n  }\n  &.footer--slotted {\n    min-inline-size: theme(\"spacing.72\");\n  }\n}\n\n.footer {\n  @apply flex\n  bg-foreground-1\n  box-border\n  border-color-input\n  border\n  border-solid\n  border-t-0\n  items-center;\n}\n\n.character-limit {\n  @apply flex\n  justify-end\n  text-color-2\n  items-center\n  font-normal\n  whitespace-nowrap;\n}\n\n.character--over-limit {\n  @apply font-bold\n  text-danger;\n}\n\n:host([resize=\"none\"]) textarea {\n  @apply resize-none;\n}\n\n:host([resize=\"horizontal\"]) textarea {\n  @apply resize-x;\n}\n\n:host([resize=\"vertical\"]) textarea {\n  @apply resize-y;\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n2;\n  .footer {\n    @apply py-1\n    px-2;\n    min-block-size: 1.75rem;\n  }\n  textarea {\n    @apply py-1\n    px-2;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-n2\n    pl-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  textarea {\n    @apply py-2\n    px-3;\n  }\n  .footer {\n    @apply py-2\n    px-3;\n    min-block-size: 2.25rem;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-n1\n    pl-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0;\n  textarea {\n    @apply py-3\n    px-4;\n  }\n  .footer {\n    @apply py-3\n    px-4;\n    min-block-size: 2.75rem;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-0\n    pl-4;\n  }\n}\n\n:host([status=\"invalid\"]) {\n  textarea {\n    @apply border-color-danger;\n  }\n  textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.readonly {\n  @apply bg-background font-medium;\n}\n\n.border--color {\n  @apply border-b border-color-input;\n  &:focus {\n    @apply border-b-2;\n  }\n}\n\ntextarea.block-size--full {\n  @apply h-full;\n}\n\n.content,\n.hide {\n  @apply hidden;\n}\n\n.container {\n  @apply flex\n  justify-between\n  w-full;\n}\n\n.footer--end-only {\n  @apply justify-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include disabled();\n@include base-component();\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["CSS","Validation","scale","status","id","icon","message","h","class","IDS","SLOTS","TextArea","_inherits","_this","guid","event","value","target","calciteTextAreaInput","emit","calciteTextAreaChange","el","childNodes","forEach","nodeName","nodeValue","trim","maxLength","localizedCharacterLengthObj","getLocalizedCharacterLength","isCharacterLimitExceeded","currentLength","createObserver","_context","componentLoaded","_this$getHeightAndWid","getHeightAndWidthOfElements","textAreaHeight","textAreaWidth","elHeight","elWidth","footerHeight","footerWidth","footerEl","style","width","setHeightAndWidthToAuto","textAreaEl","resizeObserver","observe","throttle","resize","height","leading","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","forceUpdate","this","key","connectInteractive","connectLabel","connectForm","connectLocalized","connectMessages","setUpLoadableComponent","_context2","setUpMessages","setComponentLoaded","updateHostInteraction","setTextAreaHeight","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","_this$resizeObserver","disconnect","_class4","_class5","_this2","hasFooter","startSlotHasElements","endSlotHasElements","Host","InteractiveContainer","disabled","toAriaBoolean","getLabelText","autofocus","readOnly","cols","columns","name","onChange","handleChange","onInput","handleInput","placeholder","ref","setTextAreaEl","required","rows","wrap","onSlotchange","contentSlotChangeHandler","slotChangeHasAssignedElement","renderCharacterLimit","HiddenFormInputSlot","component","replacePlaceHoldersInMessages","validationMessage","validationIcon","_context3","componentFocusable","focus","_context4","select","updateMessages","effectiveLocale","setFocus","length","toString","numberingSystem","numberStringFormatter","locale","signDisplay","useGrouping","groupSeparator","input","setCustomValidity","syncHiddenFormInput","getBoundingClientRect","messages","replace","_this$value","get","HTMLElement","global","Object","freeSelf","self","freeGlobal","Function","root","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","symToStringTag","toStringTag","undefined","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isSymbol","reWhitespace","reTrimStart","baseTrim","string","slice","index","test","charAt","trimmedEndIndex","isObject","type","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","Date","now","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","clearTimeout","cancel","flush","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","parts","split","firstNonDigitInPartPattern","map","part","partIndex","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetchIcon","_fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","_this$intersectionObs","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","concat","role","fill","viewBox","xmlns","d","opacity","isBrowser","fetchIconProps","callback","entries","entry","isIntersecting","_this3","rootMargin","StatusIconDefaults","invalid","idle","InputMessage","requestedIcon","setRequestedIcon","hidden","renderIcon","iconFlipRtl","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","propName","matchesType","attributeName","toLowerCase","setAttribute","removeAttribute","hiddenFormInput","isMinMaxStepType","includes","numericInputComponent","isMinMaxLengthType","textualInputComponent","componentLangToMessageBundleCache","getMessageBundle","_getMessageBundle","lang","ok","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","_setUpMessages","fetchMessages","_fetchMessages","tagName","componentName","getSupportedLocale","_updateMessages","onMessagesChange","defaultOnMessagesChange"],"sourceRoot":""}