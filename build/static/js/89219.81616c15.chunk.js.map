{"version":3,"file":"static/js/89219.81616c15.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/composed-offset-position/dist/composed-offset-position.esm.js","../node_modules/@esri/calcite-components/dist/components/src/utils/floating-ui.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/openCloseComponent.ts"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { isContainingBlock } from '@floating-ui/utils/dom';\n\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction offsetTop(element) {\n    return offsetTopLeftPolyfill(element, 'offsetTop');\n}\nfunction offsetLeft(element) {\n    return offsetTopLeftPolyfill(element, 'offsetLeft');\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction ancestorTreeScopes(element) {\n    const scopes = new Set();\n    let currentScope = element.getRootNode();\n    while (currentScope) {\n        scopes.add(currentScope);\n        currentScope = currentScope.parentNode\n            ? currentScope.parentNode.getRootNode()\n            : null;\n    }\n    return scopes;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree, so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || isContainingBlock(style)) {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\nfunction offsetTopLeftPolyfill(element, offsetTopOrLeft) {\n    let value = element[offsetTopOrLeft];\n    let nextOffsetParent = offsetParentPolyfill(element);\n    const scopes = ancestorTreeScopes(element);\n    while (nextOffsetParent && !scopes.has(nextOffsetParent.getRootNode())) {\n        value -= nextOffsetParent[offsetTopOrLeft];\n        nextOffsetParent = offsetParentPolyfill(nextOffsetParent);\n    }\n    return value;\n}\n\nexport { offsetLeft, offsetParent, offsetTop };\n","import {\n  arrow,\n  autoPlacement,\n  autoUpdate,\n  computePosition,\n  flip,\n  hide,\n  Middleware,\n  offset,\n  Placement,\n  platform,\n  shift,\n  Side,\n  Strategy,\n  VirtualElement,\n} from \"@floating-ui/dom\";\nimport { debounce, DebouncedFunc } from \"lodash-es\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { Layout } from \"../components/interfaces\";\nimport { DEBOUNCE } from \"./resources\";\nimport { getElementDir } from \"./dom\";\nimport { isBrowser } from \"./browser\";\n\n(function setUpFloatingUiForShadowDomPositioning(): void {\n  if (isBrowser()) {\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element: Element) => originalGetOffsetParent(element, offsetParent);\n  }\n})();\n\nfunction roundByDPR(value: number): number {\n  const dpr = window.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nexport const positionFloatingUI =\n  /* we export arrow function to allow us to spy on it during testing */\n  async (\n    component: FloatingUIComponent,\n    {\n      referenceEl,\n      floatingEl,\n      overlayPositioning = \"absolute\",\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type,\n    }: {\n      referenceEl: ReferenceElement;\n      floatingEl: HTMLElement;\n      overlayPositioning: Strategy;\n      placement: LogicalPlacement;\n      flipDisabled?: boolean;\n      flipPlacements?: FlipPlacement[];\n      offsetDistance?: number;\n      offsetSkidding?: number;\n      arrowEl?: SVGElement;\n      type: UIType;\n    },\n  ): Promise<void> => {\n    if (!referenceEl || !floatingEl) {\n      return null;\n    }\n\n    const {\n      x,\n      y,\n      placement: effectivePlacement,\n      strategy: position,\n      middlewareData,\n    } = await computePosition(referenceEl, floatingEl, {\n      strategy: overlayPositioning,\n      placement:\n        placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n          ? undefined\n          : getEffectivePlacement(floatingEl, placement),\n      middleware: getMiddleware({\n        placement,\n        flipDisabled,\n        flipPlacements: flipPlacements?.map((placement) => getEffectivePlacement(floatingEl, placement)),\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type,\n      }),\n    });\n\n    if (arrowEl && middlewareData.arrow) {\n      const { x, y } = middlewareData.arrow;\n      const side = effectivePlacement.split(\"-\")[0] as Side;\n      const alignment = x != null ? \"left\" : \"top\";\n      const transform = ARROW_CSS_TRANSFORM[side];\n      const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n\n      if (\"floatingLayout\" in component) {\n        component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n      }\n\n      Object.assign(arrowEl.style, {\n        ...reset,\n        [alignment]: `${alignment == \"left\" ? x : y}px`,\n        [side]: \"100%\",\n        transform,\n      });\n    }\n\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n\n    const { open } = component;\n\n    Object.assign(floatingEl.style, {\n      visibility,\n      pointerEvents,\n      position,\n      transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n      top: 0,\n      left: 0,\n    });\n  };\n\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n\nexport type ReferenceElement = VirtualElement | Element;\n\ntype UIType = \"menu\" | \"tooltip\" | \"popover\";\nexport type OverlayPositioning = Strategy;\n\n/**\n * Variation Placements change based on element direction.\n *\n * These variation placements will automatically flip \"left\"/\"right\" depending on LTR/RTL direction.\n *\n * Floating-ui has no plans to offer this functionality out of the box at this time.\n *\n * see: https://github.com/floating-ui/floating-ui/issues/1563 and https://github.com/floating-ui/floating-ui/discussions/1549\n */\n\nexport type EffectivePlacement = Placement;\n\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\",\n] as const;\n\nexport type LogicalPlacement = (typeof placements)[number];\n\nexport const effectivePlacements: EffectivePlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n];\n\nexport const menuPlacements: MenuPlacement[] = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\n\nexport const menuEffectivePlacements: EffectivePlacement[] = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\",\n];\n\nexport type FlipPlacement = Exclude<LogicalPlacement, \"auto\" | \"auto-start\" | \"auto-end\">;\n\nexport const flipPlacements: FlipPlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\",\n];\n\nexport type MenuPlacement = Extract<\n  LogicalPlacement,\n  \"top-start\" | \"top\" | \"top-end\" | \"bottom-start\" | \"bottom\" | \"bottom-end\"\n>;\n\nexport const defaultMenuPlacement: MenuPlacement = \"bottom-start\";\n\nexport interface FloatingUIComponent {\n  /**\n   * Whether the component is opened.\n   */\n  open: boolean;\n\n  /**\n   * Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value.\n   */\n  overlayPositioning: OverlayPositioning;\n\n  /**\n   * Determines where the component will be positioned relative to the referenceElement.\n   *\n   * Possible values: \"auto\", \"auto-start\", \"auto-end\", \"top\", \"right\", \"bottom\", \"left\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"bottom-start\", \"bottom-end\", \"left-start\", \"left-end\", \"leading-start\", \"leading\", \"leading-end\", \"trailing-end\", \"trailing\",  or \"trailing-start\".\n   *\n   */\n  placement: LogicalPlacement;\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed – (internal) when true, it will reposition the component after a delay. the default is false. This is useful for components that have multiple watched properties that schedule repositioning.\n   */\n  reposition: (delayed?: boolean) => Promise<void>;\n\n  /**\n   * Used to store the effective floating layout for components that use arrows.\n   *\n   * This is an internal property and should:\n   *\n   * - only be used for components that support arrows\n   * - use the `@State` decorator\n   * - be initialized to \"vertical\"\n   *\n   * Possible values: \"vertical\" or \"horizontal\".\n   *\n   * See [FloatingArrow](https://github.com/Esri/calcite-design-system/blob/dev/src/components/functional/FloatingArrow.tsx)\n   */\n  floatingLayout?: FloatingLayout;\n}\n\nexport type FloatingLayout = Extract<Layout, \"vertical\" | \"horizontal\">;\n\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\",\n};\n\nfunction getMiddleware({\n  placement,\n  flipDisabled,\n  flipPlacements,\n  offsetDistance,\n  offsetSkidding,\n  arrowEl,\n  type,\n}: {\n  placement: LogicalPlacement;\n  flipDisabled?: boolean;\n  flipPlacements?: EffectivePlacement[];\n  offsetDistance?: number;\n  offsetSkidding?: number;\n  arrowEl?: SVGElement;\n  type: UIType;\n}): Middleware[] {\n  const defaultMiddleware = [shift(), hide()];\n\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n      }),\n    ];\n  }\n\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware: Middleware[] = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n      }),\n    ];\n\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(\n        autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }),\n      );\n    } else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n\n    if (arrowEl) {\n      middleware.push(\n        arrow({\n          element: arrowEl,\n        }),\n      );\n    }\n\n    return middleware;\n  }\n\n  return [];\n}\n\nexport function filterValidFlipPlacements(placements: string[], el: HTMLElement): EffectivePlacement[] {\n  const filteredPlacements = placements.filter((placement: EffectivePlacement) =>\n    flipPlacements.includes(placement),\n  ) as EffectivePlacement[];\n\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(\n      `${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements\n        .map((placement) => `\"${placement}\"`)\n        .join(\", \")\n        .trim()}`,\n      { el },\n    );\n  }\n\n  return filteredPlacements;\n}\n\nexport function getEffectivePlacement(floatingEl: HTMLElement, placement: LogicalPlacement): EffectivePlacement {\n  const placements = [\"left\", \"right\"];\n\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]) as EffectivePlacement;\n}\n\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nexport async function reposition(\n  component: FloatingUIComponent,\n  options: Parameters<typeof positionFloatingUI>[1],\n  delayed = false,\n): Promise<void> {\n  if (!component.open || !options.floatingEl || !options.referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (!trackedState) {\n    return runAutoUpdate(component, options.referenceEl, options.floatingEl);\n  }\n\n  const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n\n  await positionFunction(component, options);\n}\n\nfunction getDebouncedReposition(component: FloatingUIComponent): DebouncedFunc<typeof positionFloatingUI> {\n  let debounced = componentToDebouncedRepositionMap.get(component);\n\n  if (debounced) {\n    return debounced;\n  }\n\n  debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n    leading: true,\n    maxWait: DEBOUNCE.reposition,\n  });\n\n  componentToDebouncedRepositionMap.set(component, debounced);\n\n  return debounced;\n}\n\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\",\n};\n\ntype PendingFloatingUIState = {\n  state: \"pending\";\n};\n\ntype ActiveFloatingUIState = {\n  state: \"active\";\n  cleanUp: () => void;\n};\n\ntype TrackedFloatingUIState = PendingFloatingUIState | ActiveFloatingUIState;\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const autoUpdatingComponentMap = new WeakMap<FloatingUIComponent, TrackedFloatingUIState>();\n\nconst componentToDebouncedRepositionMap = new WeakMap<FloatingUIComponent, DebouncedFunc<typeof positionFloatingUI>>();\n\nasync function runAutoUpdate(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl.isConnected) {\n    return;\n  }\n\n  const effectiveAutoUpdate = isBrowser()\n    ? autoUpdate\n    : (_refEl: HTMLElement, _floatingEl: HTMLElement, updateCallback: () => void): (() => void) => {\n        updateCallback();\n        return () => {\n          /* noop */\n        };\n      };\n\n  // we set initial state here to make it available for `reposition` calls\n  autoUpdatingComponentMap.set(component, { state: \"pending\" });\n\n  let repositionPromise: Promise<void>;\n\n  const cleanUp = effectiveAutoUpdate(\n    referenceEl,\n    floatingEl,\n    // callback is invoked immediately\n    () => {\n      const promise = component.reposition();\n\n      if (!repositionPromise) {\n        repositionPromise = promise;\n      }\n    },\n  );\n\n  autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n\n  return repositionPromise;\n}\n\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport async function connectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: component.overlayPositioning,\n  });\n\n  if (!component.open) {\n    return;\n  }\n\n  return runAutoUpdate(component, referenceEl, floatingEl);\n}\n\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport function disconnectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): void {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (trackedState?.state === \"active\") {\n    trackedState.cleanUp();\n  }\n\n  autoUpdatingComponentMap.delete(component);\n\n  componentToDebouncedRepositionMap.get(component)?.cancel();\n  componentToDebouncedRepositionMap.delete(component);\n}\n\nconst visiblePointerSize = 4;\n\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n"],"names":["global","Object","freeSelf","self","freeGlobal","Function","root","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isSymbol","reWhitespace","reTrimStart","baseTrim","string","slice","index","length","test","charAt","trimmedEndIndex","replace","isObject","type","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","Date","now","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","sides","alignments","placements","reduce","acc","side","concat","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getOppositeAxisPlacements","flipAlignment","direction","list","isStart","lr","rl","getSideList","map","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","coords","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","computePosition","config","_config$placement","strategy","middleware","platform","validMiddleware","filter","Boolean","_context","isRTL","getElementRects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","i","_validMiddleware$i","name","fn","initialPlacement","elements","_yield$fn","nextX","nextY","data","reset","_computeCoordsFromPla2","computePosition$1","detectOverflow","_detectOverflow","state","_evaluate8","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","_context12","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","getPlacementList","autoAlignment","allowedPlacements","getSideOffsets","overflow","isAnySideFullyClipped","some","convertValueToCoords","_convertValueToCoords","_context13","mainAxisMulti","crossAxisMulti","rawValue","_ref11","mainAxis","crossAxis","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","getComputedStyle","overflowX","overflowY","display","isTableElement","isTopLayer","selector","matches","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","parent","getPrototypeOf","getFrameElement","visualViewport","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","getOffsetParentFn","getDimensionsFn","getDimensions","_context10","floatingDimensions","topLayer","elementClippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getClientRects","Array","from","autoUpdate","update","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","IntersectionObserver","_options$animationFra","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","frameId","cleanupIo","onMove","timeoutId","io","cleanup","_io","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","observe","entries","ratio","intersectionRatio","observeMove","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","_context7","diffCoords","_middlewareData$offse","_middlewareData$arrow","arrow","alignmentOffset","autoPlacement","_evaluate","detectOverflowOptions","placements$1","_context3","currentIndex","_middlewareData$autoP","currentPlacement","alignmentSides","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByMostSpace","d","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","_placementsThatFitOnE","shift","_evaluate5","checkMainAxis","checkCrossAxis","limiter","_context8","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","flip","_evaluate2","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","_context4","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$filter","_overflowsData$map$so","hide","_evaluate3","_context5","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","_ref3","_context2","arrowDimensions","minProp","isYAxis","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","Map","mergedOptions","platformWithCache","flatTreeParent","style","tagName","offsetParentPolyfill","roundByDPR","dpr","devicePixelRatio","isBrowser","originalGetOffsetParent","positionFloatingUI","component","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","_context11","getEffectivePlacement","getMiddleware","_yield$computePositio","effectivePlacement","_middlewareData$arrow2","ARROW_CSS_TRANSFORM","floatingLayout","assign","_middlewareData$hide","pointerEvents","visibility","setAttribute","placementDataAttribute","open","defaultMenuPlacement","FloatingCSS","animation","animationActive","defaultMiddleware","filterValidFlipPlacements","filteredPlacements","console","warn","join","trim","getElementDir","reverse","reposition","_reposition","positionFunction","_args14","delayed","_context14","autoUpdatingComponentMap","runAutoUpdate","getDebouncedReposition","componentToDebouncedRepositionMap","DEBOUNCE","WeakMap","_runAutoUpdate","isConnected","_context15","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","cleanUp","promise","repositionPromise","connectFloatingUI","_connectFloatingUI","_context16","disconnectFloatingUI","trackedState","delete","_componentToDebounced","defaultOffsetDistance","ceil","hypot","internalReadTask","readTask","isOpen","opened","onToggleOpenCloseComponent","transitionEl","whenTransitionDone","openTransitionProp","onBeforeOpen","onBeforeClose","onOpen","onClose"],"sourceRoot":""}