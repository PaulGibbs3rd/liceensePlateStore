{"version":3,"file":"static/js/77031.6889cabf.chunk.js","mappings":"8TAeMA,G,UAAgCC,EAAAA,EAAAA,GAAwBC,EAAAA,KACxDC,EAAuB,WACzB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACjBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,aAAcC,EAAAA,EAAAA,GAAYF,KAAM,cAAe,GACpDA,KAAKG,8BAA+BD,EAAAA,EAAAA,GAAYF,KAAM,+BAAgC,GACtFA,KAAKI,SAAUC,EAAAA,EAAAA,GAAqBL,MACpCA,KAAKM,eAAgBC,EAAAA,EAAAA,GAAKC,EAAAA,GAC1BR,KAAKS,UAAYhB,EAA8BO,MAC/CA,KAAKU,SAAWV,KAAKI,QAAQO,UAASC,EAAAA,EAAAA,GAAO,CAAEC,UAAU,KACzDb,KAAKc,sBAAuB,EAC5Bd,KAAKe,qBAAsB,EAC3Bf,KAAKgB,UAAW,EAChBhB,KAAKiB,UAAOC,EACZlB,KAAKmB,WAAQD,EACblB,KAAKoB,UAAOF,EACZlB,KAAKqB,SAAW,EAChBrB,KAAKsB,SAAW,YAChBtB,KAAKuB,sBAAmBL,EACxBlB,KAAKwB,MAAQxB,KAAKS,UAAUe,MAC5BxB,KAAKyB,iBAAmBzB,KAAKS,UAAUgB,iBACvCzB,KAAK0B,KAAO1B,KAAKS,UAAUiB,IAC/B,CAkR8C,OA7Q9CC,EAAAA,EAAAA,GAAA/B,EAAA,EAAAgC,IAAA,oBAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,YAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACYL,EAAUnC,KAAKM,cAAf6B,MACRnC,KAAKI,QAAQqC,aAAY,iBAAM,CAC3BN,GAAM,kBAAMC,EAAK3B,UAAUe,KAAK,IAAE,SAACA,GAC/B,IAAQkB,EAAgBN,EAAhBM,YACFC,EAA+B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaE,qBAAqB,gDAAgD,GACtGC,EAAyB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaE,qBAAqB,0CAA0C,GAChG,GAAc,aAAVpB,EAOA,OANImB,GACAP,EAAKU,iCAAiCJ,QAEtCG,GACAT,EAAKW,2BAA2BL,IAIpCG,IACAA,EAAYG,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BJ,EAAYG,yBAAuB,IACtCE,eAAgBd,EAAK3B,UAAUyC,iBAEnCL,EAAYG,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BJ,EAAYG,yBAAuB,IACtCxB,MAAAA,KAGJmB,IACAA,EAAkBQ,+BAA6BF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxCN,EAAkBQ,+BAA6B,IAClD3B,MAAAA,IAGZ,IACH,IAAE,wBAAAc,EAAAc,OAAA,GAAAlB,EAAA,UACN,yBAAAJ,EAAAuB,MAAA,KAAAC,UAAA,EAnCD,IAoCA,CAAA1B,IAAA,UAAAC,MAAA,eAAA0B,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACA,SAAAuB,IAAA,OAAAxB,EAAAA,EAAAA,KAAAK,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACUxC,KAAKI,QAAQsD,UAAS,wBAAAD,EAAAL,OAAA,GAAAI,EAAA,UAC/B,yBAAAD,EAAAF,MAAA,KAAAC,UAAA,EAHD,IAGC,CAAA1B,IAAA,SAAAC,MACD,WAAS,IAAA8B,EAAA,KACG7C,EAAwHd,KAAxHc,qBAAsBE,EAAkGhB,KAAlGgB,SAAU0B,EAAwF1C,KAAxF0C,YAAavB,EAA2EnB,KAA3EmB,MAAOT,EAAoEV,KAApEU,SAAUW,EAA0DrB,KAA1DqB,SAAUZ,EAAgDT,KAAhDS,UAASmD,EAAuC5D,KAArCS,UAAaoD,EAASD,EAATC,UAAWrC,EAAKoC,EAALpC,MAC7GsC,EAAoBC,MAAMC,KAAKvD,EAAUwD,mBAAmB,SAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAW,MAAO,CAAEG,IAAfF,EAAA,GAAoBG,KAAdH,EAAA,GAAoB,IAC3FI,EAAyB,aAAV/C,GAAwBgD,EAAAA,EAAAA,GAAEC,EAAAA,EAAU,KAAMX,EAAkBY,KAAI,SAACC,GAAY,IAAAC,EAAAC,EAAAC,EACxFC,EAA0B,CAC5BC,cAAelE,EACfE,SAAAA,EACAiE,YAAaxE,EAAUyE,WAAWC,IAAIR,EAAQN,KAC9Ce,yBAA0B3E,EAAU4E,sBAAsBF,IAAIR,EAAQN,KAAKiB,mBACtEC,kBACLrC,oBAAgBhC,EAChBwB,YAAaA,EACb8C,iBAAkB/E,EAAUgF,uCAAuCN,IAAIR,EAAQN,KAC/EqB,QAASvE,EACTwE,0BAAyE,QAA/Cf,EAACnE,EAAUmF,oBAAoBT,IAAIR,EAAQN,YAAI,IAAAO,EAAAA,EAAI,IAAM,KACnFvD,SAAAA,EACAwE,YAAalB,EAAQL,KACrB9C,MAAAA,EACAsE,WAAYnB,EAAQN,IACpB0B,QAASrF,EACTsF,aAA4E,QAAhEnB,EAAkD,QAAlDC,EAAErE,EAAU4E,sBAAsBF,IAAIR,EAAQN,YAAI,IAAAS,OAAA,EAAhDA,EAAkDkB,oBAAY,IAAAnB,EAAAA,EAAI,IAEpF,OAAQL,EAAAA,EAAAA,GAAE,yCAA0C,CAAEO,wBAAyBA,EAAyBkB,oBAAqB,WAAF,IAAAC,GAAAnE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkE,EAAOC,GAAK,OAAApE,EAAAA,EAAAA,KAAAK,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAC3HmB,EAAK2C,oBAAoBF,EAAMG,OAAOT,YAAW,wBAAAO,EAAAjD,OAAA,GAAA+C,EAAA,KAC1D,gBAAAK,GAAA,OAAAN,EAAA7C,MAAA,KAAAC,UAAA,EAFwH,GAEtHmD,qBAAsB,WACrB9C,EAAKZ,2BAA2BL,EACpC,EAAGgE,sBAAuB,WACtB/C,EAAKgD,sBACT,EAAGC,sBAAuB,SAACR,GACvBzC,EAAKkD,2BAA2BT,EAAO1D,EAC3C,EAAGoE,mBAAoB,SAACV,GACpB,IAAMW,EAAwBpD,EAAKqD,iCAAiCZ,EAAMG,OAAOT,gBAAY5E,GAClF,OAAXwB,QAAW,IAAXA,GAAAA,EAAauE,YAAYF,EAC7B,GACR,UAAO7F,EACDgG,EAAmB,aAAV1F,GAAwBgD,EAAAA,EAAAA,GAAE,iBAAkB,CAAE2C,MAAO,SAAUnG,UAAU,EAAOoG,KAAM,UAAWC,MAAM,EAAMC,MAAO,IAAKC,KAAM,SAAUC,MAAO,SAAUhD,EAAAA,EAAAA,GAAE,MAAO,CAAE+C,KAAM,WAAavH,KAAKyH,cAAc5D,UAAgB3C,EAC1O,OAAQsD,EAAAA,EAAAA,GAAE,eAAgB,CAAEkD,IAAK,SAACC,GAC1BhE,EAAKjB,YAAciF,CACvB,EAAGR,MAAqB,WAAdnH,KAAKoB,KAAoB,GAAK,wBAAyBoD,EAAAA,EAAAA,GAAE,oBAAqB,CAAExD,SAAUhB,KAAKgB,SAAU0E,QAASvE,EAAOyG,uBAAwB,WACvJjE,EAAKgD,sBACT,IAAKnC,EAAAA,EAAAA,GAAE,gBAAiB,CAAEqD,QAAmB,YAAVrG,GAAiC,cAAVA,GAAyB+C,EAAc2C,IACzG,GAKA,CAAAtF,IAAA,mCAAAC,MACA,SAAiCiE,EAAYgC,GAAa,IAAAC,EAAA,KAC9C/G,EAA4DhB,KAA5DgB,SAAU0B,EAAkD1C,KAAlD0C,YAAajC,EAAqCT,KAArCS,UAAwBe,EAAaxB,KAA1BS,UAAae,MACjDmB,EAAoBqF,SAASC,cAAc,gDAsEjD,OArEAtF,EAAkBQ,8BAAgC,CAC9CnC,SAAAA,EACAiE,YAAaxE,EAAUyE,WAAWC,IAAIW,GACtCN,iBAAkB/E,EAAUgF,uCAAuCN,IAAIW,GACvEA,WAAAA,EACAtE,MAAAA,EACAuE,QAAS/F,KAAKU,SACdoH,YAAAA,GAEJnF,EAAkBuF,iBAAiB,uBAAuB,SAAC9B,GACvD,IAAA+B,EAAqD/B,EAAMG,OAAnD6B,EAAuBD,EAAvBC,wBAAyBC,EAAeF,EAAfE,gBACjC5H,EACK6H,cAAcF,GACdG,KAAI,eAAAC,GAAAzG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAwG,EAAOC,GAAmB,OAAA1G,EAAAA,EAAAA,KAAAK,MAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,OAO/B,GANGkG,GACAX,EAAK5H,6BAA6ByI,KAAK,CACnCC,KAAM,kBACNtD,kBAAmBmD,EAAoBnD,kBACvCuD,gBAAiBrI,EAAU4E,sBAAsBF,IAAIW,MAGzDuC,EAAiB,CAAFM,EAAAnG,KAAA,eAAAmG,EAAAnG,KAAA,EACTuF,EAAKtH,UACNsI,cAAcjD,EAAY4C,EAAoBnD,kBAAkBjB,KAAMoE,EAAoBnD,kBAAkByD,MAC5GT,MAAK,SAACU,GACHA,GACAlB,EAAK5H,6BAA6ByI,KAAK,CACnCC,KAAM,mBACNtD,kBAAmBmD,EAAoBnD,kBACvCuD,gBAAiBrI,EAAU4E,sBAAsBF,IAAIW,IAGjE,IAAE,wBAAA6C,EAAAvF,OAAA,GAAAqF,EAAA,KAET,gBAAAS,GAAA,OAAAV,EAAAnF,MAAA,KAAAC,UAAA,EArBQ,IAsBJ6F,SAAOpH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAmH,IAAA,OAAApH,EAAAA,EAAAA,KAAAK,MAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA7G,KAAA,EACHuF,EAAKzB,oBAAoBR,GAAW,OAC1CiC,EAAKjF,iCAAiCJ,GAAa,wBAAA2G,EAAAjG,OAAA,GAAAgG,EAAA,KAE3D,IACAzG,EAAkBuF,iBAAiB,qBAAoB,eAAAoB,GAAAvH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAsH,EAAOnD,GAAK,IAAA1D,EAAA8G,EAAA,OAAAxH,EAAAA,EAAAA,KAAAK,MAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,OAEnC,OADtBE,EAAgBqF,EAAhBrF,YACA8G,EAA2BpD,EAAMG,OAAjCiD,uBAAsBC,EAAAjH,KAAA,EACxB/B,EACDiJ,aAAaF,GACbjB,KAAI,eAAAoB,GAAA5H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA2H,EAAOC,GAAkB,OAAA7H,EAAAA,EAAAA,KAAAK,MAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,OAO9B,OANGqH,GACA9B,EAAK5H,6BAA6ByI,KAAK,CACnCC,KAAM,kBACNtD,kBAAmBiE,EAAuBjE,kBAC1CuD,gBAAiBrI,EAAU4E,sBAAsBF,IAAIW,KAE5DgE,EAAAtH,KAAA,EACKuF,EAAKzB,oBAAoBR,GAAW,wBAAAgE,EAAA1G,OAAA,GAAAwG,EAAA,KAC7C,gBAAAG,GAAA,OAAAJ,EAAAtG,MAAA,KAAAC,UAAA,EATQ,IAUJ6F,SAAQ,WACTpB,EAAKjF,iCAAiCJ,EAC1C,IAAE,wBAAA+G,EAAArG,OAAA,GAAAmG,EAAA,KACL,gBAAAS,GAAA,OAAAV,EAAAjG,MAAA,KAAAC,UAAA,EAlBsD,IAmBvDX,EAAkBuF,iBAAiB,sBAAsB,WACrDH,EAAKjF,iCAAiCiF,EAAKrF,YAC/C,IACAC,EAAkBuF,iBAAiB,uBAAuB,SAAC9B,GACvDA,EAAM6D,iBACNlC,EAAKjF,iCAAiCiF,EAAKrF,YAC/C,IACAC,EAAkBuF,iBAAiB,wBAAwB,WACvDH,EAAKpB,sBACT,IACOhE,CACX,GAAC,CAAAf,IAAA,gBAAAC,MACD,SAAcgC,GACV,IAAQnD,EAAaV,KAAbU,SACR,OAAQmD,GACJ,IAAK,sBACD,OAAOnD,EAASwJ,WAAWC,kBAC/B,IAAK,mBACD,OAAOzJ,EAASwJ,WAAWE,eAC/B,QACI,OAAOvG,EAEnB,GAAC,CAAAjC,IAAA,uBAAAC,MACD,WACI,IAAMwI,EAA6BrC,SAASsC,cAAc,6BACpDC,EAAgBF,EAA2BE,cACpC,OAAbA,QAAa,IAAbA,GAAAA,EAAeC,YAAYH,EAC/B,GAAC,CAAAzI,IAAA,6BAAAC,MAAA,eAAA4I,GAAA1I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAyI,EAAiCC,EAAGjI,GAAW,IAAAkI,EAAAC,EAAA/E,EAAAgC,EAAArH,EAAAsG,EAAA+D,EAAA,YAAA9I,EAAAA,EAAAA,KAAAK,MAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,OAAAoI,EACKD,EAAEpE,OAA1CsE,EAAUD,EAAVC,WAAY/E,EAAU8E,EAAV9E,WAAYgC,EAAW8C,EAAX9C,YACxBrH,EAAcT,KAAdS,UAASsK,EAAAC,GACTH,EAAUE,EAAAvI,KACT,kBADSuI,EAAAC,GACM,EAuBf,kBAvBeD,EAAAC,GAuBA,EAef,gBAfeD,EAAAC,GAeF,kBAlBX,OAnBHvK,EACKsI,cAAcjD,EAAYgC,EAAYvC,kBAAkBjB,KAAMwD,EAAYvC,kBAAkByD,MAC5FT,MAAK,SAACU,GACHA,GACA6B,EAAK3K,6BAA6ByI,KAAK,CACnCC,KAAM,mBACNtD,kBAAmBuC,EAAYvC,kBAC/BuD,gBAAiBrI,EAAU4E,sBAAsBF,IAAIW,KAG7D,IAAMjD,EAAyB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaE,qBAAqB,0CAA0C,GAC5FC,GACIA,IACAA,EAAYG,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BJ,EAAYG,yBAAuB,IACtCoC,yBAA0B3E,EAAU4E,sBAAsBF,IAAIW,GAAYR,mBAAmBC,oBAI7G,IAAGwF,EAAAE,OAAA,mBAeA,OAXHxK,EACKyK,cAAcpF,EAAYgC,EAAYvC,kBAAkBjB,KAAMwD,EAAYvC,kBAAkByD,MAC5FT,KAAI,eAAA4C,GAAApJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAmJ,EAAOC,GAAmB,OAAArJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAO/B,OANG6I,GACAP,EAAK3K,6BAA6ByI,KAAK,CACnCC,KAAM,kBACNtD,kBAAmBuC,EAAYvC,kBAC/BuD,gBAAiBrI,EAAU4E,sBAAsBF,IAAIW,KAE5DwF,EAAA9I,KAAA,EACKsI,EAAKxE,oBAAoBR,GAAW,wBAAAwF,EAAAlI,OAAA,GAAAgI,EAAA,KAC7C,gBAAAG,GAAA,OAAAJ,EAAA9H,MAAA,KAAAC,UAAA,EATQ,IASNyH,EAAAE,OAAA,mBAK4C,OADzClE,EAAwB/G,KAAKgH,iCAAiClB,EAAYgC,GAChFpF,EAAYuE,YAAYF,GAAuBgE,EAAAE,OAAA,qCAAAF,EAAA3H,OAAA,GAAAsH,EAAA,UAI1D,gBAAAc,EAAAC,GAAA,OAAAhB,EAAApH,MAAA,KAAAC,UAAA,EAjDA,IAiDA,CAAA1B,IAAA,sBAAAC,MAAA,eAAA6J,GAAA3J,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA0J,EAA0B7F,GAAU,IAAApD,EAAAjC,EAAAuF,EAAA4F,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhK,EAAAA,EAAAA,KAAAK,MAAA,SAAA4J,GAAA,cAAAA,EAAA1J,KAAA0J,EAAAzJ,MAAA,OACF,GAAtBE,EAA2B1C,KAA3B0C,YAAajC,EAAcT,KAAdS,WACjBiC,EAAa,CAAFuJ,EAAAzJ,KAAA,gBAAAyJ,EAAAzJ,KAAA,EACgB/B,EAAUyL,gBAAgBpG,GAAW,OAA1DE,EAAYiG,EAAAE,KACZP,EAAsBlJ,EAAYE,qBAAqB,0CAAyCiJ,GAAAO,EAAAA,EAAAA,GACrER,GAAmB,IAApD,IAAAC,EAAAQ,MAAAP,EAAAD,EAAAS,KAAAC,OAAWR,EAAkBD,EAAAjK,OACFkD,wBAAwBe,aAAeA,IAC1DiG,EAAmBhH,yBAAuB9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnC8I,EAAmBhH,yBAAuB,IAC7CiB,aAAAA,IAGX,OAAAwG,GAAAX,EAAAlB,EAAA6B,EAAA,SAAAX,EAAAY,GAAA,EACKT,EAAqBtJ,EAAYE,qBAAqB,0CAA0C,MAElGoJ,EAAmBhJ,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnC+I,EAAmBhJ,yBAAuB,IAC7CoC,yBAA0B3E,EAAU4E,sBAAsBF,IAAIW,GAAYR,mBAAmBC,kBAC7FS,aAAAA,KAEP,yBAAAiG,EAAA7I,OAAA,GAAAuI,EAAA,UAER,gBAAAe,GAAA,OAAAhB,EAAArI,MAAA,KAAAC,UAAA,EAvBA,IAuBA,CAAA1B,IAAA,6BAAAC,MACD,SAA2Ba,GAAa,IACUiK,EADVC,GAAAR,EAAAA,EAAAA,GACZ1J,EAAYmK,YAAU,IAA9C,IAAAD,EAAAP,MAAAM,EAAAC,EAAAN,KAAAC,MAAgD,KAArCO,EAASH,EAAA9K,MACyB,2CAArCiL,EAAUC,SAASC,eACnBtK,EAAY8H,YAAYsC,GAEa,sBAArCA,EAAUC,SAASC,gBACnBF,EAAUG,QAAS,EAE3B,CAAC,OAAAT,GAAAI,EAAAjC,EAAA6B,EAAA,SAAAI,EAAAH,GAAA,CACL,GAAC,CAAA7K,IAAA,mCAAAC,MACD,SAAiCa,GAAa,IACIwK,EADJC,GAAAf,EAAAA,EAAAA,GAClB1J,EAAYmK,YAAU,IAA9C,IAAAM,EAAAd,MAAAa,EAAAC,EAAAb,KAAAC,MAAgD,KAArCO,EAASI,EAAArL,MACyB,iDAArCiL,EAAUC,SAASC,eACnBtK,EAAY8H,YAAYsC,GAEa,2CAArCA,EAAUC,SAASC,gBACnBF,EAAUlK,qBAAqB,qBAAqB,GAAGqK,QAAS,EAExE,CAAC,OAAAT,GAAAW,EAAAxC,EAAA6B,EAAA,SAAAW,EAAAV,GAAA,CACL,GAAC,CAAA7K,IAAA,KAAAuD,IAED,WAAW,OAAOiI,EAAAA,EAAAA,GAAWpN,KAAO,IAAC,EAAA4B,IAAA,aAAAuD,IADrC,WAA0B,MAAO,CAAC,SAAW,KAACvF,CAAA,CAvSrB,GA0S7BA,EAAwByN,MA9SK,oG,0ICHzB9M,EAAO,SAAC+M,GAAM,OAAKC,EAAAA,EAAAA,GAAeD,EAAO,EACzCE,EAAoB,SAACC,GAAY,OAAK,eAAAvJ,EAAAZ,UAAAoK,OAAA,QAAAxM,IAAAoC,UAAA,GAAAA,UAAA,GAA8B,CAAC,EAACqK,EAAAzJ,EAA7BrD,SAAAA,OAAQ,IAAA8M,GAAQA,EAAErJ,EAAIJ,EAAJI,KAAI,OAEjEiJ,EAAAA,EAAAA,IAAe,SAACK,EAAWC,GAezB,GAdAA,EAAWpL,aACT,kBAAMqL,EAAAA,EAAAA,GACJF,EAAUG,GACVN,EAAa,aACb,SAAAtJ,GAAqC,IAAA6J,EAAlCC,EAAS9J,EAAT8J,UAAWC,EAAU/J,EAAV+J,WAAYC,EAAIhK,EAAJgK,KACxBN,EAAWO,SAAOnL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiL,GAAU,IAAEG,MAAOF,EAAMG,WAAYL,IAC/D,IACkFM,EAD5EpN,EAAiC,QAA5B6M,EAAGE,EAAWM,sBAAc,IAAAR,EAAAA,EAAIE,EAAWO,YACjC,kBAAVtN,GAAsB,UAAWyM,GAAgC,MAAnBA,EAAUzM,QAClD,QAAfoN,EAAAX,EAAUzM,aAAK,IAAAoN,IAAKX,EAAUzM,MAAQA,GAE1C,GACAmD,EACD,IAECzD,EACF,OAAOgN,EAAWa,MAEpB,IAAMC,GAASC,EAAAA,EAAAA,GAAkBhB,EAAUG,IAC3C,MAAO,CAAEM,MAAOM,EAAOR,KAAMG,WAAYK,EAAOV,UAClD,GAAE,CACH,EAGGY,EAAoB,SAACC,GAAU,OAAKC,CAAwB,EAC5DC,EAAY,uBACZD,EAA2B,WAAH,QAAAE,EAAA3L,UAAAoK,OAAOwB,EAAO,IAAAnL,MAAAkL,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,GAAA7L,UAAA6L,GAAA,OAAK5B,EAAAA,EAAAA,IAAe,SAACK,EAAWC,GACxE,IAAMuB,EAAmBxB,EACrBA,EAAUxN,QAAQiP,QACpBD,EAAiBJ,GAAa,CAC5BpG,KAAM,SAAC0G,GACL,IAAMlJ,EAAQ,IAAImJ,YAAYP,EAAW,CAAEzI,OAAQ+I,EAASE,YAAY,IAExE,OADA5B,EAAUG,GAAG0B,cAAcrJ,GACpBA,CACT,IAGJ,IAAMsJ,EAAeN,EAAiBJ,GAWtC,OAVAnB,EAAW8B,QACT,kBAAM9B,EAAWpL,aACf,kBAAMyM,EAAQxK,KACZ,SAACJ,GAAI,OAEHsJ,EAAUxN,QAAQ+B,MAAMmC,GAAM,kBAAMoL,EAAa9G,KAAK,CAAEtE,KAAAA,GAAO,GAAC,GAEnE,GACF,IAEIoL,CACT,GAAE,C,kOCvCIhQ,EAA0B,SAACkQ,EAAeC,GAAQ,OAAK,SAACjC,EAAWkC,GAAO,OAAKC,EAAMnC,EAAWgC,EAAeE,EAAQ,GAEvHE,EAAmB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAlQ,EAAAA,EAAAA,GAAA,KAAAkQ,GAAAG,EAAA9M,MAAA,KAAAC,UAAA,CAuFpB,OAvFoB3B,EAAAA,EAAAA,GAAAqO,EAAA,EAAApO,IAAA,gBAAAC,MACrB,WACQ7B,KAAK4N,UAAUxN,QAAQiQ,gBACvBC,EAAAA,EAAAA,GAAetQ,KAAK4N,UAE5B,GAAC,CAAAhM,IAAA,WAAAC,MAAA,eAAA0O,GAAAxO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAAAgO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAT,EAAAU,WAAA,iBAAAC,KAAA,iBAEQ3Q,KAAK4N,UAAUxN,QAAQwQ,UAAW,CAAFtO,EAAAE,KAAA,eAAAF,EAAA2I,OAAA,iBAGpCjL,KAAK6Q,uBACLC,EAAAA,EAAAA,qBAAqC9Q,KAAMA,KAAK+Q,UAAW/Q,KAAKM,cAAe,aAAa,wBAAAgC,EAAAc,OAAA,GAAAlB,EAAA,UAC/F,yBAAAqO,EAAAlN,MAAA,KAAAC,UAAA,EARA,IAQA,CAAA1B,IAAA,aAAAC,MACD,WAAa,IAAAqC,EAAA8M,EAAAC,EAAA7O,EAAA,KACD2L,EAAO/N,KAAK4N,UAAZG,GACFjB,EAAoE,QAA3D5I,EAAmC,QAAnC8M,EAAgB,QAAhBC,EAAGlD,EAAGmD,kBAAU,IAAAD,OAAA,EAAbA,EAAeE,yBAAiB,IAAAH,EAAAA,EAAIjD,EAAGoD,yBAAiB,IAAAjN,EAAAA,OAAIhD,EAQ9E6M,EAAGqD,UAAqB,OAATtE,QAAS,IAATA,EAAAA,EAAaiB,EAAGqD,UAC3BrD,EAAGqD,UAGP,IAAIC,GAAqB,EAEnBC,EAActR,KAAK4N,UAAUG,GAAGrM,KAEtC6P,OAAOC,eAAexR,KAAK4N,UAAUG,GAAI,OAAQ,CAC7C5I,IAAK,kBAAM/C,EAAK2O,UAAUrP,IAAI,EAC9B+P,IAAK,SAAC/P,GACFU,EAAK2O,UAAUrP,KAAOA,EACtBU,EAAKsP,oBACLtP,EAAKwL,UAAU+D,gBACVN,IACDA,GAAqB,EACrBjP,EAAKwL,UAAU3N,YAAY2I,OAEnC,EACAgJ,cAAc,EACdC,YAAY,IAEZP,IACAtR,KAAK+Q,UAAUrP,KAAO4P,GAEtBtR,KAAK4N,UAAUG,GAAG+D,eAClBxB,EAAAA,EAAAA,GAAetQ,KAAK4N,WACpB5N,KAAK0R,oBAEb,GAAC,CAAA9P,IAAA,mBAAAC,MACD,WAEyD,IAAAkQ,EAAAC,EAAV,kBAAhChS,KAAK4N,UAAUG,GAAGqD,YACH,QAAtBW,EAAA/R,KAAK4N,UAAUG,GAAGrM,YAAI,IAAAqQ,GAAI,QAAJC,EAAtBD,EAAwBE,UAAE,IAAAD,GAA1BA,EAA4BE,OAAOlS,KAAK4N,UAAUG,GAAGqD,WAE7D,GAAC,CAAAxP,IAAA,cAAAC,MACD,WAAc,IAAAsQ,GACV3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAT,EAAAU,WAAA,oBAAAC,KAAA,MAC4B,QAA5BwB,EAAAnS,KAAKoS,+BAAuB,IAAAD,GAA5BA,EAA8BD,QAClC,GAAC,CAAAtQ,IAAA,uBAAAC,MACD,WAAuB,IAAA8B,EAAA,KACnB3D,KAAKmC,MAAM,YAAY,SAACb,GACe,MAA/BqC,EAAKiK,UAAUG,GAAGqD,WAAyC,kBAAb9P,IAC9CgP,EAAAA,EAAAA,GAAe3M,EAAKiK,UAE5B,IACA5N,KAAKmC,MAAM,oBAAoB,kBAAMmO,EAAAA,EAAAA,GAAe3M,EAAKiK,UAAU,GACvE,GACA,CAAAhM,IAAA,oBAAAC,MAYA,WAAoB,IAAAwQ,EAAAtK,EAAA,KACY,QAA5BsK,EAAArS,KAAKoS,+BAAuB,IAAAC,GAA5BA,EAA8BH,SAC9BlS,KAAKoS,wBAA0BpS,KAAKM,cAAcgS,MAAK,eAAAC,EAAA,OAA4C,KAAhB,QAAtBA,EAAAxK,EAAK6F,UAAUG,GAAGrM,YAAI,IAAA6Q,OAAA,EAAtBA,EAAwB3B,UAAkB,IAAE,WAAW7I,EAAK6F,UAAUlK,UAAU8O,MAAMC,QAAQC,MAAM,GAAE,CAAEC,MAAM,GAC/K,KAAC3C,CAAA,CAvFoB,CAAS4C,EAAAA,GAyF5B7C,GAAQ8C,EAAAA,EAAAA,GAAa7C,GAErBpP,GAAS4M,EAAAA,EAAAA,GAAkBC,EAAAA,E","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-version-management.entry.js","../node_modules/@arcgis/map-components/dist/esm/chunk-PVEVZB4O-2c3b8893.js","../node_modules/@arcgis/map-components/dist/esm/useT9n-e78c8d12.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, h, F as Fragment, g as getElement } from './index-7d33cc26.js';\nimport { l as load } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { u as useControllerManager } from './index-c99fc80c.js';\nimport { i as importCoreReactiveUtils, ag as newWidgetsVersionManagementVersionManagementViewModel } from './index-d2df902e.js';\nimport { u as useT9n, m as makeViewModelController } from './useT9n-e78c8d12.js';\nimport './component-utils-de9339fe.js';\n\nconst versionManagementCss = \".calcite-flow-widget{width:350px}calcite-block{margin:0}calcite-pagination{justify-content:center}\";\nconst ArcgisVersionManagementStyle0 = versionManagementCss;\n\nconst useVersionManagementViewModel = makeViewModelController(newWidgetsVersionManagementVersionManagementViewModel);\nconst ArcgisVersionManagement = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisReady = createEvent(this, \"arcgisReady\", 7);\n        this.arcgisVersioningStateChanged = createEvent(this, \"arcgisVersioningStateChanged\", 7);\n        this.manager = useControllerManager(this);\n        this.reactiveUtils = load(importCoreReactiveUtils);\n        this.viewModel = useVersionManagementViewModel(this);\n        this.messages = this.manager.readonly(useT9n({ blocking: true }));\n        this.allowEditingDisabled = false;\n        this.autoDestroyDisabled = false;\n        this.closable = false;\n        this.icon = undefined;\n        this.label = undefined;\n        this.mode = undefined;\n        this.pageSize = 5;\n        this.position = \"top-right\";\n        this.referenceElement = undefined;\n        this.state = this.viewModel.state;\n        this.versioningStates = this.viewModel.versioningStates;\n        this.view = this.viewModel.view;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    async componentWillLoad() {\n        const { watch } = this.reactiveUtils;\n        this.manager.onLifecycle(() => [\n            watch(() => this.viewModel.state, (state) => {\n                const { flowElement } = this;\n                const versionProperties = flowElement?.getElementsByTagName(\"arcgis-version-management-version-properties\")[0];\n                const versionList = flowElement?.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n                if (state === \"disabled\") {\n                    if (versionProperties) {\n                        this._removeVersionPropertiesFlowItem(flowElement);\n                    }\n                    if (versionList) {\n                        this._removeVersionListFlowItem(flowElement);\n                    }\n                    return;\n                }\n                if (versionList) {\n                    versionList.versionListElementProps = {\n                        ...versionList.versionListElementProps,\n                        executionError: this.viewModel.executionError,\n                    };\n                    versionList.versionListElementProps = {\n                        ...versionList.versionListElementProps,\n                        state,\n                    };\n                }\n                if (versionProperties) {\n                    versionProperties.versionPropertiesElementProps = {\n                        ...versionProperties.versionPropertiesElementProps,\n                        state,\n                    };\n                }\n            }),\n        ]);\n    }\n    /** Permanently destroy the component */\n    async destroy() {\n        await this.manager.destroy();\n    }\n    render() {\n        const { allowEditingDisabled, closable, flowElement, label, messages, pageSize, viewModel, viewModel: { loadError, state }, } = this;\n        const arrayServiceNames = Array.from(viewModel.serviceNameLookup, ([url, name]) => ({ url, name }));\n        const serviceItems = state !== \"disabled\" ? (h(Fragment, null, arrayServiceNames.map((service) => {\n            const serviceItemElementProps = {\n                allowEditing: !allowEditingDisabled,\n                closable,\n                currentUser: viewModel.userLookup.get(service.url),\n                currentVersionIdentifier: viewModel.versioningStateLookup.get(service.url).currentVersionInfo\n                    .versionIdentifier,\n                executionError: undefined,\n                flowElement: flowElement,\n                hasAdvEditingUte: viewModel.advancedEditingUserTypeExtensionLookup.get(service.url),\n                heading: label,\n                isVersioningApiAvailable: (viewModel.serverVersionLookup.get(service.url) ?? 0) >= 11.2,\n                pageSize,\n                serviceName: service.name,\n                state,\n                serviceUrl: service.url,\n                strings: messages,\n                versionInfos: viewModel.versioningStateLookup.get(service.url)?.versionInfos ?? [],\n            };\n            return (h(\"arcgis-version-management-service-item\", { serviceItemElementProps: serviceItemElementProps, onArcgisGetVersions: async (event) => {\n                    await this._refreshVersionList(event.detail.serviceUrl);\n                }, onArcgisFlowItemBack: () => {\n                    this._removeVersionListFlowItem(flowElement);\n                }, onArcgisFlowItemClose: () => {\n                    this._handleFlowItemClose();\n                }, onArcgisManageVersion: (event) => {\n                    this._handleManageVersionAction(event, flowElement);\n                }, onArcgisNewVersion: (event) => {\n                    const versionPropertiesFlow = this._createVersionPropertiesFlowItem(event.detail.serviceUrl, undefined);\n                    flowElement?.appendChild(versionPropertiesFlow);\n                } }));\n        }))) : undefined;\n        const notice = state === \"disabled\" ? (h(\"calcite-notice\", { class: \"notice\", closable: false, kind: \"warning\", open: true, scale: \"s\", slot: \"footer\", width: \"full\" }, h(\"div\", { slot: \"message\" }, this._getLoadError(loadError)))) : undefined;\n        return (h(\"calcite-flow\", { ref: (node) => {\n                this.flowElement = node;\n            }, class: this.mode === \"dialog\" ? \"\" : \"calcite-flow-widget\" }, h(\"calcite-flow-item\", { closable: this.closable, heading: label, onCalciteFlowItemClose: () => {\n                this._handleFlowItemClose();\n            } }, h(\"calcite-panel\", { loading: state === \"loading\" || state === \"executing\" }, serviceItems, notice))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    _createVersionPropertiesFlowItem(serviceUrl, versionInfo) {\n        const { closable, flowElement, viewModel, viewModel: { state }, } = this;\n        const versionProperties = document.createElement(\"arcgis-version-management-version-properties\");\n        versionProperties.versionPropertiesElementProps = {\n            closable,\n            currentUser: viewModel.userLookup.get(serviceUrl),\n            hasAdvEditingUte: viewModel.advancedEditingUserTypeExtensionLookup.get(serviceUrl),\n            serviceUrl,\n            state,\n            strings: this.messages,\n            versionInfo,\n        };\n        versionProperties.addEventListener(\"arcgisCreateVersion\", (event) => {\n            const { createVersionParameters, switchToVersion } = event.detail;\n            viewModel\n                .createVersion(createVersionParameters)\n                .then(async (createVersionResult) => {\n                if (createVersionResult) {\n                    this.arcgisVersioningStateChanged.emit({\n                        type: \"version-created\",\n                        versionIdentifier: createVersionResult.versionIdentifier,\n                        versioningState: viewModel.versioningStateLookup.get(serviceUrl),\n                    });\n                }\n                if (switchToVersion) {\n                    await this.viewModel\n                        .changeVersion(serviceUrl, createVersionResult.versionIdentifier.name, createVersionResult.versionIdentifier.guid)\n                        .then((changeVersionResult) => {\n                        if (changeVersionResult) {\n                            this.arcgisVersioningStateChanged.emit({\n                                type: \"version-switched\",\n                                versionIdentifier: createVersionResult.versionIdentifier,\n                                versioningState: viewModel.versioningStateLookup.get(serviceUrl),\n                            });\n                        }\n                    });\n                }\n            })\n                .finally(async () => {\n                await this._refreshVersionList(serviceUrl);\n                this._removeVersionPropertiesFlowItem(flowElement);\n            });\n        });\n        versionProperties.addEventListener(\"arcgisAlterVersion\", async (event) => {\n            const { flowElement } = this;\n            const { alterVersionParameters } = event.detail;\n            await viewModel\n                .alterVersion(alterVersionParameters)\n                .then(async (alterVersionResult) => {\n                if (alterVersionResult) {\n                    this.arcgisVersioningStateChanged.emit({\n                        type: \"version-changed\",\n                        versionIdentifier: alterVersionParameters.versionIdentifier,\n                        versioningState: viewModel.versioningStateLookup.get(serviceUrl),\n                    });\n                }\n                await this._refreshVersionList(serviceUrl);\n            })\n                .finally(() => {\n                this._removeVersionPropertiesFlowItem(flowElement);\n            });\n        });\n        versionProperties.addEventListener(\"arcgisFlowItemBack\", () => {\n            this._removeVersionPropertiesFlowItem(this.flowElement);\n        });\n        versionProperties.addEventListener(\"calciteFlowItemBack\", (event) => {\n            event.preventDefault();\n            this._removeVersionPropertiesFlowItem(this.flowElement);\n        });\n        versionProperties.addEventListener(\"calciteFlowItemClose\", () => {\n            this._handleFlowItemClose();\n        });\n        return versionProperties;\n    }\n    _getLoadError(loadError) {\n        const { messages } = this;\n        switch (loadError) {\n            case \"no-feature-services\":\n                return messages.loadErrors.noFeatureServices;\n            case \"no-view-property\":\n                return messages.loadErrors.noViewProperty;\n            default:\n                return loadError;\n        }\n    }\n    _handleFlowItemClose() {\n        const versionManagementComponent = document.querySelector(\"arcgis-version-management\");\n        const parentElement = versionManagementComponent.parentElement;\n        parentElement?.removeChild(versionManagementComponent);\n    }\n    async _handleManageVersionAction(e, flowElement) {\n        const { actionType, serviceUrl, versionInfo } = e.detail;\n        const { viewModel } = this;\n        switch (actionType) {\n            case \"changeVersion\": {\n                viewModel\n                    .changeVersion(serviceUrl, versionInfo.versionIdentifier.name, versionInfo.versionIdentifier.guid)\n                    .then((changeVersionResult) => {\n                    if (changeVersionResult) {\n                        this.arcgisVersioningStateChanged.emit({\n                            type: \"version-switched\",\n                            versionIdentifier: versionInfo.versionIdentifier,\n                            versioningState: viewModel.versioningStateLookup.get(serviceUrl),\n                        });\n                    }\n                    const versionList = flowElement?.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n                    if (versionList) {\n                        if (versionList) {\n                            versionList.versionListElementProps = {\n                                ...versionList.versionListElementProps,\n                                currentVersionIdentifier: viewModel.versioningStateLookup.get(serviceUrl).currentVersionInfo.versionIdentifier,\n                            };\n                        }\n                    }\n                });\n                break;\n            }\n            case \"deleteVersion\": {\n                viewModel\n                    .deleteVersion(serviceUrl, versionInfo.versionIdentifier.name, versionInfo.versionIdentifier.guid)\n                    .then(async (deleteVersionResult) => {\n                    if (deleteVersionResult) {\n                        this.arcgisVersioningStateChanged.emit({\n                            type: \"version-deleted\",\n                            versionIdentifier: versionInfo.versionIdentifier,\n                            versioningState: viewModel.versioningStateLookup.get(serviceUrl),\n                        });\n                    }\n                    await this._refreshVersionList(serviceUrl);\n                });\n                break;\n            }\n            case \"editVersion\": {\n                const versionPropertiesFlow = this._createVersionPropertiesFlowItem(serviceUrl, versionInfo);\n                flowElement.appendChild(versionPropertiesFlow);\n                break;\n            }\n        }\n    }\n    async _refreshVersionList(serviceUrl) {\n        const { flowElement, viewModel } = this;\n        if (flowElement) {\n            const versionInfos = await viewModel.getVersionInfos(serviceUrl);\n            const serviceItemElements = flowElement.getElementsByTagName(\"arcgis-version-management-service-item\");\n            for (const serviceItemElement of serviceItemElements) {\n                if (serviceItemElement.serviceItemElementProps.serviceUrl === serviceUrl) {\n                    serviceItemElement.serviceItemElementProps = {\n                        ...serviceItemElement.serviceItemElementProps,\n                        versionInfos,\n                    };\n                }\n            }\n            const versionListElement = flowElement.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n            if (versionListElement) {\n                versionListElement.versionListElementProps = {\n                    ...versionListElement.versionListElementProps,\n                    currentVersionIdentifier: viewModel.versioningStateLookup.get(serviceUrl).currentVersionInfo.versionIdentifier,\n                    versionInfos,\n                };\n            }\n        }\n    }\n    _removeVersionListFlowItem(flowElement) {\n        for (const childNode of flowElement.childNodes) {\n            if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-LIST\") {\n                flowElement.removeChild(childNode);\n            }\n            if (childNode.nodeName.toUpperCase() === \"CALCITE-FLOW-ITEM\") {\n                childNode.hidden = false;\n            }\n        }\n    }\n    _removeVersionPropertiesFlowItem(flowElement) {\n        for (const childNode of flowElement.childNodes) {\n            if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-PROPERTIES\") {\n                flowElement.removeChild(childNode);\n            }\n            if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-LIST\") {\n                childNode.getElementsByTagName(\"calcite-flow-item\")[0].hidden = false;\n            }\n        }\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return getElement(this); }\n};\nArcgisVersionManagement.style = ArcgisVersionManagementStyle0;\n\nexport { ArcgisVersionManagement as arcgis_version_management };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { b as makeController } from './index-c99fc80c.js';\nimport { s as startLocaleObserver, g as getElementLocales } from './index-d2df902e.js';\n\n// src/load.ts\nvar load = (loader) => makeController(loader);\nvar makeT9nController = (getAssetPath) => ({ blocking = false, name } = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          controller.exports = { ...t9nStrings, _lang: lang, _t9nLocale: t9nLocale };\n          const label = t9nStrings.componentLabel ?? t9nStrings.widgetLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ?? (component.label = label);\n          }\n        },\n        name\n      )\n    );\n    if (blocking) {\n      return controller.ready;\n    }\n    const locale = getElementLocales(component.el);\n    return { _lang: locale.lang, _t9nLocale: locale.t9nLocale };\n  })\n);\n\n// src/usePropertyChange.ts\nvar usePropertyChange = (_component) => propertyChangeController;\nvar eventName = \"arcgisPropertyChange\";\nvar propertyChangeController = (...toWatch) => makeController((component, controller) => {\n  const eventedComponent = component;\n  if (component.manager.isLit) {\n    eventedComponent[eventName] = {\n      emit: (payload) => {\n        const event = new CustomEvent(eventName, { detail: payload, cancelable: true });\n        component.el.dispatchEvent(event);\n        return event;\n      }\n    };\n  }\n  const eventEmitter = eventedComponent[eventName];\n  controller.onLoad(\n    () => controller.onLifecycle(\n      () => toWatch.map(\n        (name) => (\n          // Casting to 'el' to simplify dynamic prop name typing\n          component.manager.watch(name, () => eventEmitter.emit({ name }))\n        )\n      )\n    )\n  );\n  return eventEmitter;\n});\n\nexport { load as l, makeT9nController as m, usePropertyChange as u };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { p as proxyExports, A as AccessorController, a as accessorSupport } from './index-c99fc80c.js';\nimport './index-d2df902e.js';\nimport { a as attachToParent } from './component-utils-de9339fe.js';\nimport { m as makeT9nController } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { a as getAssetPath } from './index-7d33cc26.js';\n\n/**\n * A controller for a mapping component that:\n * - loads the viewModel\n * - initializes the viewModel with the component's properties\n * - does two-way binding between view model and component properties\n * - re-emits the viewModel's events on the component\n * - type-checks everything ✨\n *\n * Documentation:\n * https://devtopia.esri.com/WebGIS/arcgis-web-components/blob/main/packages/map-components/src/controllers/useViewModel.md\n */\nconst makeViewModelController = (loadViewModel, _options) => (component, options) => proxy(component, loadViewModel, options);\n// REFACTOR: extract common logic into IntegrationController???\nclass ViewModelController extends AccessorController {\n    hostConnected() {\n        if (this.component.manager.didLoadCalled) {\n            attachToParent(this.component);\n        }\n    }\n    async hostLoad() {\n        await super.hostLoad();\n        if (this.component.manager.destroyed) {\n            return;\n        }\n        this._watchMetaProperties();\n        accessorSupport.reEmitAccessorEvents(this, this._instance, this.reactiveUtils, \"viewModel\");\n    }\n    hostLoaded() {\n        const { el } = this.component;\n        const childNode = el.shadowRoot?.firstElementChild ?? el.firstElementChild ?? undefined;\n        /*\n         * On hot reloading, new this.component instance is created (so properties\n         * on it are reset) but this.component.el instance is preserved (so\n         * properties on it are preserved). Since childElem is re-parented on 1st\n         * hostLoad(), for it to be accessible on the 2nd hostLoad() (hot reload),\n         * we have to store it's reference on the el, rather than component\n         */\n        el.childElem = childNode ?? el.childElem;\n        if (el.childElem === undefined && \"production\" !== \"production\") {\n            throw new Error(\"Unable to find component's root child\");\n        }\n        let arcgisReadyEmitted = false;\n        // Check if view was already provided by the user\n        const currentView = this.component.el.view;\n        // Define the \"view\" property to allow component usage with MapView/SceneView\n        Object.defineProperty(this.component.el, \"view\", {\n            get: () => this._instance.view,\n            set: (view) => {\n                this._instance.view = view;\n                this._watchViewDestroy();\n                this.component.requestUpdate();\n                if (!arcgisReadyEmitted) {\n                    arcgisReadyEmitted = true;\n                    this.component.arcgisReady.emit();\n                }\n            },\n            configurable: true,\n            enumerable: true,\n        });\n        if (currentView) {\n            this._instance.view = currentView;\n        }\n        if (this.component.el.isConnected) {\n            attachToParent(this.component);\n            this._watchViewDestroy();\n        }\n    }\n    hostDisconnected() {\n        // If view is already destroyed, view.ui might be undefined\n        if (typeof this.component.el.childElem === \"object\") {\n            this.component.el.view?.ui?.remove(this.component.el.childElem);\n        }\n    }\n    hostDestroy() {\n        super.hostDestroy();\n        this._watchViewDestroyHandle?.remove();\n    }\n    _watchMetaProperties() {\n        this.watch(\"position\", (position) => {\n            if (this.component.el.childElem != null && typeof position === \"string\") {\n                attachToParent(this.component);\n            }\n        });\n        this.watch(\"referenceElement\", () => attachToParent(this.component));\n    }\n    /**\n     * Destroy the component if view gets destroyed. Note, that when view is\n     * destroyed, component disconnect is triggered, which will destroy the\n     * component in 1s but that can be too late, because in the meanwhile,\n     * a watcher on the widget/viewModel instance may get triggered, and throw\n     * an error if it's not able to access this.view.map or etc\n     * (happens in VersionManagementViewModel for example).\n     * We can't check for this in disconnectedCallback though as, if the entire\n     * component tree is removed, the disconnect for the component will be\n     * triggered before that of arcgis-map, so the view might not be destroyed\n     * yet at that point.\n     */\n    _watchViewDestroy() {\n        this._watchViewDestroyHandle?.remove();\n        this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === true, () => void this.component.destroy().catch(console.error), { sync: true });\n    }\n}\nconst proxy = proxyExports(ViewModelController);\n\nconst useT9n = makeT9nController(getAssetPath);\n\nexport { makeViewModelController as m, useT9n as u };\n"],"names":["useVersionManagementViewModel","makeViewModelController","newWidgetsVersionManagementVersionManagementViewModel","ArcgisVersionManagement","hostRef","_classCallCheck","registerInstance","this","arcgisReady","createEvent","arcgisVersioningStateChanged","manager","useControllerManager","reactiveUtils","load","importCoreReactiveUtils","viewModel","messages","readonly","useT9n","blocking","allowEditingDisabled","autoDestroyDisabled","closable","icon","undefined","label","mode","pageSize","position","referenceElement","state","versioningStates","view","_createClass","key","value","_componentWillLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","watch","_this","wrap","_context","prev","next","onLifecycle","flowElement","versionProperties","getElementsByTagName","versionList","_removeVersionPropertiesFlowItem","_removeVersionListFlowItem","versionListElementProps","_objectSpread","executionError","versionPropertiesElementProps","stop","apply","arguments","_destroy","_callee2","_context2","destroy","_this2","_this$viewModel","loadError","arrayServiceNames","Array","from","serviceNameLookup","_ref","_ref2","_slicedToArray","url","name","serviceItems","h","Fragment","map","service","_viewModel$serverVers","_viewModel$versioning","_viewModel$versioning2","serviceItemElementProps","allowEditing","currentUser","userLookup","get","currentVersionIdentifier","versioningStateLookup","currentVersionInfo","versionIdentifier","hasAdvEditingUte","advancedEditingUserTypeExtensionLookup","heading","isVersioningApiAvailable","serverVersionLookup","serviceName","serviceUrl","strings","versionInfos","onArcgisGetVersions","_onArcgisGetVersions","_callee3","event","_context3","_refreshVersionList","detail","_x","onArcgisFlowItemBack","onArcgisFlowItemClose","_handleFlowItemClose","onArcgisManageVersion","_handleManageVersionAction","onArcgisNewVersion","versionPropertiesFlow","_createVersionPropertiesFlowItem","appendChild","notice","class","kind","open","scale","slot","width","_getLoadError","ref","node","onCalciteFlowItemClose","loading","versionInfo","_this3","document","createElement","addEventListener","_event$detail","createVersionParameters","switchToVersion","createVersion","then","_ref3","_callee4","createVersionResult","_context4","emit","type","versioningState","changeVersion","guid","changeVersionResult","_x2","finally","_callee5","_context5","_ref5","_callee7","alterVersionParameters","_context7","alterVersion","_ref6","_callee6","alterVersionResult","_context6","_x4","_x3","preventDefault","loadErrors","noFeatureServices","noViewProperty","versionManagementComponent","querySelector","parentElement","removeChild","_handleManageVersionAction2","_callee9","e","_e$detail","actionType","_this4","_context9","t0","abrupt","deleteVersion","_ref7","_callee8","deleteVersionResult","_context8","_x7","_x5","_x6","_refreshVersionList2","_callee10","serviceItemElements","_iterator","_step","serviceItemElement","versionListElement","_context10","getVersionInfos","sent","_createForOfIteratorHelper","s","n","done","err","f","_x8","_step2","_iterator2","childNodes","childNode","nodeName","toUpperCase","hidden","_step3","_iterator3","getElement","style","loader","makeController","makeT9nController","getAssetPath","length","_ref$blocking","component","controller","startLocaleObserver","el","_t9nStrings$component","t9nLocale","t9nStrings","lang","exports","_lang","_t9nLocale","_component$label","componentLabel","widgetLabel","ready","locale","getElementLocales","usePropertyChange","_component","propertyChangeController","eventName","_len","toWatch","_key","eventedComponent","isLit","payload","CustomEvent","cancelable","dispatchEvent","eventEmitter","onLoad","loadViewModel","_options","options","proxy","ViewModelController","_AccessorController","_inherits","_super","_createSuper","didLoadCalled","attachToParent","_hostLoad","_get","_getPrototypeOf","prototype","call","destroyed","_watchMetaProperties","accessorSupport","_instance","_el$shadowRoot$firstE","_el$shadowRoot","shadowRoot","firstElementChild","childElem","arcgisReadyEmitted","currentView","Object","defineProperty","set","_watchViewDestroy","requestUpdate","configurable","enumerable","isConnected","_this$component$el$vi","_this$component$el$vi2","ui","remove","_this$_watchViewDestr","_watchViewDestroyHandle","_this$_watchViewDestr2","when","_this3$component$el$v","catch","console","error","sync","AccessorController","proxyExports"],"sourceRoot":""}