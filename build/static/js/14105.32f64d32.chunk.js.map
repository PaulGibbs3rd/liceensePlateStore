{"version":3,"file":"static/js/14105.32f64d32.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/button/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/button/button.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/button/button.scss?tag=calcite-button&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/loader/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.scss?tag=calcite-loader&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  buttonLoader: \"calcite-button--loader\",\n  content: \"content\",\n  contentSlotted: \"content--slotted\",\n  icon: \"icon\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  loadingIn: \"loading-in\",\n  loadingOut: \"loading-out\",\n  iconStartEmpty: \"icon-start-empty\",\n  iconEndEmpty: \"icon-end-empty\",\n  buttonPadding: \"button-padding\",\n  buttonPaddingShrunk: \"button-padding--shrunk\",\n};\n","import {\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { findAssociatedForm, FormOwner, resetForm, submitForm } from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Appearance, FlipContext, Kind, Scale, Width } from \"../interfaces\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ButtonMessages } from \"./assets/button/t9n\";\nimport { ButtonAlignment } from \"./interfaces\";\nimport { CSS } from \"./resources\";\n\n/** Passing a 'href' will render an anchor link, instead of a button. Role will be set to link, or button, depending on this. */\n/** It is the consumers responsibility to add aria information, rel, target, for links, and any button attributes for form submission */\n\n/** @slot - A slot for adding text. */\n@Component({\n  tag: \"calcite-button\",\n  styleUrl: \"button.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Button\n  implements\n    LabelableComponent,\n    InteractiveComponent,\n    FormOwner,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"aria-expanded\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component's elements. */\n  @Prop({ reflect: true }) alignment: ButtonAlignment = \"center\";\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\n    \"outline\" | \"outline-fill\" | \"solid\" | \"transparent\",\n    Appearance\n  > = \"solid\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Specifies the kind of the component, which will apply to the border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /**  When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * Prompts the user to save the linked URL instead of navigating to it. Can be used with or without a value:\n   * Without a value, the browser will suggest a filename/extension\n   * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download.\n   */\n  @Prop({ reflect: true }) download: string | boolean = false;\n\n  /**\n   * Specifies the URL of the linked resource, which can be set as an absolute or relative path.\n   */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /**\n   * When `true`, a busy indicator is displayed and interaction is disabled.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /** Specifies the name of the component on form submission. */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * Defines the relationship between the `href` value and the current document.\n   *\n   * @mdn [rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)\n   */\n  @Prop({ reflect: true }) rel: string;\n\n  /** When `true`, adds a round style to the component. */\n  @Prop({ reflect: true }) round = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies if the component is a child of a `calcite-split-button`. */\n  @Prop({ reflect: true }) splitChild: \"primary\" | \"secondary\" | false = false;\n\n  /**\n   * Specifies where to open the linked document defined in the `href` property.\n   *\n   * @mdn [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   */\n  @Prop({ reflect: true }) target: string;\n\n  /**\n   * Specifies the default behavior of the component.\n   *\n   * @mdn [type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type)\n   */\n  @Prop({ reflect: true }) type = \"button\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ButtonMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ButtonMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /** referred in t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async connectedCallback(): Promise<void> {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.setupTextContentObserver();\n    connectLabel(this);\n    this.formEl = findAssociatedForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n    this.formEl = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      this.updateHasContent();\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.setTooltipText();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const childElType = this.href ? \"a\" : \"button\";\n    const Tag = childElType;\n    const loaderNode = this.loading ? (\n      <div class={CSS.buttonLoader}>\n        <calcite-loader\n          class={this.loading ? CSS.loadingIn : CSS.loadingOut}\n          inline\n          label={this.messages.loading}\n          scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        />\n      </div>\n    ) : null;\n    const noStartEndIcons = !this.iconStart && !this.iconEnd;\n\n    const iconStartEl = (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconStart]: true }}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const iconEndEl = (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconEnd]: true }}\n        flipRtl={this.iconFlipRtl === \"end\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconEnd}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const contentEl = (\n      <span class={CSS.content} ref={(el) => (this.contentEl = el)}>\n        <slot />\n      </span>\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <Tag\n          aria-disabled={childElType === \"a\" ? toAriaBoolean(this.disabled || this.loading) : null}\n          aria-expanded={this.el.getAttribute(\"aria-expanded\")}\n          aria-label={!this.loading ? getLabelText(this) : this.messages.loading}\n          aria-live=\"polite\"\n          class={{\n            [CSS.buttonPadding]: noStartEndIcons,\n            [CSS.buttonPaddingShrunk]: !noStartEndIcons,\n            [CSS.contentSlotted]: this.hasContent,\n            [CSS.iconStartEmpty]: !this.iconStart,\n            [CSS.iconEndEmpty]: !this.iconEnd,\n          }}\n          disabled={childElType === \"button\" ? this.disabled || this.loading : null}\n          download={\n            childElType === \"a\" && (this.download === \"\" || this.download) ? this.download : null\n          }\n          href={childElType === \"a\" && this.href}\n          name={childElType === \"button\" && this.name}\n          onClick={this.handleClick}\n          ref={this.setChildEl}\n          rel={childElType === \"a\" && this.rel}\n          tabIndex={this.disabled ? -1 : null}\n          target={childElType === \"a\" && this.target}\n          title={this.tooltipText}\n          type={childElType === \"button\" && this.type}\n        >\n          {loaderNode}\n          {this.iconStart ? iconStartEl : null}\n          {this.hasContent ? contentEl : null}\n          {this.iconEnd ? iconEndEl : null}\n        </Tag>\n      </InteractiveContainer>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childEl?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteButtonElement;\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  /** watches for changing text content */\n  private mutationObserver = createObserver(\"mutation\", () => this.updateHasContent());\n\n  /** the rendered child element */\n  private childEl?: HTMLElement;\n\n  /** determine if there is slotted content for styling purposes */\n  @State() private hasContent = false;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ButtonMessages;\n\n  private updateHasContent() {\n    const slottedContent = this.el.textContent.trim().length > 0 || this.el.childNodes.length > 0;\n    this.hasContent =\n      this.el.childNodes.length === 1 && this.el.childNodes[0]?.nodeName === \"#text\"\n        ? this.el.textContent?.trim().length > 0\n        : slottedContent;\n  }\n\n  private setupTextContentObserver() {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  /** keeps track of the tooltipText */\n  @State() tooltipText: string;\n\n  /** keep track of the rendered contentEl */\n  private contentEl: HTMLSpanElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.setTooltipText());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.handleClick();\n    this.setFocus();\n  }\n\n  // act on a requested or nearby form based on type\n  private handleClick = (): void => {\n    const { type } = this;\n\n    if (this.href) {\n      return;\n    }\n\n    // this.type refers to type attribute, not child element type\n    if (type === \"submit\") {\n      submitForm(this);\n    } else if (type === \"reset\") {\n      resetForm(this);\n    }\n  };\n\n  private setTooltipText = (): void => {\n    const { contentEl } = this;\n    if (contentEl) {\n      this.tooltipText =\n        contentEl.offsetWidth < contentEl.scrollWidth ? this.el.innerText || null : null;\n    }\n  };\n\n  private setChildEl = (el: HTMLElement): void => {\n    this.childEl = el;\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n    }\n  };\n}\n",":host {\n  @apply inline-block w-auto align-middle;\n}\n\n// fab variants\n:host([round]) {\n  border-radius: 50px;\n  & a,\n  & button {\n    border-radius: 50px;\n  }\n}\n\n// focus styles\n:host button,\n:host a {\n  @apply focus-base;\n  &:focus {\n    @apply focus-outset;\n  }\n}\n// button base\n:host button,\n:host a {\n  --calcite-button-content-margin-internal: theme(\"margin.2\");\n  --calcite-button-padding-x-internal: 7px;\n  --calcite-button-padding-y-internal: 3px;\n  padding-block: var(--calcite-button-padding-y-internal);\n  padding-inline: var(--calcite-button-padding-x-internal);\n  @apply font-inherit\n    relative\n    box-border\n    flex\n    h-full\n    w-full\n    cursor-pointer\n    select-none\n    appearance-none\n    items-center\n    justify-center\n    rounded-none\n    border-none\n    text-center\n    font-normal\n    no-underline;\n  // include transition from focus\n  transition:\n    color var(--calcite-animation-timing) ease-in-out,\n    background-color var(--calcite-animation-timing) ease-in-out,\n    box-shadow var(--calcite-animation-timing) ease-in-out,\n    outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n  &:hover {\n    @apply no-underline;\n  }\n  & span {\n    @apply truncate;\n  }\n}\n\n.content {\n  margin-inline: var(--calcite-button-content-margin-internal);\n}\n\n.icon-start-empty {\n  .content {\n    margin-inline-start: unset;\n  }\n}\n.icon-end-empty {\n  .content {\n    margin-inline-end: unset;\n  }\n}\n\n:host([scale=\"m\"]) {\n  button,\n  a {\n    --calcite-button-content-margin-internal: theme(\"margin.3\");\n  }\n}\n:host([scale=\"l\"]) {\n  button,\n  a {\n    --calcite-button-content-margin-internal: theme(\"margin.4\");\n  }\n}\n\n// button width\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-2/4;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n// alignment\n:host([alignment=\"center\"]:not([width=\"auto\"])) {\n  a,\n  button {\n    @apply justify-center;\n  }\n}\n:host([alignment=\"start\"]:not([width=\"auto\"])) {\n  a,\n  button {\n    @apply justify-start;\n  }\n}\n:host([alignment=\"end\"]:not([width=\"auto\"])) {\n  a,\n  button {\n    @apply justify-end;\n  }\n}\n:host([alignment*=\"space-between\"]:not([width=\"auto\"])) {\n  a,\n  button {\n    @apply justify-between;\n  }\n}\n:host([alignment=\"icon-start-space-between\"]:not([width=\"auto\"])) {\n  .icon--start {\n    margin-inline-end: auto;\n  }\n  a,\n  button {\n    text-align: unset;\n  }\n}\n:host([alignment=\"icon-end-space-between\"]:not([width=\"auto\"])) {\n  .icon--end {\n    margin-inline-start: auto;\n  }\n  a,\n  button {\n    text-align: unset;\n  }\n}\n\n// only two icons\n:host([alignment=\"center\"]) {\n  a:not(.content--slotted),\n  button:not(.content--slotted) {\n    .icon--start + .icon--end {\n      margin-inline-start: var(--calcite-button-content-margin-internal);\n    }\n  }\n}\n\n.icon {\n  @apply relative\n    m-0\n    inline-flex\n    font-normal;\n  line-height: inherit;\n}\n\n@include disabled();\n\n@keyframes loader-in {\n  0% {\n    inline-size: 0;\n    opacity: 0;\n    transform: scale(0.5);\n  }\n  100% {\n    inline-size: 1em;\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes loader-out {\n  0% {\n    inline-size: 1em;\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    inline-size: 0;\n    opacity: 0;\n    transform: scale(0.5);\n  }\n}\n\n.calcite-button--loader {\n  @apply flex;\n  calcite-loader {\n    @apply m-0;\n  }\n}\n\n:host([loading]) {\n  // center loading spinner when button has text\n  button.content--slotted,\n  a.content--slotted {\n    .calcite-button--loader calcite-loader {\n      margin-inline-end: var(--calcite-button-content-margin-internal);\n    }\n  }\n  // hide icons when loading with no text\n  button:not(.content--slotted),\n  a:not(.content--slotted) {\n    .icon--start,\n    .icon--end {\n      @apply hidden;\n    }\n  }\n}\n\n// button styles\n:host([appearance]) {\n  button,\n  a {\n    @apply border-color-transparent\n      border\n      border-solid;\n  }\n}\n\n:host([kind=\"brand\"]) {\n  button,\n  a {\n    @apply text-color-inverse bg-brand;\n    &:hover,\n    &:focus {\n      @apply bg-brand-hover;\n    }\n    &:active {\n      @apply bg-brand-press;\n    }\n    calcite-loader {\n      @apply text-color-inverse;\n    }\n  }\n}\n:host([kind=\"danger\"]) {\n  button,\n  a {\n    @apply text-color-inverse bg-danger;\n    &:hover,\n    &:focus {\n      @apply bg-danger-hover;\n    }\n    &:active {\n      @apply bg-danger-press;\n    }\n    calcite-loader {\n      @apply text-color-inverse;\n    }\n  }\n}\n:host([kind=\"neutral\"]) {\n  button,\n  a {\n    @apply text-color-1 bg-foreground-3;\n    &:hover,\n    &:focus {\n      @apply bg-foreground-2;\n    }\n    &:active {\n      @apply bg-foreground-1;\n    }\n    calcite-loader {\n      @apply text-color-1;\n    }\n  }\n}\n:host([kind=\"inverse\"]) {\n  button,\n  a {\n    @apply text-color-inverse;\n    background-color: var(--calcite-color-inverse);\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-color-inverse-hover);\n    }\n    &:active {\n      background-color: var(--calcite-color-inverse-press);\n    }\n    calcite-loader {\n      @apply text-color-inverse;\n    }\n  }\n}\n// outline\n:host([appearance=\"outline-fill\"]) {\n  button,\n  a {\n    @apply bg-foreground-1 border border-solid;\n    box-shadow: inset 0 0 0 1px transparent;\n  }\n}\n:host([appearance=\"outline-fill\"][kind=\"brand\"]) {\n  button,\n  a {\n    @apply border-color-brand bg-foreground-1;\n    color: theme(\"colors.brand\");\n    &:hover {\n      @apply border-color-brand-hover;\n      color: theme(\"colors.brand-hover\");\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);\n    }\n    &:focus {\n      @apply border-color-brand;\n      color: theme(\"colors.brand\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-brand);\n    }\n    &:active {\n      @apply border-color-brand-press;\n      color: theme(\"colors.brand-press\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-brand-press);\n    }\n    calcite-loader {\n      color: theme(\"colors.brand\");\n    }\n  }\n}\n:host([appearance=\"outline-fill\"][kind=\"danger\"]) {\n  button,\n  a {\n    @apply border-color-danger bg-foreground-1;\n    color: theme(\"colors.danger\");\n    &:hover {\n      @apply border-color-danger-hover;\n      color: theme(\"colors.danger-hover\");\n      box-shadow: inset 0 0 0 1px var(--calcite-color-status-danger-hover);\n    }\n    &:focus {\n      @apply border-color-danger;\n      color: theme(\"colors.danger\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-status-danger);\n    }\n    &:active {\n      @apply border-color-danger-press;\n      color: theme(\"colors.danger-press\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-status-danger-press);\n    }\n    calcite-loader {\n      color: theme(\"colors.danger\");\n    }\n  }\n}\n:host([appearance=\"outline-fill\"][kind=\"neutral\"]) {\n  button,\n  a {\n    @apply text-color-1 bg-foreground-1;\n    border-color: theme(\"borderColor.color.1\");\n    &:hover {\n      box-shadow: inset 0 0 0 1px var(--calcite-color-foreground-3);\n    }\n    &:focus {\n      box-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);\n    }\n    &:active {\n      box-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);\n    }\n    calcite-loader {\n      @apply text-color-1;\n    }\n  }\n}\n:host([appearance=\"outline-fill\"][kind=\"inverse\"]) {\n  button,\n  a {\n    @apply text-color-1 bg-foreground-1;\n    border-color: var(--calcite-color-inverse);\n    &:hover {\n      border-color: var(--calcite-color-inverse-hover);\n      box-shadow: inset 0 0 0 1px var(--calcite-color-inverse-hover);\n    }\n    &:focus {\n      border-color: var(--calcite-color-inverse);\n      box-shadow: inset 0 0 0 2px var(--calcite-color-inverse);\n    }\n    &:active {\n      border-color: var(--calcite-color-inverse-press);\n      box-shadow: inset 0 0 0 2px var(--calcite-color-inverse-press);\n    }\n    calcite-loader {\n      @apply text-color-1;\n    }\n  }\n}\n:host([appearance=\"outline\"]) {\n  button,\n  a {\n    @apply border border-solid bg-transparent;\n    box-shadow: inset 0 0 0 1px transparent;\n  }\n}\n:host([appearance=\"outline\"][kind=\"brand\"]) {\n  button,\n  a {\n    @apply border-color-brand bg-transparent;\n    color: theme(\"colors.brand\");\n    &:hover {\n      @apply border-color-brand-hover;\n      color: theme(\"colors.brand-hover\");\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);\n    }\n    &:focus {\n      @apply border-color-brand;\n      color: theme(\"colors.brand\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-brand);\n    }\n    &:active {\n      @apply border-color-brand-press;\n      color: theme(\"colors.brand-press\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-brand-press);\n    }\n    calcite-loader {\n      color: theme(\"colors.brand\");\n    }\n  }\n}\n:host([appearance=\"outline\"][kind=\"danger\"]) {\n  button,\n  a {\n    @apply border-color-danger bg-transparent;\n    color: theme(\"colors.danger\");\n    &:hover {\n      @apply border-color-danger-hover;\n      color: theme(\"colors.danger-hover\");\n      box-shadow: inset 0 0 0 1px var(--calcite-color-status-danger-hover);\n    }\n    &:focus {\n      @apply border-color-danger;\n      color: theme(\"colors.danger\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-status-danger);\n    }\n    &:active {\n      @apply border-color-danger-press;\n      color: theme(\"colors.danger-press\");\n      box-shadow: inset 0 0 0 2px var(--calcite-color-status-danger-press);\n    }\n    calcite-loader {\n      color: theme(\"colors.danger\");\n    }\n  }\n}\n:host([appearance=\"outline\"][kind=\"neutral\"]) {\n  button,\n  a {\n    @apply text-color-1  bg-transparent;\n    border-color: theme(\"borderColor.color.1\");\n    &:hover {\n      box-shadow: inset 0 0 0 1px var(--calcite-color-foreground-3);\n    }\n    &:focus {\n      box-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);\n    }\n    &:active {\n      box-shadow: inset 0 0 0 2px var(--calcite-color-foreground-3);\n    }\n    calcite-loader {\n      @apply text-color-1;\n    }\n  }\n}\n:host([appearance=\"outline\"][kind=\"inverse\"]) {\n  button,\n  a {\n    @apply text-color-1  bg-transparent;\n    border-color: var(--calcite-color-inverse);\n    &:hover {\n      border-color: var(--calcite-color-inverse-hover);\n      box-shadow: inset 0 0 0 1px var(--calcite-color-inverse-hover);\n    }\n    &:focus {\n      border-color: var(--calcite-color-inverse);\n      box-shadow: inset 0 0 0 2px var(--calcite-color-inverse);\n    }\n    &:active {\n      border-color: var(--calcite-color-inverse-press);\n      box-shadow: inset 0 0 0 2px var(--calcite-color-inverse-press);\n    }\n    calcite-loader {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([appearance=\"outline-fill\"][split-child=\"primary\"]) button,\n:host([appearance=\"outline\"][split-child=\"primary\"]) button {\n  border-inline-end-width: 0;\n  border-inline-start-width: theme(\"borderWidth.DEFAULT\");\n}\n\n:host([appearance=\"outline-fill\"][split-child=\"secondary\"]) button,\n:host([appearance=\"outline\"][split-child=\"secondary\"]) button {\n  border-inline-start-width: 0;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n// transparent\n:host([appearance=\"transparent\"]:not(.enable-editing-button)) {\n  button,\n  a {\n    @apply bg-transparent;\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-color-transparent-hover);\n    }\n    &:active {\n      background-color: var(--calcite-color-transparent-press);\n    }\n  }\n}\n:host([appearance=\"transparent\"][kind=\"brand\"]) {\n  button,\n  a {\n    color: theme(\"colors.brand\");\n    &:hover {\n      color: theme(\"colors.brand-hover\");\n    }\n    &:focus {\n      color: theme(\"colors.brand\");\n    }\n    &:active {\n      color: theme(\"colors.brand-press\");\n    }\n    calcite-loader {\n      color: theme(\"colors.brand\");\n    }\n  }\n}\n\n:host([appearance=\"transparent\"][kind=\"danger\"]) {\n  button,\n  a {\n    color: theme(\"colors.danger\");\n    &:hover {\n      color: theme(\"colors.danger-hover\");\n    }\n    &:focus {\n      color: theme(\"colors.danger\");\n    }\n    &:active {\n      color: theme(\"colors.danger-press\");\n    }\n    calcite-loader {\n      color: theme(\"colors.danger\");\n    }\n  }\n}\n\n:host([appearance=\"transparent\"][kind=\"neutral\"]:not(.cancel-editing-button)) {\n  button,\n  a,\n  calcite-loader {\n    @apply text-color-1;\n  }\n}\n\n:host([appearance=\"transparent\"][kind=\"neutral\"].cancel-editing-button) {\n  button {\n    @apply text-color-3\n      border-t-color-input\n      border-b-color-input\n      border-t\n      border-b;\n    border-block-style: solid;\n\n    &:not(.content--slotted) {\n      --calcite-button-padding-y-internal: 0;\n    }\n\n    &:hover {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([appearance=\"transparent\"][kind=\"neutral\"].enable-editing-button) {\n  button {\n    @apply bg-transparent;\n  }\n}\n\n:host(.confirm-changes-button),\n:host(.cancel-editing-button),\n:host(.enable-editing-button) {\n  button {\n    &:focus {\n      outline-offset: -2px; // ensure focus outlines work in Safari\n    }\n  }\n}\n\n:host([appearance=\"transparent\"][kind=\"inverse\"]) {\n  button,\n  a,\n  calcite-loader {\n    @apply text-color-inverse;\n  }\n}\n\n// generate button scales (scenario: text exists)\n:host([scale=\"s\"]) button.content--slotted,\n:host([scale=\"s\"]) a.content--slotted {\n  @apply text-n2h;\n}\n\n// accommodate for transparent buttons not having borders\n:host([scale=\"s\"][appearance=\"transparent\"]) button.content--slotted,\n:host([scale=\"s\"][appearance=\"transparent\"]) a.content--slotted {\n  --calcite-button-padding-x-internal: theme(\"padding.2\");\n}\n\n:host([scale=\"s\"]) button,\n:host([scale=\"s\"]) a {\n  --calcite-button-padding-y-internal: 3px;\n}\n\n:host([scale=\"m\"]) button.content--slotted,\n:host([scale=\"m\"]) a.content--slotted {\n  --calcite-button-padding-x-internal: 11px;\n  @apply text-n1h;\n}\n\n:host([scale=\"m\"]) button,\n:host([scale=\"m\"]) a {\n  --calcite-button-padding-y-internal: 7px;\n}\n// accommodate for transparent buttons not having borders\n:host([scale=\"m\"][appearance=\"transparent\"]) button.content--slotted,\n:host([scale=\"m\"][appearance=\"transparent\"]) a.content--slotted {\n  --calcite-button-padding-x-internal: theme(\"padding.3\");\n}\n\n:host([scale=\"l\"]) button.content--slotted,\n:host([scale=\"l\"]) a.content--slotted {\n  --calcite-button-padding-x-internal: 15px;\n  @apply text-0h;\n}\n\n:host([scale=\"l\"]) {\n  .button-padding {\n    --calcite-button-padding-x-internal: theme(\"padding.4\");\n    --calcite-button-padding-y-internal: 11px;\n  }\n  //shrink the padding if an icon is present to preserve the height\n  .button-padding--shrunk {\n    --calcite-button-padding-y-internal: 9px;\n  }\n}\n\n// generate fab scales (scenario: 1 icon, ie., should be square)\n:host([scale=\"s\"]) button:not(.content--slotted),\n:host([scale=\"s\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding[0.5]\");\n  --calcite-button-padding-y-internal: 3px;\n  @apply text-0h w-6;\n  min-block-size: theme(\"height.6\");\n}\n\n:host([scale=\"m\"]) button:not(.content--slotted),\n:host([scale=\"m\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding[0.5]\");\n  --calcite-button-padding-y-internal: 7px;\n  @apply text-0h w-8;\n  min-block-size: theme(\"height.8\");\n}\n:host([scale=\"l\"]) button:not(.content--slotted),\n:host([scale=\"l\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding[0.5]\");\n  --calcite-button-padding-y-internal: 9px;\n  @apply text-0h w-11;\n  min-block-size: theme(\"height.11\");\n}\n\n:host(:is([scale=\"s\"], [scale=\"m\"], [scale=\"l\"])[width=\"full\"]) {\n  a,\n  button {\n    &:not(.content--slotted) {\n      inline-size: var(--calcite-container-size-content-fluid);\n    }\n  }\n}\n\n// accommodate for transparent buttons not having borders\n:host([scale=\"l\"][appearance=\"transparent\"]) button:not(.content--slotted),\n:host([scale=\"l\"][appearance=\"transparent\"]) a:not(.content--slotted) {\n  --calcite-button-padding-y-internal: theme(\"padding[2.5]\");\n}\n\n// generate fab scales (scenario: 2 icons, ie., should not be square)\n:host([scale=\"s\"][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=\"s\"][icon-start][icon-end]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: 23px;\n  @apply text-0h h-6;\n}\n// accommodate for transparent buttons not having borders\n:host([scale=\"s\"][icon-start][icon-end][appearance=\"transparent\"]) button:not(.content--slotted),\n:host([scale=\"s\"][icon-start][icon-end][appearance=\"transparent\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding.6\");\n}\n:host([scale=\"m\"][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=\"m\"][icon-start][icon-end]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding.8\");\n  @apply text-0h h-8;\n}\n// accommodate for transparent buttons not having borders\n:host([scale=\"m\"][icon-start][icon-end][appearance=\"transparent\"]) button:not(.content--slotted),\n:host([scale=\"m\"][icon-start][icon-end][appearance=\"transparent\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: 33px;\n}\n:host([scale=\"l\"][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=\"l\"][icon-start][icon-end]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: 43px;\n  @apply text-0h h-11;\n  // add space between when only 2 icons\n  .icon--start + .icon--end {\n    margin-inline-start: theme(\"margin.4\");\n  }\n}\n// accommodate for transparent buttons not having borders\n:host([scale=\"l\"][icon-start][icon-end][appearance=\"transparent\"]) button:not(.content--slotted),\n:host([scale=\"l\"][icon-start][icon-end][appearance=\"transparent\"]) a:not(.content--slotted) {\n  --calcite-button-padding-x-internal: theme(\"padding.11\");\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use --calcite-icon-color. Specifies the component's color. Defaults to `currentColor`.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const CSS = {\n  loader: \"loader\",\n  loaderParts: \"loader__svgs\",\n  loaderPart: \"loader__svg\",\n  loaderPartId: (partId: number) => `${CSS.loaderPart}--${partId}` as const,\n  loaderText: \"loader__text\",\n  loaderPercentage: \"loader__percentage\",\n};\n","import { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-loader\",\n  styleUrl: \"loader.scss\",\n  shadow: true,\n})\nexport class Loader implements LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays smaller and appears to the left of the text. */\n  @Prop({ reflect: true }) inline = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible. Otherwise, use `\"determinate\"` to have the value indicate the progress or `\"determinate-value\"` to have the value label displayed along the progress.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" | \"determinate-value\";\n\n  /** The component's value. Valid only for `\"determinate\"` indicators. Percent complete of 100. */\n  @Prop() value = 0;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text = \"\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n\n    this.updateFormatter();\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n  }\n\n  render(): VNode {\n    const { el, inline, label, scale, text, type, value } = this;\n\n    const id = el.id || guid();\n    const radiusRatio = 0.45;\n    const size = inline ? this.getInlineSize(scale) : this.getSize(scale);\n    const radius = size * radiusRatio;\n    const viewbox = `0 0 ${size} ${size}`;\n    const isDeterminate = type?.startsWith(\"determinate\");\n    const circumference = 2 * radius * Math.PI;\n    const progress = (value / 100) * circumference;\n    const remaining = circumference - progress;\n    const valueNow = Math.floor(value);\n    const hostAttributes = {\n      \"aria-valuenow\": valueNow,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      complete: valueNow === 100,\n    };\n    const svgAttributes = { r: radius, cx: size / 2, cy: size / 2 };\n    const determinateStyle = { \"stroke-dasharray\": `${progress} ${remaining}` };\n    return (\n      <Host\n        aria-label={label}\n        id={id}\n        role=\"progressbar\"\n        {...(isDeterminate ? hostAttributes : {})}\n      >\n        <div class={CSS.loaderParts}>\n          {[1, 2, 3].map((index) => (\n            <svg\n              aria-hidden=\"true\"\n              class={{\n                [CSS.loaderPart]: true,\n                [CSS.loaderPartId(index)]: true,\n              }}\n              key={index}\n              viewBox={viewbox}\n              {...(index === 3 && isDeterminate ? { style: determinateStyle } : {})}\n            >\n              <circle {...svgAttributes} />\n            </svg>\n          ))}\n          {isDeterminate && <div class={CSS.loaderPercentage}>{this.formatValue()}</div>}\n        </div>\n        {text && <div class={CSS.loaderText}>{text}</div>}\n      </Host>\n    );\n  }\n\n  private formatValue = (): string => {\n    if (this.type !== \"determinate-value\") {\n      return `${this.value}`;\n    }\n\n    return this.formatter.format(this.value / 100);\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLoaderElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"type\")\n  formatterPropsChange(): void {\n    this.updateFormatter();\n  }\n\n  private formatter: Intl.NumberFormat;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Return the proper sizes based on the scale property\n   *\n   * @param scale\n   */\n  private getSize(scale: string) {\n    return {\n      s: 32,\n      m: 56,\n      l: 80,\n    }[scale];\n  }\n\n  private getInlineSize(scale: string) {\n    return {\n      s: 12,\n      m: 16,\n      l: 20,\n    }[scale];\n  }\n\n  private updateFormatter(): void {\n    if (\n      this.type !== \"determinate-value\" ||\n      this.formatter?.resolvedOptions().locale === this.effectiveLocale\n    ) {\n      return;\n    }\n\n    this.formatter = new Intl.NumberFormat(this.effectiveLocale, {\n      style: \"percent\",\n    });\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-loader-font-size: Specifies the font size of the loading percentage when type is `\"determinate\"`.\n * @prop --calcite-loader-size: The width and height of a non-inline loader.\n * @prop --calcite-loader-size-inline: The width and height of an inline loader\n * @prop --calcite-loader-padding : Specifies the padding of the loader.\n */\n\n@import \"../../assets/styles/animation\";\n\n$stroke-width: 3;\n$loader-scale: 54;\n$loader-circumference: ($loader-scale - (2 * $stroke-width)) * 3.14159;\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0;\n  }\n}\n\n:host {\n  @apply relative mx-auto hidden items-center justify-center opacity-100;\n  min-block-size: var(--calcite-loader-size);\n  font-size: var(--calcite-loader-font-size);\n  stroke: var(--calcite-color-brand);\n  stroke-width: $stroke-width;\n  fill: none;\n  transform: scale(1, 1);\n  animation: loader-color-shift scaleDuration(--calcite-internal-animation-timing-slow, 2) alternate-reverse infinite\n    linear;\n  padding-block: var(--calcite-loader-padding, theme(\"spacing.16\"));\n  will-change: contents;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-loader-font-size: var(--calcite-font-size--3);\n  --calcite-loader-size: theme(\"spacing.8\");\n  --calcite-loader-size-inline: theme(\"spacing.3\");\n  --calcite-internal-loader-value-line-height: 0.625rem; // 10px\n}\n\n:host([scale=\"m\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.0\");\n  --calcite-loader-size: theme(\"spacing.16\");\n  --calcite-loader-size-inline: theme(\"spacing.4\");\n  --calcite-internal-loader-value-line-height: 1.375rem; // 22px\n}\n\n:host([scale=\"l\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.2\");\n  --calcite-loader-size: theme(\"spacing.24\");\n  --calcite-loader-size-inline: theme(\"spacing.6\");\n  --calcite-internal-loader-value-line-height: 1.71875rem; // 27.5px\n}\n\n:host([no-padding]) {\n  @apply py-0;\n}\n\n:host {\n  @apply flex;\n}\n\n.loader__text {\n  @apply text-n2h\n  text-color-1\n  block\n  text-center;\n  margin-block-start: calc(var(--calcite-loader-size) + theme(\"spacing.6\"));\n}\n\n.loader__percentage {\n  @apply block text-center text-color-1;\n  font-size: var(--calcite-loader-font-size);\n  inline-size: var(--calcite-loader-size);\n  line-height: var(--calcite-internal-loader-value-line-height);\n  align-self: center;\n}\n\n.loader__svgs {\n  @apply absolute overflow-visible opacity-100;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  inset-inline-start: 50%;\n  margin-inline-start: calc(var(--calcite-loader-size) / 2 * -1);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-duration: scaleDuration(--calcite-internal-animation-timing-slow, 6.66);\n  animation-name: loader-clockwise;\n  display: flex;\n}\n\n.loader__svg {\n  @apply absolute top-0 origin-center overflow-visible;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  &--1 {\n    animation-name: loader-offset-1;\n  }\n  &--2 {\n    animation-name: loader-offset-2;\n  }\n  &--3 {\n    animation-name: loader-offset-3;\n  }\n}\n\n:host([type=\"determinate\"]),\n:host([type=\"determinate-value\"]) {\n  @apply animate-none;\n  stroke: var(--calcite-color-border-3);\n  .loader__svgs {\n    @apply animate-none;\n  }\n  .loader__svg--3 {\n    @apply animate-none;\n    stroke: var(--calcite-color-brand);\n    stroke-dasharray: $loader-circumference;\n    transform: rotate(-90deg);\n    transition: all var(--calcite-internal-animation-timing-fast) linear;\n  }\n}\n\n:host([inline]) {\n  @apply relative m-0 animate-none stroke-current stroke-2 py-0;\n  block-size: var(--calcite-loader-size-inline);\n  min-block-size: var(--calcite-loader-size-inline);\n  inline-size: var(--calcite-loader-size-inline);\n  margin-inline-end: calc(var(--calcite-loader-size-inline) * 0.5);\n  vertical-align: calc(var(--calcite-loader-size-inline) * -1 * 0.2);\n}\n\n:host([inline]) .loader__svgs {\n  @apply top-0 m-0;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([inline]) .loader__svg {\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([complete]) {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity var(--calcite-internal-animation-timing-medium) linear 1000ms,\n    transform var(--calcite-internal-animation-timing-medium) linear 1000ms;\n}\n\n:host([complete]) .loader__svgs {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms,\n    transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;\n}\n\n:host([complete]) .loader__percentage {\n  color: theme(\"colors.brand\");\n  transform: scale(1.05, 1.05);\n  transform-origin: center;\n  transition:\n    color var(--calcite-internal-animation-timing-medium) linear,\n    transform var(--calcite-internal-animation-timing-medium) linear;\n}\n\n/**\n  Segment variables\n  - i         index (1-3)\n  - size      length of the segment (0 - 100)\n  - growth    how much the segment grows during the animation\n              (size + growth should not exceed 100)\n  - duration  how long the segment takes to rotate 360° (seconds)\n*/\n@mixin generate-segment($i, $size, $growth, $duration) {\n  $circumference: calc($loader-circumference / $loader-scale) * 100;\n  $length: ($size * 0.01) * $circumference;\n  $end: $length + ($growth * 0.01) * $circumference;\n\n  .loader__svg--#{$i} {\n    stroke-dasharray: $length $circumference - $end;\n    animation-duration: $duration;\n  }\n  @keyframes loader-offset-#{$i} {\n    0% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: $end $circumference - $end;\n      stroke-dashoffset: -$circumference * 0.5 - ($length - $end) * 0.5;\n    }\n    100% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: -$circumference;\n    }\n  }\n}\n\n@include generate-segment(1, 10, 40, scaleDuration(--calcite-internal-animation-timing-slow, 4.8));\n@include generate-segment(2, 20, 30, scaleDuration(--calcite-internal-animation-timing-slow, 6.4));\n@include generate-segment(3, 05, 45, scaleDuration(--calcite-internal-animation-timing-slow, 7.734));\n\n@keyframes loader-color-shift {\n  0% {\n    stroke: var(--calcite-color-brand);\n  }\n  33% {\n    stroke: var(--calcite-color-brand-press);\n  }\n  66% {\n    stroke: var(--calcite-color-brand-hover);\n  }\n  100% {\n    stroke: var(--calcite-color-brand);\n  }\n}\n\n@keyframes loader-clockwise {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@include base-component();\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","Button","_inherits","_this","createObserver","updateHasContent","setTooltipText","type","href","submitForm","resetForm","contentEl","tooltipText","offsetWidth","scrollWidth","el","innerText","childEl","resizeObserver","_this$resizeObserver","observe","forceUpdate","this","key","value","connectInteractive","connectLocalized","connectMessages","setupTextContentObserver","connectLabel","formEl","findAssociatedForm","mutationObserver","_this$mutationObserve","disconnect","disconnectInteractive","disconnectLabel","disconnectLocalized","disconnectMessages","_this$resizeObserver2","setUpLoadableComponent","isBrowser","_context2","setUpMessages","setComponentLoaded","updateHostInteraction","_class2","_class3","_this2","childElType","Tag","loaderNode","loading","h","class","inline","label","messages","scale","noStartEndIcons","iconStart","iconEnd","iconStartEl","flipRtl","iconFlipRtl","icon","getIconScale","iconEndEl","ref","InteractiveContainer","disabled","toAriaBoolean","getAttribute","getLabelText","hasContent","download","name","onClick","handleClick","setChildEl","rel","tabIndex","target","title","_context3","componentFocusable","_this$childEl","focus","updateMessages","effectiveLocale","slottedContent","textContent","trim","length","childNodes","_this$el$childNodes$","nodeName","_this$el$textContent","_this$mutationObserve2","childList","subtree","setFocus","get","HTMLElement","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetchIcon","_fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","id","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","_this$intersectionObs","pathData","textLabel","dir","getElementDir","semantic","paths","concat","Host","role","fill","height","viewBox","width","xmlns","d","opacity","_context","fetchIconProps","callback","entries","forEach","entry","isIntersecting","_this3","rootMargin","loader","loaderParts","loaderPart","loaderPartId","partId","loaderText","loaderPercentage","Loader","formatter","format","updateFormatter","text","guid","getInlineSize","getSize","radius","viewbox","isDeterminate","startsWith","circumference","Math","PI","progress","remaining","valueNow","floor","hostAttributes","complete","svgAttributes","r","cx","cy","determinateStyle","index","style","formatValue","_this$formatter","resolvedOptions","locale","Intl","NumberFormat","componentLangToMessageBundleCache","getMessageBundle","_getMessageBundle","lang","component","ok","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","_setUpMessages","fetchMessages","_fetchMessages","tag","tagName","toLowerCase","componentName","getSupportedLocale","_updateMessages","_context4","onMessagesChange","defaultOnMessagesChange"],"sourceRoot":""}