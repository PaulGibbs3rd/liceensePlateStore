{"version":3,"file":"static/js/99174.12ef937f.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/loader/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.scss?tag=calcite-loader&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  loader: \"loader\",\n  loaderParts: \"loader__svgs\",\n  loaderPart: \"loader__svg\",\n  loaderPartId: (partId: number) => `${CSS.loaderPart}--${partId}` as const,\n  loaderText: \"loader__text\",\n  loaderPercentage: \"loader__percentage\",\n};\n","import { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-loader\",\n  styleUrl: \"loader.scss\",\n  shadow: true,\n})\nexport class Loader implements LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays smaller and appears to the left of the text. */\n  @Prop({ reflect: true }) inline = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible. Otherwise, use `\"determinate\"` to have the value indicate the progress or `\"determinate-value\"` to have the value label displayed along the progress.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" | \"determinate-value\";\n\n  /** The component's value. Valid only for `\"determinate\"` indicators. Percent complete of 100. */\n  @Prop() value = 0;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text = \"\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n\n    this.updateFormatter();\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n  }\n\n  render(): VNode {\n    const { el, inline, label, scale, text, type, value } = this;\n\n    const id = el.id || guid();\n    const radiusRatio = 0.45;\n    const size = inline ? this.getInlineSize(scale) : this.getSize(scale);\n    const radius = size * radiusRatio;\n    const viewbox = `0 0 ${size} ${size}`;\n    const isDeterminate = type?.startsWith(\"determinate\");\n    const circumference = 2 * radius * Math.PI;\n    const progress = (value / 100) * circumference;\n    const remaining = circumference - progress;\n    const valueNow = Math.floor(value);\n    const hostAttributes = {\n      \"aria-valuenow\": valueNow,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      complete: valueNow === 100,\n    };\n    const svgAttributes = { r: radius, cx: size / 2, cy: size / 2 };\n    const determinateStyle = { \"stroke-dasharray\": `${progress} ${remaining}` };\n    return (\n      <Host\n        aria-label={label}\n        id={id}\n        role=\"progressbar\"\n        {...(isDeterminate ? hostAttributes : {})}\n      >\n        <div class={CSS.loaderParts}>\n          {[1, 2, 3].map((index) => (\n            <svg\n              aria-hidden=\"true\"\n              class={{\n                [CSS.loaderPart]: true,\n                [CSS.loaderPartId(index)]: true,\n              }}\n              key={index}\n              viewBox={viewbox}\n              {...(index === 3 && isDeterminate ? { style: determinateStyle } : {})}\n            >\n              <circle {...svgAttributes} />\n            </svg>\n          ))}\n          {isDeterminate && <div class={CSS.loaderPercentage}>{this.formatValue()}</div>}\n        </div>\n        {text && <div class={CSS.loaderText}>{text}</div>}\n      </Host>\n    );\n  }\n\n  private formatValue = (): string => {\n    if (this.type !== \"determinate-value\") {\n      return `${this.value}`;\n    }\n\n    return this.formatter.format(this.value / 100);\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLoaderElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"type\")\n  formatterPropsChange(): void {\n    this.updateFormatter();\n  }\n\n  private formatter: Intl.NumberFormat;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Return the proper sizes based on the scale property\n   *\n   * @param scale\n   */\n  private getSize(scale: string) {\n    return {\n      s: 32,\n      m: 56,\n      l: 80,\n    }[scale];\n  }\n\n  private getInlineSize(scale: string) {\n    return {\n      s: 12,\n      m: 16,\n      l: 20,\n    }[scale];\n  }\n\n  private updateFormatter(): void {\n    if (\n      this.type !== \"determinate-value\" ||\n      this.formatter?.resolvedOptions().locale === this.effectiveLocale\n    ) {\n      return;\n    }\n\n    this.formatter = new Intl.NumberFormat(this.effectiveLocale, {\n      style: \"percent\",\n    });\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-loader-font-size: Specifies the font size of the loading percentage when type is `\"determinate\"`.\n * @prop --calcite-loader-size: The width and height of a non-inline loader.\n * @prop --calcite-loader-size-inline: The width and height of an inline loader\n * @prop --calcite-loader-padding : Specifies the padding of the loader.\n */\n\n@import \"../../assets/styles/animation\";\n\n$stroke-width: 3;\n$loader-scale: 54;\n$loader-circumference: ($loader-scale - (2 * $stroke-width)) * 3.14159;\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0;\n  }\n}\n\n:host {\n  @apply relative mx-auto hidden items-center justify-center opacity-100;\n  min-block-size: var(--calcite-loader-size);\n  font-size: var(--calcite-loader-font-size);\n  stroke: var(--calcite-color-brand);\n  stroke-width: $stroke-width;\n  fill: none;\n  transform: scale(1, 1);\n  animation: loader-color-shift scaleDuration(--calcite-internal-animation-timing-slow, 2) alternate-reverse infinite\n    linear;\n  padding-block: var(--calcite-loader-padding, theme(\"spacing.16\"));\n  will-change: contents;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-loader-font-size: var(--calcite-font-size--3);\n  --calcite-loader-size: theme(\"spacing.8\");\n  --calcite-loader-size-inline: theme(\"spacing.3\");\n  --calcite-internal-loader-value-line-height: 0.625rem; // 10px\n}\n\n:host([scale=\"m\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.0\");\n  --calcite-loader-size: theme(\"spacing.16\");\n  --calcite-loader-size-inline: theme(\"spacing.4\");\n  --calcite-internal-loader-value-line-height: 1.375rem; // 22px\n}\n\n:host([scale=\"l\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.2\");\n  --calcite-loader-size: theme(\"spacing.24\");\n  --calcite-loader-size-inline: theme(\"spacing.6\");\n  --calcite-internal-loader-value-line-height: 1.71875rem; // 27.5px\n}\n\n:host([no-padding]) {\n  @apply py-0;\n}\n\n:host {\n  @apply flex;\n}\n\n.loader__text {\n  @apply text-n2h\n  text-color-1\n  block\n  text-center;\n  margin-block-start: calc(var(--calcite-loader-size) + theme(\"spacing.6\"));\n}\n\n.loader__percentage {\n  @apply block text-center text-color-1;\n  font-size: var(--calcite-loader-font-size);\n  inline-size: var(--calcite-loader-size);\n  line-height: var(--calcite-internal-loader-value-line-height);\n  align-self: center;\n}\n\n.loader__svgs {\n  @apply absolute overflow-visible opacity-100;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  inset-inline-start: 50%;\n  margin-inline-start: calc(var(--calcite-loader-size) / 2 * -1);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-duration: scaleDuration(--calcite-internal-animation-timing-slow, 6.66);\n  animation-name: loader-clockwise;\n  display: flex;\n}\n\n.loader__svg {\n  @apply absolute top-0 origin-center overflow-visible;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  &--1 {\n    animation-name: loader-offset-1;\n  }\n  &--2 {\n    animation-name: loader-offset-2;\n  }\n  &--3 {\n    animation-name: loader-offset-3;\n  }\n}\n\n:host([type=\"determinate\"]),\n:host([type=\"determinate-value\"]) {\n  @apply animate-none;\n  stroke: var(--calcite-color-border-3);\n  .loader__svgs {\n    @apply animate-none;\n  }\n  .loader__svg--3 {\n    @apply animate-none;\n    stroke: var(--calcite-color-brand);\n    stroke-dasharray: $loader-circumference;\n    transform: rotate(-90deg);\n    transition: all var(--calcite-internal-animation-timing-fast) linear;\n  }\n}\n\n:host([inline]) {\n  @apply relative m-0 animate-none stroke-current stroke-2 py-0;\n  block-size: var(--calcite-loader-size-inline);\n  min-block-size: var(--calcite-loader-size-inline);\n  inline-size: var(--calcite-loader-size-inline);\n  margin-inline-end: calc(var(--calcite-loader-size-inline) * 0.5);\n  vertical-align: calc(var(--calcite-loader-size-inline) * -1 * 0.2);\n}\n\n:host([inline]) .loader__svgs {\n  @apply top-0 m-0;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([inline]) .loader__svg {\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([complete]) {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity var(--calcite-internal-animation-timing-medium) linear 1000ms,\n    transform var(--calcite-internal-animation-timing-medium) linear 1000ms;\n}\n\n:host([complete]) .loader__svgs {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms,\n    transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;\n}\n\n:host([complete]) .loader__percentage {\n  color: theme(\"colors.brand\");\n  transform: scale(1.05, 1.05);\n  transform-origin: center;\n  transition:\n    color var(--calcite-internal-animation-timing-medium) linear,\n    transform var(--calcite-internal-animation-timing-medium) linear;\n}\n\n/**\n  Segment variables\n  - i         index (1-3)\n  - size      length of the segment (0 - 100)\n  - growth    how much the segment grows during the animation\n              (size + growth should not exceed 100)\n  - duration  how long the segment takes to rotate 360° (seconds)\n*/\n@mixin generate-segment($i, $size, $growth, $duration) {\n  $circumference: calc($loader-circumference / $loader-scale) * 100;\n  $length: ($size * 0.01) * $circumference;\n  $end: $length + ($growth * 0.01) * $circumference;\n\n  .loader__svg--#{$i} {\n    stroke-dasharray: $length $circumference - $end;\n    animation-duration: $duration;\n  }\n  @keyframes loader-offset-#{$i} {\n    0% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: $end $circumference - $end;\n      stroke-dashoffset: -$circumference * 0.5 - ($length - $end) * 0.5;\n    }\n    100% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: -$circumference;\n    }\n  }\n}\n\n@include generate-segment(1, 10, 40, scaleDuration(--calcite-internal-animation-timing-slow, 4.8));\n@include generate-segment(2, 20, 30, scaleDuration(--calcite-internal-animation-timing-slow, 6.4));\n@include generate-segment(3, 05, 45, scaleDuration(--calcite-internal-animation-timing-slow, 7.734));\n\n@keyframes loader-color-shift {\n  0% {\n    stroke: var(--calcite-color-brand);\n  }\n  33% {\n    stroke: var(--calcite-color-brand-press);\n  }\n  66% {\n    stroke: var(--calcite-color-brand-hover);\n  }\n  100% {\n    stroke: var(--calcite-color-brand);\n  }\n}\n\n@keyframes loader-clockwise {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","loader","loaderParts","loaderPart","loaderPartId","partId","loaderText","loaderPercentage","Loader","_inherits","_this","type","value","formatter","format","connectLocalized","this","updateFormatter","key","disconnectLocalized","el","inline","label","scale","text","id","guid","size","getInlineSize","getSize","radius","viewbox","isDeterminate","startsWith","circumference","Math","PI","progress","remaining","valueNow","floor","hostAttributes","complete","svgAttributes","r","cx","cy","determinateStyle","h","Host","role","class","map","index","viewBox","style","formatValue","s","m","l","_this$formatter","resolvedOptions","locale","effectiveLocale","Intl","NumberFormat","get","HTMLElement","BREAKPOINTS","Scrim","createObserver","handleResize","event","hasContent","slotChangeHasContent","loaderEl","updateMessages","connectMessages","resizeObserver","_this$resizeObserver","observe","_context","setUpMessages","disconnectMessages","_this$resizeObserver2","disconnect","loading","messages","ref","storeLoaderEl","loaderScale","hidden","onSlotchange","handleDefaultSlotChange","getScale","min","clientHeight","clientWidth","componentLangToMessageBundleCache","getMessageBundle","_getMessageBundle","lang","component","fetch","getAssetPath","then","resp","ok","throwMessageFetchError","json","catch","Error","mergeMessages","defaultMessages","messageOverrides","noop","_setUpMessages","_context2","fetchMessages","_fetchMessages","isBrowser","_context3","tag","tagName","toLowerCase","componentName","replace","getSupportedLocale","_updateMessages","_context4","onMessagesChange","defaultOnMessagesChange"],"sourceRoot":""}