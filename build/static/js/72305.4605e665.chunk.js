"use strict";(self.webpackChunkreact_training=self.webpackChunkreact_training||[]).push([[72305],{3321:function(e,t,i){i.d(t,{DE:function(){return s},EQ:function(){return n},Yc:function(){return l},co:function(){return o},nY:function(){return a},pQ:function(){return u}});var r=i(49022);function s(e,t){if(null==e)return null;for(var i={},s=new RegExp("^".concat(t),"i"),a=0,n=Object.keys(e);a<n.length;a++){var o=n[a];if(s.test(o)){var u=o.substring(t.length);i[r.Ul.fromJSON(u)]=e[o]}}return i}function a(e,t,i){if(null!=e)for(var s in t.attributes||(t.attributes={}),e){var a=r.Ul.toJSON(s);t.attributes["".concat(i).concat(a)]=e[s]}}function n(e){for(var t={},i=0,s=Object.keys(e);i<s.length;i++){var a=s[i],n=a;t[r.Ul.fromJSON(n)]=e[a]}return t}function o(e){for(var t={},i=0,s=Object.keys(e);i<s.length;i++){var a=s[i],n=a;t[r.Ul.toJSON(n)]=e[a]}return t}function u(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function l(e){var t,i,r,s=e.toJSON(),a=s;return a.accumulateAttributeNames&&(a.accumulateAttributeNames=null===(t=s.accumulateAttributeNames)||void 0===t?void 0:t.join()),a.attributeParameterValues&&(a.attributeParameterValues=JSON.stringify(s.attributeParameterValues)),a.barriers&&(a.barriers=JSON.stringify(s.barriers)),a.outSR&&(a.outSR=null===(i=s.outSR)||void 0===i?void 0:i.wkid),a.overrides&&(a.overrides=JSON.stringify(s.overrides)),a.polygonBarriers&&(a.polygonBarriers=JSON.stringify(s.polygonBarriers)),a.polylineBarriers&&(a.polylineBarriers=JSON.stringify(s.polylineBarriers)),a.restrictionAttributeNames&&(a.restrictionAttributeNames=null===(r=s.restrictionAttributeNames)||void 0===r?void 0:r.join()),a.stops&&(a.stops=JSON.stringify(s.stops)),a.travelMode&&(a.travelMode=JSON.stringify(s.travelMode)),a}},70491:function(e,t,i){i.d(t,{Z:function(){return w}});var r,s=i(15671),a=i(43144),n=i(60136),o=i(29388),u=i(27366),l=i(52639),p=i(44055),d=i(51508),c=i(11582),m=i(46784),v=i(49861),y=(i(93169),i(32718),i(84936),i(38511)),b=i(69912),f=i(31201),T=i(848),h=i(3321),A=i(49022),S=r=function(e){(0,n.Z)(i,e);var t=(0,o.Z)(i);function i(e){var r;return(0,s.Z)(this,i),(r=t.call(this,e)).arriveCurbApproach=null,r.arriveTime=null,r.arriveTimeOffset=null,r.bearing=null,r.bearingTol=null,r.cumulativeCosts=null,r.cumulativeDistance=null,r.cumulativeDuration=null,r.curbApproach=null,r.departCurbApproach=null,r.departTime=null,r.departTimeOffset=null,r.distanceToNetworkInMeters=null,r.geometry=null,r.lateDuration=null,r.locationType=null,r.name=null,r.navLatency=null,r.objectId=null,r.popupTemplate=null,r.posAlong=null,r.routeName=null,r.serviceCosts=null,r.serviceDistance=null,r.serviceDuration=null,r.sequence=null,r.sideOfEdge=null,r.snapX=null,r.snapY=null,r.snapZ=null,r.sourceId=null,r.sourceOid=null,r.status=null,r.symbol=null,r.timeWindowEnd=null,r.timeWindowEndOffset=null,r.timeWindowStart=null,r.timeWindowStartOffset=null,r.type="stop",r.violations=null,r.waitDuration=null,r.wait=null,r}return(0,a.Z)(i,[{key:"readArriveTimeOffset",value:function(e,t){return(0,h.pQ)(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}},{key:"readCumulativeCosts",value:function(e,t){return(0,h.DE)(t.attributes,"Cumul_")}},{key:"readDepartTimeOffset",value:function(e,t){return(0,h.pQ)(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}},{key:"readServiceCosts",value:function(e,t){return(0,h.DE)(t.attributes,"Attr_")}},{key:"writeServiceCosts",value:function(e,t){(0,h.nY)(e,t,"Attr_")}},{key:"writeTimeWindowEnd",value:function(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}},{key:"writeTimeWindowStart",value:function(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}},{key:"readViolations",value:function(e,t){return(0,h.DE)(t.attributes,"Violation_")}},{key:"readWait",value:function(e,t){return(0,h.DE)(t.attributes,"Wait_")}},{key:"toGraphic",value:function(){var e,t,i={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?A.W7.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify((0,h.co)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?A.W7.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?A.W7.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?A.yP.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify((0,h.co)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?A.SS.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!==(e=this.timeWindowEndOffset)&&void 0!==e?e:this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!==(t=this.timeWindowStartOffset)&&void 0!==t?t:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new l.Z({geometry:this.geometry,attributes:i,symbol:this.symbol,popupTemplate:this.popupTemplate})}}],[{key:"fromGraphic",value:function(e){var t,i,s,a,n,o,u,l,p,d,c;return new r({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?A.W7.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?(0,h.EQ)(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:null!==(t=e.attributes.CumulativeMeters)&&void 0!==t?t:null,cumulativeDuration:null!==(i=e.attributes.CumulativeMinutes)&&void 0!==i?i:null,curbApproach:null!=e.attributes.CurbApproach?A.W7.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?A.W7.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:null!==(s=e.attributes.DepartureUTCOffset)&&void 0!==s?s:null,geometry:e.geometry,lateDuration:null!==(a=e.attributes.LateMinutes)&&void 0!==a?a:null,locationType:null!=e.attributes.LocationType?A.yP.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:null!==(n=e.attributes.ObjectID)&&void 0!==n?n:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:null!==(o=e.attributes.Sequence)&&void 0!==o?o:null,serviceCosts:null!=e.attributes.ServiceCosts?(0,h.EQ)(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:null!==(u=e.attributes.ServiceMeters)&&void 0!==u?u:null,serviceDuration:null!==(l=e.attributes.ServiceMinutes)&&void 0!==l?l:null,status:null!=e.attributes.Status?A.SS.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!==(p=e.attributes.TimeWindowEndUTCOffset)&&void 0!==p?p:null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:null!==(d=e.attributes.TimeWindowStartUTCOffset)&&void 0!==d?d:null,waitDuration:null!==(c=e.attributes.WaitMinutes)&&void 0!==c?c:null})}}]),i}((0,c.J)(m.wq));S.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],(0,u._)([(0,v.Cb)({type:A.W7.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:A.W7.read}}})],S.prototype,"arriveCurbApproach",void 0),(0,u._)([(0,v.Cb)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],S.prototype,"arriveTime",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"arriveTimeOffset",void 0),(0,u._)([(0,y.r)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],S.prototype,"readArriveTimeOffset",null),(0,u._)([(0,v.Cb)({json:{name:"attributes.Bearing",read:!1,write:!0}})],S.prototype,"bearing",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],S.prototype,"bearingTol",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"cumulativeCosts",void 0),(0,u._)([(0,y.r)("cumulativeCosts",["attributes"])],S.prototype,"readCumulativeCosts",null),(0,u._)([(0,v.Cb)()],S.prototype,"cumulativeDistance",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"cumulativeDuration",void 0),(0,u._)([(0,v.Cb)({type:A.W7.apiValues,json:{name:"attributes.CurbApproach",read:{reader:A.W7.read},write:{writer:A.W7.write}}})],S.prototype,"curbApproach",void 0),(0,u._)([(0,v.Cb)({type:A.W7.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:A.W7.read}}})],S.prototype,"departCurbApproach",void 0),(0,u._)([(0,v.Cb)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],S.prototype,"departTime",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"departTimeOffset",void 0),(0,u._)([(0,y.r)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],S.prototype,"readDepartTimeOffset",null),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],S.prototype,"distanceToNetworkInMeters",void 0),(0,u._)([(0,v.Cb)({type:T.Z,json:{write:!0}})],S.prototype,"geometry",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"lateDuration",void 0),(0,u._)([(0,v.Cb)({type:A.yP.apiValues,json:{name:"attributes.LocationType",read:{reader:A.yP.read},write:{writer:A.yP.write}}})],S.prototype,"locationType",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.Name"}})],S.prototype,"name",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],S.prototype,"navLatency",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.ObjectID"}})],S.prototype,"objectId",void 0),(0,u._)([(0,v.Cb)({type:p.Z})],S.prototype,"popupTemplate",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.PosAlong"}}})],S.prototype,"posAlong",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.RouteName"}})],S.prototype,"routeName",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"serviceCosts",void 0),(0,u._)([(0,y.r)("serviceCosts",["attributes"])],S.prototype,"readServiceCosts",null),(0,u._)([(0,f.c)("serviceCosts")],S.prototype,"writeServiceCosts",null),(0,u._)([(0,v.Cb)()],S.prototype,"serviceDistance",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"serviceDuration",void 0),(0,u._)([(0,v.Cb)({json:{name:"attributes.Sequence"}})],S.prototype,"sequence",void 0),(0,u._)([(0,v.Cb)({type:A.BW.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:A.BW.read}}})],S.prototype,"sideOfEdge",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.SnapX"}}})],S.prototype,"snapX",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.SnapY"}}})],S.prototype,"snapY",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.SnapZ"}}})],S.prototype,"snapZ",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.SourceID"}}})],S.prototype,"sourceId",void 0),(0,u._)([(0,v.Cb)({json:{read:{source:"attributes.SourceOID"}}})],S.prototype,"sourceOid",void 0),(0,u._)([(0,v.Cb)({type:A.SS.apiValues,json:{read:{source:"attributes.Status",reader:A.SS.read}}})],S.prototype,"status",void 0),(0,u._)([(0,v.Cb)({types:d.LB})],S.prototype,"symbol",void 0),(0,u._)([(0,v.Cb)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],S.prototype,"timeWindowEnd",void 0),(0,u._)([(0,f.c)("timeWindowEnd")],S.prototype,"writeTimeWindowEnd",null),(0,u._)([(0,v.Cb)()],S.prototype,"timeWindowEndOffset",void 0),(0,u._)([(0,v.Cb)({type:Date,json:{name:"attributes.TimeWindowStart"}})],S.prototype,"timeWindowStart",void 0),(0,u._)([(0,f.c)("timeWindowStart")],S.prototype,"writeTimeWindowStart",null),(0,u._)([(0,v.Cb)()],S.prototype,"timeWindowStartOffset",void 0),(0,u._)([(0,v.Cb)({readOnly:!0,json:{read:!1}})],S.prototype,"type",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"violations",void 0),(0,u._)([(0,y.r)("violations",["attributes"])],S.prototype,"readViolations",null),(0,u._)([(0,v.Cb)()],S.prototype,"waitDuration",void 0),(0,u._)([(0,v.Cb)()],S.prototype,"wait",void 0),(0,u._)([(0,y.r)("wait",["attributes"])],S.prototype,"readWait",null);var w=S=r=(0,u._)([(0,b.j)("esri.rest.support.Stop")],S)},77279:function(e,t,i){i.d(t,{Z:function(){return f}});var r=i(15671),s=i(43144),a=i(60136),n=i(29388),o=i(27366),u=i(11582),l=i(46784),p=i(49861),d=(i(93169),i(32718),i(84936),i(27135)),c=i(38511),m=i(69912),v=i(31201),y=i(49022),b=function(e){(0,a.Z)(i,e);var t=(0,n.Z)(i);function i(e){var s;return(0,r.Z)(this,i),(s=t.call(this,e)).attributeParameterValues=null,s.description=null,s.distanceAttributeName=null,s.id=null,s.impedanceAttributeName=null,s.name=null,s.restrictionAttributeNames=null,s.simplificationTolerance=null,s.simplificationToleranceUnits=null,s.timeAttributeName=null,s.type=null,s.useHierarchy=null,s.uturnAtJunctions=null,s}return(0,s.Z)(i,[{key:"readId",value:function(e,t){var i,r;return null!==(i=null!==(r=t.id)&&void 0!==r?r:t.itemId)&&void 0!==i?i:null}},{key:"readRestrictionAttributes",value:function(e,t){var i=t.restrictionAttributeNames;return null==i?null:i.map((function(e){return y.kL.fromJSON(e)}))}},{key:"writeRestrictionAttributes",value:function(e,t,i){null!=e&&(t[i]=e.map((function(e){return y.kL.toJSON(e)})))}}]),i}((0,u.J)(l.wq));(0,o._)([(0,p.Cb)({type:[Object],json:{write:!0}})],b.prototype,"attributeParameterValues",void 0),(0,o._)([(0,p.Cb)({type:String,json:{write:!0}})],b.prototype,"description",void 0),(0,o._)([(0,d.J)(y.D$,{ignoreUnknown:!1})],b.prototype,"distanceAttributeName",void 0),(0,o._)([(0,p.Cb)({type:String,json:{write:!0}})],b.prototype,"id",void 0),(0,o._)([(0,c.r)("id",["id","itemId"])],b.prototype,"readId",null),(0,o._)([(0,d.J)(y.Ul,{ignoreUnknown:!1})],b.prototype,"impedanceAttributeName",void 0),(0,o._)([(0,p.Cb)({type:String,json:{write:!0}})],b.prototype,"name",void 0),(0,o._)([(0,p.Cb)({type:[String],json:{write:!0}})],b.prototype,"restrictionAttributeNames",void 0),(0,o._)([(0,c.r)("restrictionAttributeNames")],b.prototype,"readRestrictionAttributes",null),(0,o._)([(0,v.c)("restrictionAttributeNames")],b.prototype,"writeRestrictionAttributes",null),(0,o._)([(0,p.Cb)({type:Number,json:{write:{allowNull:!0}}})],b.prototype,"simplificationTolerance",void 0),(0,o._)([(0,d.J)(y.q$)],b.prototype,"simplificationToleranceUnits",void 0),(0,o._)([(0,d.J)(y.ZI,{ignoreUnknown:!1})],b.prototype,"timeAttributeName",void 0),(0,o._)([(0,d.J)(y.DJ)],b.prototype,"type",void 0),(0,o._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],b.prototype,"useHierarchy",void 0),(0,o._)([(0,d.J)(y.ip)],b.prototype,"uturnAtJunctions",void 0);var f=b=(0,o._)([(0,m.j)("esri.rest.support.TravelMode")],b)},49022:function(e,t,i){i.d(t,{$7:function(){return d},BW:function(){return T},D$:function(){return N},DJ:function(){return v},Dd:function(){return A},E2:function(){return W},GX:function(){return l},KA:function(){return U},Ks:function(){return _},RK:function(){return o},S7:function(){return k},SS:function(){return f},Ul:function(){return D},W7:function(){return y},WP:function(){return C},ZI:function(){return g},cW:function(){return S},dg:function(){return p},dh:function(){return u},ip:function(){return m},kL:function(){return O},no:function(){return c},oi:function(){return h},q$:function(){return n},td:function(){return w},yP:function(){return b}});var r=i(1413),s=i(43404),a={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},n=(0,s.w)()(a),o=(0,s.w)()((0,r.Z)((0,r.Z)({},a),{},{esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"})),u=(0,s.w)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,s.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),p=((0,s.w)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),(0,s.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"})),d=(0,s.w)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=(0,s.w)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),m=((0,s.w)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,s.w)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),v=((0,s.w)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,s.w)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,s.w)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),y=(0,s.w)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),b=(0,s.w)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),f=(0,s.w)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),T=(0,s.w)()({1:"right",2:"left"},{useNumericKeys:!0}),h=(0,s.w)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),A=(0,s.w)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),S=(0,s.w)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),w=(0,s.w)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),C=(0,s.w)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),N=(0,s.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),g=(0,s.w)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D=(0,s.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),O=(0,s.w)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),k=(0,s.w)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),U=(0,s.w)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),W=(0,s.w)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),_=(0,s.w)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);
//# sourceMappingURL=72305.4605e665.chunk.js.map